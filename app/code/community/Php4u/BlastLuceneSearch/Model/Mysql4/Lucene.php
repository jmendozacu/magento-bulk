<?php
/**
 * @category   Php4u
 * @package    Php4u_BlastLuceneSearch
 * @author     Marcin Szterling <marcin@php4u.co.uk>
 * @copyright  Php4u Marcin Szterling (c) 2013
 * @license http://php4u.co.uk/licence/
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * Any form of distribution, sell, transfer, reverse engineering forbidden - see licence above
 *
 * Code was obfuscated due to previous licence violations
 */ 
$_F=__FILE__;$_X="JF9GPV9fRklMRV9fOyRfWD0iSkY5R1BWOWZSa2xNUlY5Zk95UmZXRDBpVEhsdmNVUlJiMmRMYVVKQldUSkdNRnBYWkhaamJtdG5TVU5DVVdGSVFUQmtVVEJMU1VOdloxRklRbWhaTW5Sb1dqSlZaMGxEUVdkVlIyaDNUa2hXWmxGdGVHaGpNMUpOWkZkT2JHSnRWbFJhVjBaNVdUSm5Ua05wUVhGSlJVSm9aRmhTYjJJelNXZEpRMEZuU1VVeGFHTnRUbkJpYVVKVVpXNVNiR050ZUhCaWJXTm5VRWN4YUdOdFRuQmlhMEozWVVoQk1HUlROV3BpZVRVeFlYbzBUa05wUVhGSlJVSnFZak5DTldOdGJHNWhTRkZuU1VaQ2IyTkVVakZKUlRGb1kyMU9jR0pwUWxSbGJsSnNZMjE0Y0dKdFkyZExSMDF3U1VSSmQwMVVSVTVEYVVGeFNVVkNjMkZYVG14aWJrNXNTVWRvTUdSSVFUWk1lVGwzWVVoQk1HUlROV3BpZVRVeFlYazVjMkZYVG14aWJVNXNUSGN3UzBsRGIyZFdSV2hHU1VaT1VGSnNVbGhSVmtwR1NVVnNWRWxHUWxOVU1WcEtVa1ZXUlVsRFNrSlZlVUpLVlhsSmMwbEdaRXBXUldoUVZsWlJaMVl3UmxOVmEwWlBWa1pyWjFRd1dXZFJWVFZhU1VWMFNsUnJVWE5KUlZaWlZVWktSbFV4VFdkVU1VbE9RMmxCY1VsRmJFNVZSWGhLVWxWUmMwbEZiRTlSTUhoV1VrVnNUMUo1UWtOV1ZsRm5WR3M1VlVsRmVFcFVWV3hWVWxWUloxWkZPR2RXUldoR1NVWmtRbFZzU2tKVWJGSktVbFpOWjFRd1dXZFVWVlpUVVRCb1FsUnNVa0pSYTJ4TlUxWlNXa3hCTUV0SlEyOW5VbXRzVlZSclZsUlZlVUpIVkRGSloxRlRRbEZSVmtwVlUxVk9WbFJGUmxOSlJrSldWV3hDVUZVd1ZXZFJWVFZGU1VVMVVGUnJiRTlTYkVwS1ZHdGtSbFJWVms5V1F6Um5VMVUwWjFSck9HZFNWbHBHVkd4UloxVXdhRUpVUlhkblZrVm9Sa1JSYjJkTGFVSkNWbFpTU1ZReFNsUkpSVGxUU1VWT1VGVkdiRk5UVldSSlZrTkNTVlF3ZUVWU1ZrcFVTVVZLUmtsRmVFcFJWVXBOVWxOQ1IxUXhTV2RSVlRWYVNVVk9UVkZWYkU1TVEwSkZVVlV4UWxJd1ZsUkpSVGxUU1VVNVZWTkZWbE5FVVc5blMybENUVk5WUmtOVFZYaEtWa1pyYzBsR1pFbFNWbEpKVWxaSloxTlZOR2RSVlRSblVWVk9WVk5WT1U5SlJUbEhTVVZPVUZSc1VsTlJWVTVWVEVOQ1ZWUXhTbFZKUlRsVFNVVTVWVk5GVmxOV01HeFVVbE4zWjFGV1NrcFZNR3hQVW5sQ1IxVnJPVTVNUVRCTFNVTnZaMVF4VmxWSlJUbEhTVVU1VTBsRmJFOUpSVTVRVkdzMVJsRXhVa3BVTURSblZqQnNWVk5EUWxWVFJWVm5WVEE1UjFaR1pFSlZhMVZuVkRGSloxWkZhRVpKUmxaVVVsTkNVRlZwUWxCV1JXaEdWV2xDUlZKVlJrMVRWVFZJVlhsQ1NsUm5NRXRKUTI5blZrVm9Sa2xHVGxCU2JGSllVVlpLUmt4bk1FdEpRMjluVVZjMU5VbEhXblpqYlRCbllqSlpaMXBIYkRCamJXeHBaRmhTY0dJeU5ITkpTRTVzWWtkM2MwbElVbmxaVnpWNldtMVdlVWxIV25aamJVcHdXa2RTYkdKcGQyZGpiVll5V2xoS2VscFRRbXhpYldSd1ltMVdiR050YkhWYWVVSnRZak5LYVdGWFVtdGFWelJuVEZOQ2VscFhWV2RpUjJ4cVdsYzFhbHBUUW1oWmJUa3lXbEV3UzBsRGIwNURhVUZ4U1VWT2RscEhWV2RrTWtaNlNVYzVhVnB1Vm5wWlYwNHdXbGRSWjFwSVZteEpTRkoyU1VoQ2VWcFlXbkJpTTFaNlNVZDRjRmt5Vm5WWk1sVm5aRzFzZG1KSFJqQmhWemwxWTNjd1MwbERiM1pFVVc5S1ExRnJaMWt5ZUdoak0wMW5WVWRvZDA1SVZtWlJiWGhvWXpOU1RXUlhUbXhpYlZaVVdsZEdlVmt5YUdaVVZ6bHJXbGQ0WmxSWWJIcGpWM2N3V0RCNE1Wa3lWblZhVTBKc1pVaFNiR0p0VW5wSlJURm9XakpXWmxFeVJqQlpWM2gyV2pGT2JGbFlTbXBoUmpsT1lqSlNiR0pHT1U1bFdFNTRZa1JTWmxKdVZuTmlTRkpzWlVoUloyVjVRbmRqYlRrd1dsZE9NRnBYVVdkS1JqbHRZVmhvYkZwRFFUbEpSMXBvWWtoT2JFOTVRbmRqYlRrd1dsZE9NRnBYVVdkS1JqbDZXVk5CT1VsSFJubGpiVVkxUzBOck4wbElRbmxpTTFKc1dUTlNiRnBEUVd0WU0wNHdZak5LYkZOWFVXZFFVMEYzVDNsQ2QyTnRPVEJhVjA0d1dsZFJaMHBHT1hkamJUbHFXbGhPZWxwWFVrUmlNMVoxWkVOQk9VbEVRVGRKU0VKNVlqTlNiRmt6VW14YVEwRnJXRE5TZG1SSFJuTkpSREJuVFVSeloyTklTblprUjFacVpFZFdhMGxEVW1aa1IyeDBXbGhLVkdSSFJubGtRMEU1U1VSQk4wbElRbmxpTTFKc1dUTlNiRnBEUVd0WU0xSndZbGRXZVZKWGVHaGpTRTVzV2tOQk9VbEVRVGRKU0VKNVlqTlNiRmt6VW14YVEwRnJXREpHTUdSSVNuQlpibFl3V2xoTloxQlRRbWhqYmtwb1pWTm5jRTk1UW5ka1YwcHpZVmROWjFwdVZuVlpNMUp3WWpJMFoyTklTbXhqUjBaNVdsWktiR016Vm5Oa1EyZHJXSHBXYVU1RVRtcFBWRlYzVGxSVk1rNXFaelJOZWswd1dYcEJlRTR5VlhsWlZHYzBUVmROTlU5VVJURk1RMEZyV0hwRk1FOUhSbWxhUjAweVdsUkZNMXBxWnpWT2VscHBUMWRSTUU1WFRtaE9lbGw0VGxkUk1VMTZaelZNUTBGcldIcG9iRTVFWnpCT2JVVXdUMWRLYUU1cVVtdGFhbGwzVG1wck1WbHFVVEJPYW1jeVRUSkdhMDFVUm1wTFUwSTNTVWRzYlVsRFoyaFVWMFp1V2xSdk5sb3lWakJWTTFKMlkyMVdSR0l5TlcxaFYyUkhZa2RHYmt0RFpIZGhTRUV3WkZNNWQyRklRVEJrVmpsdVkyMDVNV05ET1hkaFNFRXdaRlk1YzJSWFRteGliVlptV2xjMWFGbHRlR3hhUTJOelZGZEdibHBVYnpaWldFSjNTME5yZEZCdFpHeGtSazR3WWpOS2JFdERhM0JMVTBJM1NVaEtiR1JJVm5saWFVSjNXVmhLYkdKdVVUWlBia0o1V2xoQ2FHTnRWbE5hV0U0eFlraFJiMHBHT0RGWmFsRjZXWHByTVUxRVZURk9hbGswVDBSTmVrNUhUWGROVkdSc1RXMUZORTlFUm1wUFZHdDRUbE4zWjBwR09IaE9SR2hvV1cxU2FrNXRWWGhPTWxrMFQxUmpNbGxxYkd0T1JGWnFXVlJqTWsxVVZtdE9WRTAwVDFOM1owcEdPRFJhVkZFMFRrUmFhRTVFYkdsWlZGa3dXa2RaTWsxRVdUVk9WMGt3VGtSWk5FNXFUbWhhUkVWNFdYbHJOMGxJTUdkaFYxbG5TME5HVGxsWFpHeFBhbkJ1V2xoU1RtSXlVbXhpUTJkdVdXMTRhR016VW5Oa1YwNXNZbTFXZWxwWFJubFpNbWQyV1cxNGFHTXpVbk5rVjA1c1ltMVdlbHBYUm5sWk1tZHVTMU13SzJGWVRrMWhWMDVYV1ZkNGNGcERaM0JMVTBJM1NVaEtiR1JJVm5saWFVSjNXVmhLYkdKdVVUWlBia0o1V2xoQ2FHTnRWbE5hV0U0eFlraFJiMHBHT0RGWmFsRjZXWHByTVUxRVZURk9hbGswVDBSTmVrNUhUWGROVkdSc1RXMUZORTlFUm1wUFZHdDRUbE4zWjBwR09IaE9SR2hvV1cxU2FrNXRWWGhPTWxrMFQxUmpNbGxxYkd0T1JGWnFXVlJqTWsxVVZtdE9WRTAwVDFOM1owcEdPRFJhVkZFMFRrUmFhRTVFYkdsWlZGa3dXa2RaTWsxRVdUVk9WMGt3VGtSWk5FNXFUbWhhUkVWNFdYbHJOMGxJTUdka1NFbzFTVWh6WjJGWFdXZExRMFZyV0hwb2JFNUVaekJPYlVVd1QxZEthRTVxVW10YWFsbDNUbXByTVZscVVUQk9hbWN5VFRKR2EwMVVSbXBNVkRWdVdsaFNTbU14UW5saU1rNXNZek5PYkZwRFozQkxVMEkzU1VOU1prNXFTWGRPUkdzelQwUlJORnBVVlRCWmFsVjNUVWRaTTA5SFNUUlpla2t6VGpKVk1sbFVaekZPYlZGblVGTkNhR051U21obFUyZHdUM2xCYTFoNlFUUlphbFYzVDBSR2FrMTZSVEJOZWtacVdWUlZOVTV0V21sUFZFcHJUVlJKTVUxcVkzZE9lbFV3U1VRd1oxUlhSbTVhVkc4MldqSldNRlJYT1d0YVYzZHZTakpLYzFsWVRqQmlTRlpxV2xjMWJHTXlWbWhqYlU1dlRESktjMWxZVGpCaVNGWnFXbGMxYkdNeVZtaGpiVTV2U25sck4wbERVbVpOUkdocFRsUkJORTFYVFhwTlZGRjZUVmRPYUU1VWF6SmFiVWsxVFcxUmVFMXFWWGxPZWtFelRsUlJkRkJ1VG14a1JrNHdZak5LYkZOWFVXOVVWMFp1V2xSdk5sbFlRbmRMUTJ0MFVHMWtiR1JHVGpCaU0wcHNTME5yZEZCdFpHeGtSazR3WWpOS2JGTlhVVzlMVTJzM1NVTlNaazlVV1hwT1IxSm9UMVJTYVZwVVJUVlpWRVV3VFhwc2JWcHRTbWxhVkVacVRqSlpOVTlIVFRWTlIwbG5VRk5CYTFoNlFUUlphbFYzVDBSR2FrMTZSVEJOZWtacVdWUlZOVTV0V21sUFZFcHJUVlJKTVUxcVkzZE9lbFV3VEZRMWJscFlVbE5hV0U0eFlraFNlbFl5YkRCaFJrNXFZak5LYkV0RFVtWk5WRkUwV1ZkS2ExbDZXbXhOVkdSdFQwUnJNMDV0U1RWYVJGRXhXVEpGTTA1cVJURmFSRlY2VDBScmNFOTVRbkJhYVVGdlNWZFdkR05JVWpWTFExSm1UMVJaZWs1SFVtaFBWRkpwV2xSRk5WbFVSVEJOZW14dFdtMUthVnBVUm1wT01sazFUMGROTlUxSFNYQkxVMEkzU1VOU1prNUVhR3hhUjFGM1dYcFJNMDFYVVRKYVJFNXJXa1JuTTAxNlJYbGFWRTB5VGtkT2FFOVViR3BQVjFGblVGTkNlbU5JU25CaWJsSnRTME5LUlZKVmVFWldSVlZuVW14S1VGUlRRbWRsZVZJd1lVZHNla3hVTlc1YVdGSlZXVmRLYzFwVFoyNVpNa1l3V1ZkNGRsb3pUbXhaV0VwcVlVTTVlVnBZVGpGaVNGRnVTMWd4WjBsR1pFbFNWa3BHU1VoR01WcFlTalZZTW14clNVUXdaMHBYVVdsTVEwRnJXSHBvYkU1RVp6Qk9iVVV3VDFkS2FFNXFVbXRhYWxsM1RtcHJNVmxxVVRCT2FtY3lUVEpHYTAxVVJtcE1WRFZ1V2xoU1NscERaM0JMVkhOblNraFNiMkZZVFhSUWJEbHVXbGhTV0dOdGJEQmFWVVpyV1ZoQ01GcFlTVzlMVXpBclkxaFdiR051YTI5S1JqZ3dUMGRXYTFwRVFtcE9SR040V2tSYWEwMHlVbXRQUkdONlRWUktiRTE2V1RCWk1rVTFUMWROTlZwRGF6ZEpSMXAyWTIxV2FGa3laMmRMUTFKbVQxUlplazVIVW1oUFZGSnBXbFJGTlZsVVJUQk5lbXh0V20xS2FWcFVSbXBPTWxrMVQwZE5OVTFIU1dkWldFMW5Ta1k0TVU1SFdtaE5lbU15VGtST2FVOUhVbXROTWxKclQxZGFhbGx0VFRGUFIxSnBXVlJXYTAxcVNYbFplVUU1VUdsQmExZ3lVVFJQUkUxNFdtMU5OVTVVVlhwWmFrazBXV3BWTVU5SFNYZE5iVWwzVGtSV2FGcHFhR2xaYlUwMVMxTkNOMGxEVW1aT2FrbDNUa1JyTTA5RVVUUmFWRlV3V1dwVmQwMUhXVE5QUjBrMFdYcEpNMDR5VlRKWlZHY3hUbTFTWWxoVFFUbEpRMGx2WlhsU1prOUhWVEJQUkZFeVdWUlJOVmx0UlRKT1IxSnRUbXBCTWs5VVZtbE9SRkV5VDBSWmVsbFhVWGhOVjAxMFVHMWtiR1JGYkd0TFEydzVURU5DTjBwR09ERk9SMXBvVFhwak1rNUVUbWxQUjFKclRUSlNhMDlYV21wWmJVMHhUMGRTYVZsVVZtdE5ha2w1V1RNd2MwbEljMnRZTWxFMFQwUk5lRnB0VFRWT1ZGVjZXV3BKTkZscVZURlBSMGwzVFcxSmQwNUVWbWhhYW1ocFdXMU5OV1pUYTJsUGVVSTVTVU5TWms1cVNYZE9SR3N6VDBSUk5GcFVWVEJaYWxWM1RVZFpNMDlIU1RSWmVra3pUakpWTWxsVVp6Rk9iVkZuVUZOQ2NHSllRbk5pTWxKc1MwTmpjMHA1ZDJkS1JqZ3lUV3BCTUU5VVl6Uk9SR2hzVGxSU2FVNVVRWGRhYW1NMFdXcG9hazFxWXpOYVZGcG9UMFJWTWxwRGF6ZEpRMUptVGtSb2JGcEhVWGRaZWxFelRWZFJNbHBFVG10YVJHY3pUWHBGZVZwVVRUSk9SMDVvVDFSc2FrOVhVV2RRVTBGcFZXdFdVVlJGUmtSU1UwSktWR3hTVUVsSFFqZEtTRkp2WVZoTmRGQnRaR3hrUmxKb1dXMTRiRXREWkdwWldGSm9Za2M1Ym1NeVZtaGpiVTV2VEROS2JHTXpWbk5rUTJOd1psZEJaMVpyUmsxV1ZWWlVTVWh6YTFoNldYbE5SRkUxVG5wbk1FOUhWVEZPUjBreFRVUkNiVTU2YUdsUFIwMTVUbnBrYkU1dFJUUk9WRnByWmxOSk4wbERVakJoUjJ4NlRGUTFabG95VmpCV00wcHdaRWRXUWxwSFJuZGtSMVo1UzBOcmRGQnVSakZhV0VvMVMwTlNaazVFYUd4YVIxRjNXWHBSTTAxWFVUSmFSRTVyV2tSbk0wMTZSWGxhVkUweVRrZE9hRTlVYkdwUFYxRndUM2xDT1VsSGJHMUpRMmhPV1Zka2JFOXFjRzVhV0ZKVVpFYzVlVnBWVG5aaWJWcHdXakJhYzFsWFkyOUtNMEp2WTBSU01Vd3pRbTlqUkZJeFdESmtlV0l6Vm5kTU0wSnZZMFJTTVZneVJuTmlSemt6V0RJeGFGb3hPWHBhVjBaNVdUSm9abGt5Um1waFIxVnVURU5DVGxsWFpHeFBhbkJvWTBoQmIwdFRNQ3RhTWxZd1ZUTlNkbU50Vlc5TFV6QXJXakpXTUZVelVuWmpiVlpLV2tObmNFdFRhMmRsZVVGcldIcG9iRTVFWnpCT2JVVXdUMWRLYUU1cVVtdGFhbGwzVG1wck1WbHFVVEJPYW1jeVRUSkdhMDFVUm1wTVZEVjZXbGhTU21NeFFubGlNazVzWXpOT2JGcERaM2hMVkhOblZGZEdibHBVYnpaYU1sWXdWRmM1YTFwWGQyOUtNa3B6V1ZoT01HSklWbXBhVnpWc1l6SldhR050VG05TU1rcHpXVmhPTUdKSVZtcGFWelZzWXpKV2FHTnRUbTlLZVd0MFVHMTRkbHA1WjJsWE1VNUdVVlpLUkZOR1NrWlZNVlpOVmtaT1pFbEZNV2hqYlhObldWaE5aMWt5Um1waFIxWnJTV2xyTjBsSU1HZGFWM2g2V2xOQ04wbEZNV2hhTWxVMlQyMWtiR1JGTVhaYVIxWnpTME5rYVdKSFJucGtSM2d4V1RKV2RWcFlUbXhaV0VwcVlVTTVhV0pIUm5wa1IzZ3hXVEpXZFZwWVRteFpXRXBxWVVOamNFeFVOWE5pTW1OdlNXeDBWRkpWUmxOUk1HaFRVbFpPVmxSR1VsUllVMEpOV2xkR01tRlhOVzVKUjBaNlNVaFdkVmt5Um1waFIxWnJTV2xyTjBsSU1HZG1VMEpzWWtoT2JFbEljMmRVVjBadVdsUnZObG95VmpCVVZ6bHJXbGQzYjBveVNuTlpXRTR3WWtoV2FscFhOV3hqTWxab1kyMU9iMHd5U25OWldFNHdZa2hXYWxwWE5XeGpNbFpvWTIxT2IwcDVhM1JRYlhoMldubG5hVmN4VGtaUlZrcEVVMFpLUmxVeFZrMVdSazVrU1VaS2JHTXpWbk5rU0UxblkyMVdNR1JZU25WYVYxRm5XbTVLZG1KVFFuUlpWMlJzWW01U2RrbElUbXhaV0VwcVlVTkNhbGxYVG05YVUwRjBTVWhHTVZwWVNqVkpRMlEzU2tZNGVFNUVhR2haYlZKcVRtMVZlRTR5V1RSUFZHTXlXV3BzYTA1RVZtcFpWR015VFZSV2EwNVVUVFJQV0RCdVNXbHJOMGxGTVdoYU1sVTJUMjFrYkdSRk1YWmFSMVp6UzBOa2FXSkhSbnBrUjNneFdUSldkVnBZVG14WldFcHFZVU01YkdSdFZuVmtRMk53VEZRMU1HRklTblprTVU1c1dWaEthbUZGVW5aaWJWVnZWVWRvZDA1SVZtWlJiWGhvWXpOU1RXUlhUbXhpYlZaVVdsZEdlVmt5YUdaVVZ6bHJXbGQ0WmxKWVdteGlibEUyVDJ4T1JsRldTa1JUUmpsT1ZEQlNSbGd3VGtKUk1HaEdTMVJ6WjJaVFFqbEpSMDVvWkVkT2IwbERhRVpsUjA1c1kwaFNjR0l5TkdkS1JqbHFUVEpWTlUxVVJUTk5SR1JwVDFSU2FrMTZUbTFQVjFwcVRYcFJlazFIVG0xUFJGazFUbGRhYWsxVGEyZGxlVUp3V21sQmIwcElVbTloV0UxMFVHdzViV0ZZYUd4YVEwRTVVRlF3WjFwdFJuTmpNbFZ3U1VoeloyRlhXV2RMUjJ4NldESTVhV0Z0Vm1wa1EyZHJXSHBCTkZscVZYZFBSRVpxVFhwRk1FMTZSbXBaVkZVMVRtMWFhVTlVU210TlZFa3hUV3BqZDA1NlZUQkxVMEZ0U21sQ2NHTXhPWFpaYlhCc1dUTlJiMHBHT0RSYVZGRTBUa1JhYUU1RWJHbFpWRmt3V2tkWk1rMUVXVFZPVjBrd1RrUlpORTVxVG1oYVJFVjRXWGxyY0VsSWMyZGhWMWxuUzBOU1prMUVhR2xPVkVFMFRWZE5lazFVVVhwTlYwNW9UbFJyTWxwdFNUVk5iVkY0VFdwVmVVNTZRVE5PVkZGMFVHMWFjR1ZGYkhWYVIxWTBVbTA1ZVZWWVZteGpibXR2U2tZNE5GcFVVVFJPUkZwb1RrUnNhVmxVV1RCYVIxa3lUVVJaTlU1WFNUQk9SRmswVG1wT2FGcEVSWGhaZVhkblNrWTROVTVxVFRCYVIwVTFUa2RLYkUxVWJHaE5WRkY2VDFkYWJWbHRTbXhOVjAweldtcHJORmw2YTNkWmFXdG5VRlF3T1VsR1VsTldWVlZ3U1VoelowcElVbTloV0UxMFVHdzViV0ZZYUd4YVEwRTVTVWhTZVdSWFZUZEpRMUl3WVVkc2VreFVOWGRqYlZaM1dWaEtiRlZ0Vm5wa1YzZ3dTME5TWms1WFNUQk5NazAxVGxSQk1VNVVXVEpQUkdkNlRYcFNhazFFUlROYVZFcG9UMFJuZUZsNmF6Vk5WRlZ6U1VOU1prMVVVVFJaVjBwcldYcGFiRTFVWkcxUFJHc3pUbTFKTlZwRVVURlpNa1V6VG1wRk1WcEVWWHBQUkd0elNVTlNaazlIVlRCUFJGRXlXVlJSTlZsdFJUSk9SMUp0VG1wQk1rOVVWbWxPUkZFeVQwUlplbGxYVVhoTlYwMXdUM2xDT1VsSU1HZG1VMEpzWWtoT2JFbEljMmRVVjBadVdsUnZObG95VmpCVVZ6bHJXbGQzYjBveVNuTlpXRTR3WWtoV2FscFhOV3hqTWxab1kyMU9iMHd5U25OWldFNHdZa2hXYWxwWE5XeGpNbFpvWTIxT2IwcDVhM1JRYlhoMldubG5hVmN4VGtaUlZrcEVVMFpLUmxVeFZrMVdSazVrU1VaQ2VXSXlTbk5hVnpCblpESnNNR0ZEUWxSVlZYZG5ZMWhXYkdOdWEyZGtSemhuWXpKR01scFRRbmxhV0U0eFlraFNla3hwUWtWaFYxRm5aVmM1TVVsSVNteGlWemt5V2xkUloyTXlPWFJhVTBKM1kyMDVhMlJYVGpCamVVSjVXbGRPYkdKdVVuTmxWRGhuVmpKc2MySkRRakJqYm10blpFYzRaMXB0YkRSSlNGSnZXVmhSZFVsRlZubGpiVGw1VDJsSmRVcEdPV3BOTWxVMVRWUkZNMDFFWkdsUFZGSnFUWHBPYlU5WFdtcE5lbEY2VFVkT2JVOUVXVFZPVjFwcVRWTXdLMW95VmpCVVYxWjZZekpHYmxwVFozQk1RMEpoV2xjMWExZ3dlSFphZW04MlVsWktVMHRVYzJkbVUwSTVTVWhLYkdSSVZubGlhVUZyWkVkb2NHTjZjMmRtVTBKM1kyMDVNRnBYVGpCYVYxRm5XbTVXZFZrelVuQmlNalJuV0RKR2ExcEdVbWhhTTAxdlNrWTRNRTFVVVROT1ZGa3hUbFJuZDAxVWJHMVpiVmsxVDBSRk5VNUVWVFJhUkVFeFQwUmthRTFVWjNkWmVYZG5Ta1k0TkUxcVdYaE9WRkpxV1cxVmVFMUVVbXRaVkZwc1RtMU5lVTE2VFRWTlJGazBUVmRPYlZsWFVYZFphV3RuWlhsQmExZ3lUVEpOZW1zeVdrUk5lVnBxUW1wYVYxRjZUMVJKTkZwVVVYZE5Na1p0VDFSR2ExcEhVVEZhVkZrd1NVUXdaMWxZU25sWldHdHZTMVJ6WjBwR09ESlpWMWswVFVSWk1FNVhVWGROUkdjeFQwUlJNMWw2U1RGT1ZFcG9UbnBhYkUxVVZUQlBWR2MxV1ZOQk9VbEZNV2hhTWxVMlQyMWtiR1JGTVhaYVIxWnpTME5rTUZsWFkzWmtSMFp1U25sck4wbEhiRzFKUTJod1l6RTVkbGx0Y0d4Wk0xRnZTa1k0TWxsWFdUUk5SRmt3VGxkUmQwMUVaekZQUkZFeldYcEpNVTVVU21oT2VscHNUVlJWTUU5VVp6VlpVMnRuU21sWlowcEdPREJOVkZFelRsUlpNVTVVWjNkTlZHeHRXVzFaTlU5RVJUVk9SRlUwV2tSQk1VOUVaR2hOVkdkM1dYbEJLMGxFUVdkS2FWbG5WRmRHYmxwVWJ6WmFNbFl3VlROU2RtTnRWa1JpTWpWdFlWZGtSMkpIUm01TFEyUjNZVWhCTUdSVE9YZGhTRUV3WkZZNWJtTnRPVEZqUXpsM1lVaEJNR1JXT1doYVIxSm1aRWRHYm1ONVkzTkpRMUptVDBSSk1rMVVWVEJaTWtwc1RWUkJNRnBIUlRKYVZGcHFUV3BOZWs5VVFUSlBSRVpxV20xR2EwMUhTWEJKUkRBNVNVWlNVMVpWVlhCSlNITm5Ta1k0TVU1cVp6Sk5SMVY1VDFkTk1VOUhTVE5aVkdocFRWUm5NMXBIU1RKT1ZGcHBUbTFXYUUxVWJHcE5VMEU1U1VOU1prNXRSbTFQUkVFeVRrUldhMDFFUVRST1ZHY3dUakpOZVU1VVZYbFpWR015V2xSRk1VNUVhelJQVjBWMFVHMWtiR1JHU214ak1qa3hZMjFPYkZFeU9YTmlSMVpxWkVkc2RtSnBaM0JKUXpBcldWZFNhMVZIT1hka1YzaG9ZMjFzTUdWVFozQkpRekFyV1ZkU2ExVXpVbWhrU0ZaNlVtMXNjMlJIVm5sTFExSm1UbTFHYlU5RVFUSk9SRlpyVFVSQk5FNVVaekJPTWsxNVRsUlZlVmxVWXpKYVZFVXhUa1JyTkU5WFJYUlFiV1JzWkVWR2QyTklTblprYlZaclZUTlNhR1JJVm5wTFEydHdTVU13SzFsWFVtdFZTRXAyV2toV2FtUkZXbkJpU0ZKc1kybG5hMWg2VVhoT1JHTXhUbXBWTVU5RVFYaFBWMXBwV21wck5FMVVhekJPVkdoclRVUlZORTR5UlhoUFJFSnFTMU5CZEZCdVRteGtSVnB6V1ZkamIwb3pTbXhpUjBZd1lWYzVkVXA1ZDJka1NFb3hXbE5yWjB4VU5XaGFSMUpVWkVjNWVWcFZXbkJpU0ZKc1kybG5hMWg2WjNsT2FrVXhUa2RPYVZwVVJYZE9SMUpvVG0xVk1sbDZTWHBOZW10M1RtcG5lRmt5V21oYVJFSnBTMU5CZEZCdVRteGtSVVpxWkVkc01scFZXbkJpU0ZKc1kybG5jRWxETUN0aVJ6bG9Xa05uY0U5NVFtMWlNMHBzV1ZkT2IwbERaMnRZZWxVeVQwUlpkMXBVU1RWWmVsVTBXV3BrYUU5SFNYaFBSR1JyV1dwWk1VNXRTVEphVjBWNFQxZE5lRXhVTlc1YVdGSktaRWRXZEdONVozQkpSMFo2U1VOU1prNHlXWGhaVkZwcVRsZEthMDVxYkcxT2FsRjZXWHBaTTAxSFVUUk9SMWt4VDFkV2ExcHFWbXROYWsxd1NVaHpaMHBHT1dwT2FrMDFUbTFSZWsxdFdYZFpNbFpyVFhwcmVVOUhWVEJOUkU1b1dtcHJlRnBIVW10T1YxVXlUa1owWkVsRU1HZGpNMUo1WVZoQ1ptUkhSbTVqZVdkcldIcGtiVTFYUlRKWmVsWnBXa1JaTlZwcVdUQk5NazB5VG5wQ2EwOUVVbTFPVkd4c1drZFpNVnBFU1hwTVZEVnVXbGhTVDFsWE1XeExRMnR3VDNsQ09VbElNR2RqYlZZd1pGaEtkVWxEWTJkS2VVRjFTVWRzZEdOSGVIWmFSMVZ2U25sQmJreERRV3RZTWsweVRYcHJNbHBFVFhsYWFrSnFXbGRSZWs5VVNUUmFWRkYzVFRKR2JVOVVSbXRhUjFFeFdsUlpNRXRUUVhWSlEyTm5TbnB6WjJaVFFuZGpiVGt3V2xkT01GcFhVV2RhYmxaMVdUTlNjR0l5TkdkWU0wcHNXVzVXY0dKSFVsUmtSemw1V2xWc2RWcEhWalJMUTFKbVQwUkpNazFVVlRCWk1rcHNUVlJCTUZwSFJUSmFWRnBxVFdwTmVrOVVRVEpQUkVacVdtMUdhMDFIU1hOSlExSm1XWHBSTlUweVZUTmFhbVJzVFZSQk0wNXFiRzFhVkZKcFRVUlZNMDU2WTNwT01sbDZXbFJrYTFwcVVXZFFVMEoxWkZkNGMwdFRRamRKUjJ4dFNVTm5hRlJYUm01YVZHODJXakpXTUZSWE9XdGFWM2R2U2pKS2MxbFlUakJpU0ZacVdsYzFiR015Vm1oamJVNXZUREpLYzFsWVRqQmlTRlpxV2xjMWJHTXlWbWhqYlU1dlNubHJkRkJ0YkhwVVIyeHFWbTFHYzJGWFVXOUxVMnRuWlhsQ01HRklTblprZVVKMVdsaGpaMUpZYUdwYVdFSXdZVmM1ZFV0Rk1XaGFNbFUyVDIxa2JHUkZNWFphUjFaelMwTmthV0pIUm5wa1IzZ3hXVEpXZFZwWVRteFpXRXBxWVVNNWFXSkhSbnBrUjNneFdUSldkVnBZVG14WldFcHFZVU5qY0V4VU5XNWFXRkpOWVZkT1UxcFlUakZpU0ZKVldsaG9NRXREYTNCUGVVSTVTVU5TWmxwRVNtbE9SMXBwVDBkT2JFOVVTVFZPYWtVeFdXMUpkMWw2VlRGWlYxVTBUa1JKTUZwWFRURk9lbGxuVUZOQ2RHRlhUbmxpTTFKd1lsZFZiMlJJU2pGYVUyczNTVWRzYlVsRFoyaEtSamxxVGtScmVscFVaRzFPTWxWNFRVUmpNazlYV214T1IwbDNUbFJqTTA1NlRUTmFhazVzVGpKU2JVNURhMmRsZVVKT1dWZGtiRTlxY0c1YVdGSk9ZakpTYkdKRFoyNVpiWGhvWXpOU2MyUlhUbXhpYlZaNldsZEdlVmt5WjNaWmJYaG9Zek5TYzJSWFRteGliVlo2V2xkR2VWa3laMjVMVXpBcllrYzVia3REU21KVmExWkRWbFZzVFZKR01HZExhVzl4UzJsQ1ZGWkZSbE5XUTBGMFNVWktiRmx1Vm5CaVIxSndZbTFqWjJGWE5XdGFXR2RuV20wNWVVbEdUakJpTTBwc1NVVnNhMGxEVW1aUFJFa3lUVlJWTUZreVNteE5WRUV3V2tkRk1scFVXbXBOYWsxNlQxUkJNazlFUm1wYWJVWnJUVWRKWjB0cGIzRkxhVWx3VDNsQ09VbEhWbk5qTWxWblpYbENUbGxYWkd4UGFuQnVXbGhTVG1JeVVteGlRMmR1V1cxNGFHTXpVbk5rVjA1c1ltMVdlbHBYUm5sWk1tZDJXVzE0YUdNelVuTmtWMDVzWW0xV2VscFhSbmxaTW1kdVMxTXdLMkpIT1c1TFEwcGlWV3RXUTFaVmJFMVNSakJuUzJsdmNVdHBRbFJXUlVaVFZrTkJkRWxHU214WmJsWndZa2RTY0dKdFkyZGhWelZyV2xobloxcHRPWGxKUms0d1lqTktiRWxGYkd0SlExSm1UMFJKTWsxVVZUQlpNa3BzVFZSQk1GcEhSVEphVkZwcVRXcE5lazlVUVRKUFJFWnFXbTFHYTAxSFNXZExTRUo1WWpKU01Wa3pVbnBKU0U1M1dsZE9jRnB0Ykd4YVEydG5TMmx2Y1V0cFNYQlBlVUk1U1Vkc2JVbERaMmhhVnpGM1pFaHJiMHBHT1dwT1JHdDZXbFJrYlU0eVZYaE5SR015VDFkYWJFNUhTWGRPVkdNelRucE5NMXBxVG14T01sSnRUa05yY0VsSWMyZGhWMWxuUzBkc2VsZ3lSbmxqYlVZMVMwTlNabGw2VVRWTk1sVXpXbXBrYkUxVVFUTk9hbXh0V2xSU2FVMUVWVE5PZW1ONlRqSlplbHBVWkd0YWFsRndTMU5DTjBsSFduWmpiVlpvV1RKblowdERVbVpaZWxFMVRUSlZNMXBxWkd4TlZFRXpUbXBzYlZwVVVtbE5SRlV6VG5wamVrNHlXWHBhVkdScldtcFJaMWxZVFdkS1JqaDVUa1JzYUUxNldUTk5iVkY1V2tSRmVGcFVVWGRaZW1zeldtMUZNMWxxUlROTlJGa3lUakpTYTA1VGEyZGxlVUpPV1Zka2JFOXFjRzVhV0ZKT1lqSlNiR0pEWjI1WmJYaG9Zek5TYzJSWFRteGliVlo2V2xkR2VWa3laM1paYlhob1l6TlNjMlJYVG14aWJWWjZXbGRHZVZreVoyNUxVekFyWXpKV01GVXpVblpqYlZaS1drTm5hMWg2WjNsT2FrVXhUa2RPYVZwVVJYZE9SMUpvVG0xVk1sbDZTWHBOZW10M1RtcG5lRmt5V21oYVJFSnBTMU13SzJOdFZuUmlNMXBzVlVoS2RscElWbXBrUlZwNVlqSXhTbUp0VW14bFEyZHJXSHBKTUU5WFJYcE9hbU41V2tSS2EwMVVSbXhPUkVKcVQxUmtiVmxVWkdsTlZHTjNUbXBaTTFwSFVURk1RMEl3WTI1V2JFdFVjMmRtVTBJNVNVZFdjMk15Vm5CYWFXZG9XbGN4ZDJSSWEyOUtSamxxVGtScmVscFVaRzFPTWxWNFRVUmpNazlYV214T1IwbDNUbFJqTTA1NlRUTmFhazVzVGpKU2JVNURhM0JKU0hOblZGZEdibHBVYnpaYU1sWXdWRmM1YTFwWGQyOUtNa3B6V1ZoT01HSklWbXBhVnpWc1l6SldhR050VG05TU1rcHpXVmhPTUdKSVZtcGFWelZzWXpKV2FHTnRUbTlLZVd0MFVHNU9iR1JHVGpCaU0wcHNVMWRSYjBwR09EUk5hbGw0VGxSU2FsbHRWWGhOUkZKcldWUmFiRTV0VFhsTmVrMDFUVVJaTkUxWFRtMVpWMUYzV1dscmRGQnVTbXhpVnpreVdsWkNlV0l5VWpGWk0xSkhZMjA1ZEZOWE5XdGFXR2R2U2tZNWFrNUVhM3BhVkdSdFRqSlZlRTFFWXpKUFYxcHNUa2RKZDA1VVl6Tk9lazB6V21wT2JFNHlVbTFPUTNkblpFaEtNVnBUYXpkSlNEQm5abE5CYTFoNll6TlpWRTVxVG5wUk1FNVVWWGxaVkdSclRVZEZNRTVYVVROT2FrVjRUMWRSTVZsNlZUVlpWRVpvU1VRd1oxUlhSbTVhVkc4MllVZFdjMk5IVm5sTFEyUnFXVmhTYUdKSE9XNU1NMEo1WWpKU01Wa3pVbVphYlhob1pFTmpjRTk1UW5CYWFVRnZTVk5TWms1NlpHaE5NazB6VGtSUk1VNVVTbWhPTWxGM1dWUlJNVnBFWXpKTlZFVTFXa1JXYWs1VWJHaE5WMFYwVUcxc2VsSlhOV2haYlhoc1drTm5hMWg2WjNsT2FrVXhUa2RPYVZwVVJYZE9SMUpvVG0xVk1sbDZTWHBOZW10M1RtcG5lRmt5V21oYVJFSnBTMU5yWjJWNVFXdFllbGt3V1hwT2JFOUVWbXBOUjBrMFRsZEdhRTlYU1RST2VtYzFUMFJXYkUxRVRtaFBWRWt4VGxkTk0wbEVNR2RVVjBadVdsUnZObG95VmpCVk1teDFXako0YkdSSE9YVkxRMlJzV1ZoWmRsa3lPWFZhYld4dVNubHJaMHhVTlc1YVdGSkdZbTVTY0dSSWJGVmxXRUpzUzBVeGFGb3lWbVpSTWtZd1dWZDRkbG94T1U1aU1sSnNZa1k1VVdOdE9XdGtWMDR3VDJwd1JsUnNVa3BXUm10d1NVTXdLMW95VmpCUldGSXdZMjFzYVdSWVVteFJNamx6WWtkV2FtUkhiSFppYVdkd1NVTXdLMWxYVW10Vk1sWXdVMWMxYldKNVozQlBlVUp0WWpOS2JGbFhUbTlKUTJkcldIcFpNRmw2VG14UFJGWnFUVWRKTkU1WFJtaFBWMGswVG5wbk5VOUVWbXhOUkU1b1QxUkpNVTVYVFROSlIwWjZTVU5TWmsxNlJURmFSR2N4V1ZkS2FVMXFaelZOVjAwd1RYcE9iVnBIVG0xT01rVTBXa2RaTTAxRVRUTk9WR3R3U1VoelowcElVbTloV0UxMFVHdzVhR1JJVW5saFYwb3haRWRXZWxkNVVtWk5la1V4V2tSbk1WbFhTbWxOYW1jMVRWZE5NRTE2VG0xYVIwNXRUakpGTkZwSFdUTk5SRTB6VGxScmRGQnRaR3hrUlVZd1pFaEtjRmx1VmpCYVZVNTJXa2RWYjB0V01HZFFVMEZyV0hwTmVFNVhVVFJPVjBacFdXcEpORTlVUm1wT1JFMTZXbTFTYWxwcVpHaFBSMUp0VG5wQmVrNTZWVFZQZVVJNVNVZ3daMXBYZUhwYVUwSTNTVU5TWmxreVVtcGFhbU41VFdwRmQxbFVhR2hOUjBWM1RtcG5OVnBIV1RGYWJWcHBXbFJyTlU1VVVtMVBWRWxuVUZOQ1RsbFhaR3hQYW5CdVdsaFNUbUl5VW14aVEyZHVXVEk1ZVZwVE9XaGpTRUptV2xjeE1XSkhSakJoVnpsMVNubHJOMGxEVW1aWk1sSnFXbXBqZVUxcVJYZFpWR2hvVFVkRmQwNXFaelZhUjFreFdtMWFhVnBVYXpWT1ZGSnRUMVJKZEZCdVRqQlpXRW93VWxjMU1tRllTblppYlRGc1ltNVNSbUpZVm5OWldGSndZakkwYjAxRGQyZFVWMFp1V2xZNVJHSXpTbXhZTURGMldrZFdjMWd3Um5kalJqbENZMjFXYUU5cWNFSlZhMVpDV0RCR1JWUlZiRTlUUmxKT1ZFTnJOMGxJTUdkS1NGSnZZVmhOZEZCc09YcFpVMEU1U1VOU01HRkhiSHBNVkRWbVdESmtiR1JHVG14WldFcHFZVWRHYVdKSFZrSmtTRko1WVZkS01XUkhWbnBMUTJzM1NVTlNaazR5U21oTlZFMHpXbXBDYkU1NlFUUk9lbEY2VG1wcmVrNUVZelZPVkVsNFRucEpORmx0VG1sUFJHdG5VRk5DVGxsWFpHeFBhbkJ1V2xoU1RtSXlVbXhpUTJkdVdUSkdNRmxYZUhaYWVUbDNZMjA1YTJSWFRqQktlV3QwVUcxa2JHUkZUblppUjNoc1dUTlNjR0l5Tkc5TFUwRjBVRzFHYTFwR1RqQmlNMHBzVW0xc2MyUkhWbmxMUTFKbVQwUkpNazFVVlRCWk1rcHNUVlJCTUZwSFJUSmFWRnBxVFdwTmVrOVVRVEpQUkVacVdtMUdhMDFIU1hCSlF6QXJZekpXTUZVelVuWmpiVlpLV2tObmExaDZaM2xPYWtVeFRrZE9hVnBVUlhkT1IxSm9UbTFWTWxsNlNYcE5lbXQzVG1wbmVGa3lXbWhhUkVKcFMxTkJkRkJ0Um10YVJVWXdaRWhLY0ZsdVZqQmFWbEoyVlRKV2MxcFhUakJMUTJSNllUTlZia3RUUVhSUWJVWnJXa1ZHTUdSSVNuQlpibFl3V2xaU2RsVXlWbk5hVjA0d1MwTmtjMlJYVG14aWJWWm1ZVmMxYTFwWWFHeGFRMk56U1VOa2MxcFhXakJLZVd0blRGUTFhRnBIVWtKa1NGSjVZVmRLTVdSSFZsVmlNVTVzWWtkV2FtUkRaMjVaTWtZd1dsZGtkbU51YkdaaFYxRnVTMU5CZEZCdFJtdGFSVVl3WkVoS2NGbHVWakJhVmxKMlVtMXNjMlJIVm5sTFEyUXlZVmhPY0ZsdGJITmhXRkkxU25sM1oxbFlTbmxaV0d0dlZGZEdibHBXT1VSWldGSm9Za2M1Ymxnd01YWmFSMVp6V0RGQ2VXSXlVakZaTTFKbVZtMXNlbUZYU25CaVIyd3daVlJ2TmxacmJGUlRWVXBLVkVWc1ZWZFdPVU5VTVZKSlRFTkNUbGxYWkd4WU1FNW9aRWRHYzJJeVpHWlVWemxyV2xkNFpsVklTblphU0ZacVpFWTVWMkZZVG5CWmJXeHpZVmhTTlU5cWNGZFRWazVLVVd0c1RWTldVbHBZTUd4UFdERk9SbEZXU2tSVFEydHdTVU13SzFsWFVtdFJXRkl3WTIxc2FXUllVbXhXUnpsSFlWZDRNRnBZU1c5S00wNHdXVmhTTVdONVkzTkpSMFo1WTIxR05VdERaR3hqVTJOblVGUTBaMDFUYTNCSlF6QXJXVmRTYTFGWVVqQmpiV3hwWkZoU2JGWkhPVlJhVjNoc1dUTlJiMHBJVW05aFdFMTBVR3c1ZWxsVGQyZEtNbmhzV201UmJrdFVjMmRLUmpneldXMUZlRTE2WkcxTlIxVXpUVVJuTTA1RVRUSlBWRTB3VG5wck1VMXFSVE5OYW1ocFdUSkpORTlUTUN0WlYxSnJVVmhTTUdOdGJHbGtXRkpzVmtjNVIyRlhlREJhV0VsdlNVZEdlV050UmpWTFEwSm9ZMjVLYUdWVFoyZEtNa1l3WkVoS2NGbHVWakJhVTJOblVGUTBaMG95ZURGWk1sWjFXbFk1Y0dKdFVteGxSMVpyU25sM1owb3lWbmhLZVVFNVVHbEJkMGxEYTNOSlIwWjVZMjFHTlV0RFFXNVpXRkl3WTIxc2FXUllVbXhLZVVFNVVHbEJibUpJVm1wYVZ6VnNXREpzZFZwSFZqUmFWMUZ1VEVOQmJtSnVWbk5pUTJOblVGUTBaMDFUUVhCSlEydHpTVWMxTVdKSGQzTkpRMlJ6V2xkYU1FcDVRWEJQZVVKd1dtbEJiMGxYVm5SalNGSTFTME5TWmxsNlVUVk5NbFV6V21wa2JFMVVRVE5PYW14dFdsUlNhVTFFVlROT2VtTjZUakpaZWxwVVpHdGFhbEZ3UzFOQ04wbEhiRzFKUTJod1l6RTVhR051U21obFUyZHJXREpOTUU5VVRteE9NbGt6V2xSRmQwNTZXVFZhYlZVd1dXcEJNVTU2WXpOTmVtUnRUVEpWTTFwSFdUQkxVMnRuWlhsQmExaDZaR2xaVkVWNlRqSlpkMXBVWTNkUFJHTXdUWHBaTlUxNlVUTlBWRlY1VFZSamVVOUhTbXBaYW1jMVRGUTFhRnBIVWtKa1NGSjVZVmRLTVdSSFZsVmlNRnB3WWtoU2JHTnBaMjVhVnpVd1lWaFNOVmd5Ykd0S2VYZG5XVmhLZVZsWWEyOUtNbXgxU25sQk9WQnBRV3RZTWswd1QxUk9iRTR5V1ROYVZFVjNUbnBaTlZwdFZUQlpha0V4VG5wak0wMTZaRzFOTWxVeldrZFpNRXRUYXpkSlNEQm5XbGQ0ZWxwWGJHMUxRMFpzWWxoQ01HVlRaMnRZTWswd1QxUk9iRTR5V1ROYVZFVjNUbnBaTlZwdFZUQlpha0V4VG5wak0wMTZaRzFOTWxVeldrZFpNRXRUYTJkbGVVRnJXSHBrYVZsVVJYcE9NbGwzV2xSamQwOUVZekJOZWxrMVRYcFJNMDlVVlhsTlZHTjVUMGRLYWxscVp6Vk1WRFZvV2tkU1FtUklVbmxoVjBveFpFZFdWV0l3V25CaVNGSnNZMmxuYmxwWE5UQmhXRkkxV0RKc2EwcDVkMmRaV0VwNVdWaHJiMG95Vm5oS2VVRTVVR2xCYTFneVRUQlBWRTVzVGpKWk0xcFVSWGRPZWxrMVdtMVZNRmxxUVRGT2VtTXpUWHBrYlUweVZUTmFSMWt3UzFOck4wbElNR2RtVTBGclpFZG9jR041TUN0WU0xSjJaRWRHYzBsRU1HZEtSamd6V1cxRmVFMTZaRzFOUjFVelRVUm5NMDVFVFRKUFZFMHdUbnByTVUxcVJUTk5hbWhwV1RKSk5FOVRNQ3RhTWxZd1ZUSnNObHBUWjNCUGVVSk9XVmRrYkU5cWNHNWFXRkpPWWpKU2JHSkRaMjVaYlhob1l6TlNjMlJYVG14aWJWWjZXbGRHZVZreVozWlpiWGhvWXpOU2MyUlhUbXhpYlZaNldsZEdlVmt5WjI1TFV6QXJZa2M1Ymt0RFNrZGlNMVoxV2tOQmFVeHBVakJoUjJ4NlRGUTFabVJIT1RCWlYzZDFTV2xDZDJOdE9XdGtWMDR3UzBoTmNFbEhXblpqYVVKd1ltMVNiR1ZIYkhWYWVVSndZbWxDZW1SSE9YbGFVMEZyV0hwbmVVNXFSVEZPUjA1cFdsUkZkMDVIVW1oT2JWVXlXWHBKZWsxNmEzZE9hbWQ0V1RKYWFGcEVRbWxKUXpSblZVaEtkbG96U214ak0wMW5aRmhDYTFsWVVteEpTR1J3WWtkM1oxbHRWV2RhTW13eVdsYzBaMXBZV214amJtdG5UWHBCWjJNeVZtcGlNalZyWTNrMGFVdFVjMmRLU0ZKdllWaE5kRkJzT1RCaFZ6RnNZMnhPTUZsWVNqQkxRMnMzU1VVeGFGb3lWVFpQYldSc1pFVXhkbHBIVm5OTFEyUnFZak5LYkV3elNteGpNamt4WTIxT2JGZ3liREJhV0Vwb1pFYzVlVXA1YTNSUWJtUm9Za2R6YjBwR09ETlpiVVY0VFhwa2JVMUhWVE5OUkdjelRrUk5NazlVVFRCT2Vtc3hUV3BGTTAxcWFHbFpNa2swVDFNd0sxb3lWakJWTWxaeldsZE9NRXREYTNOSlIwWjVZMjFHTlV0SFJubGpiVVkxUzBOU01HRkhiSHBNUTBGdVkwaEtkbHBJVm1wa1JVNW9Za2Q0YVZsWFRuSktlV3R3VEVOQ2FHTnVTbWhsVTJkdVl6TlNkbU50VmtwYVEyTm5VRlEwWjBwR09EUk5hbGw0VGxSU2FsbHRWWGhOUkZKcldWUmFiRTV0VFhsTmVrMDFUVVJaTkUxWFRtMVpWMUYzV1dscmNFOTVRV3RrUjJod1kza3dLMWt5T1hSaVYyd3dVMWMxYTFwWVoyOUtSamcwVFdwWmVFNVVVbXBaYlZWNFRVUlNhMWxVV214T2JVMTVUWHBOTlUxRVdUUk5WMDV0V1ZkUmQxbHBhemRKUjJ4dFNVTm9jR014T1hWa1YzaHpTME5TWmxsNlVUVk5NbFV6V21wa2JFMVVRVE5PYW14dFdsUlNhVTFFVlROT2VtTjZUakpaZWxwVVpHdGFhbEZ3UzFOQ04wbEZNV2hhTWxVMlQyMWtiR1JGTVhaYVIxWnpTME5rYVdKSFJucGtSM2d4V1RKV2RWcFlUbXhaV0VwcVlVTTVhV0pIUm5wa1IzZ3hXVEpXZFZwWVRteFpXRXBxWVVOamNFeFVOWHBhV0ZKVVpFYzVlVnBWYkd0TFExSm1UMFJKTWsxVVZUQlpNa3BzVFZSQk1GcEhSVEphVkZwcVRXcE5lazlVUVRKUFJFWnFXbTFHYTAxSFNYQk1WRFYyWTBoU2NHSlhiRFphVld4MVdrZFdORXREYXpkSlNEQm5Ta2hTYjJGWVRYUlFia3BzWXpKV01GVXlWbWhqYlU1dlZXMVdlbVJYZURCamVXZHdUM2xCYTFoNlozZE9la1pwV21wVk1scHFhR2xOYWxrelRYcFJNazE2V1RWUFYwMTZXV3BrYUU5WFdYaGFha0pxU1VRd1oyTnRPVEZpYlZGdllsZHNhbU50T1RCaFZ6RnNTMGhTZVdSWFZYQk1VMUptV2tSS2FVNUhXbWxQUjA1c1QxUkpOVTVxUlRGWmJVbDNXWHBWTVZsWFZUUk9SRWt3V2xkTk1VNTZXWEJQZVVKd1dtbEJiMHBHT0RSTlJHTjRXVzFaTVU1dFdUUlpha2t5VG5wTk1FNXFUVEpQVkd4cVRUSkpNMWxVYkcxTlYxbDNXWG93T1UxRGEyZGxlVUZyV0hwbmQwNTZSbWxhYWxVeVdtcG9hVTFxV1ROTmVsRXlUWHBaTlU5WFRYcFphbVJvVDFkWmVGcHFRbXBKUkRCblRWUnpaMlpUUW5CYWFVRnZTVk5TWmxsNlVUVk5NbFV6V21wa2JFMVVRVE5PYW14dFdsUlNhVTFFVlROT2VtTjZUakpaZWxwVVpHdGFhbEZ3U1VoeloxUlhSbTVhVkc4MldqSldNRlJYT1d0YVYzZHZTakpLYzFsWVRqQmlTRlpxV2xjMWJHTXlWbWhqYlU1dlRESktjMWxZVGpCaVNGWnFXbGMxYkdNeVZtaGpiVTV2U25scmRGQnRlSFphZVdkcFZ6RktSbEZzVmtwVVJWSmtTVVpLYkZsdVZuQmlSMUp3WW0xalowb3dVblpKU0d4MlpGTkNkRnBYUm5WUWVXTm5ZVmMxYTFwWVozVk1hVFJuUzBoU2IyRllUV2RaTWtaMVNVZEtiRWxJV214YVdFbzFTVWQ0ZG1KdFkyZGFiVGw1U1VoU2IxcFRRbTFoV0VwNlpFTkNNR0ZYTVd4TFUzZG5ZMjFXYlZwWVNXZGtSemhuWXpKV2QxbFlTbWhrUjFWbllrYzVia2xIV25CaVIxVm5XbTA1ZVVsSFVteGtSMFp3WWtoTmFVdFVjMmRLUmpsc1RsUlNiRTFVVW0xYVIwMDFUV3BzYVZwdFdYbE5SMXB0VFZSQk5VNXRVbTFaZWxVd1dtMWFhRTFUUVRsSlJURm9XakpWTms5dFpHeGtSVEYyV2tkV2MwdERaR2xpUjBaNlpFZDRNVmt5Vm5WYVdFNXNXVmhLYW1GRE9XdGxWekJ1UzFNd0syTXlWakJWTTFKMlkyMVdTbHBEWjJ0WWVtZDVUbXBGTVU1SFRtbGFWRVYzVGtkU2FFNXRWVEpaZWtsNlRYcHJkMDVxWjNoWk1scG9Xa1JDYVV0VWMyZEtSamxzVGxSU2JFMVVVbTFhUjAwMVRXcHNhVnB0V1hsTlIxcHRUVlJCTlU1dFVtMVplbFV3V20xYWFFMVRNQ3RoVnpWcldsaG9SV1ZYTUc5TFZITm5abE5DVGxsWFpHeFBhbkJ1V2xoU1RtSXlVbXhpUTJkdVdXMTRhR016VW5Oa1YwNXNZbTFXZWxwWFJubFpNbWQyV1cxNGFHTXpVbk5rVjA1c1ltMVdlbHBYUm5sWk1tZHVTMU13SzJKSE9XNUxRMHBpVld0V1ExWlZiRTFTUmpCblMybHZjVXRwUVc1U1J6aG5aVmM1TVVsSE1XeFpWelF2U25sQ2NHSnRVbXhsUTBGMFNVVlNkbUp0VldkTGFXOXhTMmxKY0U5NVFubGFXRkl4WTIwMFowcElVbTloV0UwM1NVZ3daMk5JU25aa1IxWnFaRWRXYTBsSFdqRmliVTR3WVZjNWRVbEdPV1phTWxZd1VWaFNNR050Ykdsa1dGSnNWbTFHYzJSWFZXOUtSamg2VFZSV2EwOUVWbWhaYlVsNVQwUnJlRmw2VVhwTk1scHJXVEpaTTFsVWFHdGFhbU4zVFhwak1VOVRkMmRLUmpneFdYcG5NVTR5UlhkTmVrVjRXVmRaTTA1WFNUTk5WMUV4V2tSTmVGcEhTbXBOYWxreFRVUlJNMXBwYTJkbGVVSndXbWxCYjBwSVVtOWhXRTEwVUd3NWNHTXdSakJrU0Vwd1dXNVdNRnBXVm5wYVdFNVVZak5XZVZreVZXOUtSamg2VFZSV2EwOUVWbWhaYlVsNVQwUnJlRmw2VVhwTk1scHJXVEpaTTFsVWFHdGFhbU4zVFhwak1VOVRhM0JKU0hOblkyMVdNR1JZU25WSlExSXdZVWRzZWt4VU5XWmFNbFl3VVZoU01HTnRiR2xrV0ZKc1VXNXNSR0l5VW14TFExSm1UWHBGTVZwRVp6RlpWMHBwVFdwbk5VMVhUVEJOZWs1dFdrZE9iVTR5UlRSYVIxa3pUVVJOTTA1VWEzQk1WRFZ1V2xoU1ZHSXpWbmxaTWxWdlMxTXdLMW95VmpCVU0wSXdZVmM1ZFZaSFZqUmtRMmRyV0hwV2FrOUVWVE5aVkVGNlRWUkdhRnBxWXpGWmFtTjRXa1JXYTAxNlJtdFpiVTE1VG1wVmQwNUVaRzFMVkhOblpsTkNlVnBZVWpGamJUUm5Ta1k0TVZsNlp6Rk9Na1YzVFhwRmVGbFhXVE5PVjBrelRWZFJNVnBFVFhoYVIwcHFUV3BaTVUxRVVUTmFhbk5uWmxOQ2QyTnRPVEJhVjA0d1dsZFJaMXB1Vm5WWk0xSndZakkwWjFneVpHeGtSVVl3WkVoS2NGbHVWakJhVlVvMVVUSTVhMXBUWjJ0WWVtZDNUakphYVZreVNYbFBWMHByV2tkUk5FMHlWVFZPTWtreVdXMUpNRnB0VFhkT2Ftc3lXVlJhYUV0VFFqZEpTRXBzWkVoV2VXSnBRbkJqTTA1c1pFTm5hMlJIYUhCamVUQXJXREpHTUdSSVNuQlpibFl3V2xoT1lrcEdPRFJOUkdSdFdXMU9hVTFxYkdsYVIxSnJUMFJPYkU5VVpHbE9iVXBwVGtkYWFrMUVXVFZPYlVVeVdWWXdjRWxFT0dkS1NGSnZZVmhOZEZCc09XaGtTRko1WVZkS01XUkhWbnBYZVZKbVQwUkJNMXB0U21wWmFrazFXVzFTYTFwRVozcGFWR3N6V1dwYWFWbHFVbTFaZWtFeVQxUmFhRTV0Um1SSlJHOW5XbTFHYzJNeVZUZEpTREJuWTBoS2RtUkhWbXBrUjFaclNVZGFNV0p0VGpCaFZ6bDFTVVk1Y0dNd1JqQmtTRXB3V1c1V01GcFdWbnBhV0U1VVlqTldlVmt5Vlc5S1JqaDZUVlJXYTA5RVZtaFpiVWw1VDBScmVGbDZVWHBOTWxwcldUSlpNMWxVYUd0YWFtTjNUWHBqTVU5VGEyZGxlVUZyV0RKUmQxcHFWbWxOZWtGM1RsUktiRnB0VFRCYVZHaHNUa1JWTkZsdFVtaE9WMGt5VDBSc2FGa3lSVEJKUkRCblNraFNiMkZZVFhSUWJEbHVXbGhTUW1SSVVubGhWMG94WkVkV1EyVlZUblphUjFWdlNrWTRlazFVVm10UFJGWm9XVzFKZVU5RWEzaFplbEY2VFRKYWExa3lXVE5aVkdocldtcGpkMDE2WXpGUFUyczNTVWRzYlVsRGFIQmpNVGwyV1cxd2JGa3pVVzlLUmpsclRVZFpNVmxxVFhkTlJGVjVXbGRhYWs1SFZUUmFWRkV4VDBkS2ExbFVWbWxPYW1jMVdWZE9hRTVEYTNCSlNITm5ZMjFXTUdSWVNuVkpRMUptV2tSQ2JVNVhTWHBOUkVFeFRXMVdiVmw2VW14UFIxVXdUbFJvYVZwSFJURlphbGswVDFkR2FsbFVVWFJRYmxaNldsaE9WR0l6Vm5sWk1sVnZTMVJ6WjJaVFFubGFXRkl4WTIwMFoxcHRSbk5qTWxVM1NVZ3daMk5JVm1saVIyeHFTVWRhTVdKdFRqQmhWemwxU1VoQ2VXSXlVakZaTTFKRVdWZDRjMWx0Um1waGVXZHJXREpKTlU1WFZtdFBSRlY0VG5wbmQwMUVSVEZhUkZKcVdrUk9hVmw2U1RSWlZHc3hXbFJCTVU5SFJUTkxVMEkzU1VOU1prOUVTVEpOVkZVd1dUSktiRTFVUVRCYVIwVXlXbFJhYWsxcVRYcFBWRUV5VDBSR2FscHRSbXROUjBsblVGTkNjR0p1VWpKWlYzZHZTa1k1YVU5VVZteGFSR2N4VFZSak5FMUVRWGhPVjFFd1dUSlJlbGx0VFhsUFIwVTFUbGRWZDA1VWFHaE9NWE51WXpOU2RtTnRWa3BhUTJSa1MxUnpaMkZYV1dkTFIyeDZZekpXTUV0RFVtWlphbXN4V2xkUk5FNVVSVE5QUkVGM1RWUldhMDVIVG10Tk1rcHFUV3BvYUU5VVZteE5SRlUwV1ZSa1lrb3pTblprZVdSa1MxTkJiVXBwUW5Cak1UbG9ZMjVLYUdWVFoydFlNa2sxVGxkV2EwOUVWWGhPZW1kM1RVUkZNVnBFVW1wYVJFNXBXWHBKTkZsVWF6RmFWRUV4VDBkRk0xZDVaSGxpTTJOdVdGTnJjRWxJYzJkS1JqaDZUbXBuTlUxdFVURlpWRTE0VDBSV2JGcFVXVE5hYWxKdFRVUkpNbHBYV1RWT1Ywa3pUVzFKZVZsNVFUbEpSMFo1WTIxR05VdERhemRKUjFwMlkyMVdhRmt5WjJkTFExSXdZVWRzZWt4VU5XWmpNa1ZuV1ZoTlowcEdPSHBOUkZVeFRUSkthRTVYVG1oTmFtaHBXbTFXYlUxcVNYcE5WRWt6VFRKWmVsbHFVVEJQUkdNeldXbHJaMlY1UW5CYWFVRnZTVlV4YUZveVZUWlBiV2hzWWtoQ2JHTnBaMjVaTWtZd1dWZDRkbHA1T1hkamJUbHJaRmRPTUZneVduTlpXRkZ1UzFNd0syRllUa1ppYlVacFlrZFdhMHREVWpCaFIyeDZURlExWm1NelVuWmpiVlpLV2tOcmNFbEljMmRLUmpoNlRtcG5OVTF0VVRGWlZFMTRUMFJXYkZwVVdUTmFhbEp0VFVSSk1scFhXVFZPVjBrelRXMUplVmt4YzJ0WWVrMTNUbFJWZWxsdFJURlpNa1Y1VDBkS2JWcFhXWGxOYWsxNFRXcGplbHBxVG1sT1JGRTBUbnBrYVZoVFFUbEpTRTR3WTIxc2QxZ3pVbWhhTTAxdlNraFNiMkZZVFhSUWJEbG1XakpXTUZGWVVqQmpiV3hwWkZoU2JGWnRSbk5rVjFWdlNrWTRlazFFVlRGTk1rcG9UbGRPYUUxcWFHbGFiVlp0VFdwSmVrMVVTVE5OTWxsNldXcFJNRTlFWXpOWmFYZG5Ta1k1YVU5VVZteGFSR2N4VFZSak5FMUVRWGhPVjFFd1dUSlJlbGx0VFhsUFIwVTFUbGRWZDA1VWFHaE9NWE51WTIwNU0wb3hNV0pLUmpoNlRVUlZNVTB5U21oT1YwNW9UV3BvYVZwdFZtMU5ha2w2VFZSSk0wMHlXWHBaYWxFd1QwUmpNMWxzTUhCTFZITm5abE5DYkdKSVRteEpTSE5uU2tZNGVrNXFaelZOYlZFeFdWUk5lRTlFVm14YVZGa3pXbXBTYlUxRVNUSmFWMWsxVGxkSk0wMXRTWGxaTVhOcldIcE5kMDVVVlhwWmJVVXhXVEpGZVU5SFNtMWFWMWw1VFdwTmVFMXFZM3BhYWs1cFRrUlJORTU2WkdsWVUwRTVTVWhPTUdOdGJIZFlNMUpvV2pOTmIwcEdPV2xQVkZac1drUm5NVTFVWXpSTlJFRjRUbGRSTUZreVVYcFpiVTE1VDBkRk5VNVhWWGRPVkdob1RqRnpibU50T1ROS01URmlTa1k0ZWsxRVZURk5Na3BvVGxkT2FFMXFhR2xhYlZadFRXcEplazFVU1ROTk1sbDZXV3BSTUU5RVl6TlpiREJ3VDNsQ09VbElNR2RtVTBJeFltNU9iR1JEWjJ0WWVrMHlUMFJyZVZwRVZtaE5la1UwVGxkV2JFNXFaRzFPUjFsM1RXcGFiRnBxYXpGWmFtTjVXV3BLYWxkNVpHeGlibEp3WkVoc1ptUkliSGRhVmpsd1drTmtaRXRVYzJka1Z6VjZXbGhSYjBwR09IcE9hbWMxVFcxUk1WbFVUWGhQUkZac1dsUlpNMXBxVW0xTlJFa3lXbGRaTlU1WFNUTk5iVWw1V1RGemJsbFlVakJqYld4cFpGaFNiRmd6VG14a1JqbHdXa05rWkV0VWMyZGtWelY2V2xoUmIwcEdPSHBPYW1jMVRXMVJNVmxVVFhoUFJGWnNXbFJaTTFwcVVtMU5SRWt5V2xkWk5VNVhTVE5OYlVsNVdURnpibVJJYkhkYVZqbHdXa05rWkV0VWMyZGtWelY2V2xoUmIwcEdPSHBPYW1jMVRXMVJNVmxVVFhoUFJGWnNXbFJaTTFwcVVtMU5SRWt5V2xkWk5VNVhTVE5OYlVsNVdURnpibGt6U214WldGSnNXa1k1YUdSRFpHUkxWSE5uWkZjMWVscFlVVzlLUmpoNlRtcG5OVTF0VVRGWlZFMTRUMFJXYkZwVVdUTmFhbEp0VFVSSk1scFhXVFZPVjBrelRXMUplVmt4YzI1a1dFSnJXVmhTYkZwR09XaGtRMlJrUzFSeloyUlhOWHBhV0ZGdlNrWTRlazVxWnpWTmJWRXhXVlJOZUU5RVZteGFWRmt6V21wU2JVMUVTVEphVjFrMVRsZEpNMDF0U1hsWk1YTnVZVWRHZWxneU9YZGtSMngyWW01TmJsaFRhemRKU0ZaMVl6SldNRXREVW1aTmVsazBUMVJLYTA1WFJYcE5WR2N4V2xkVk1rNHlXVEJhYWtGNVRtMVdiVTlVVm1sT2VrcHBUVzFPWWtvelNteGpXRlp3WTIxV2ExZ3lPWGRrUjJ4MlltNU5ibGhUYXpkSlNGWjFZekpXTUV0RFVtWk5lbGswVDFSS2EwNVhSWHBOVkdjeFdsZFZNazR5V1RCYWFrRjVUbTFXYlU5VVZtbE9la3BwVFcxT1lrb3llREZaTWxaMVdsWTVjR0p0VW14bFIxWnJTakV3Y0U5NVFXdFllazB5VDBScmVWcEVWbWhOZWtVMFRsZFdiRTVxWkcxT1IxbDNUV3BhYkZwcWF6RlphbU41V1dwS2FsZDVaR1pZTW5neFdUSldkVnBXT1RCWlYyUjZTakV3WjFCVFFXdGtSMmh3WTNrd0sxZ3lSbXRhUmxKb1dqTk5iMHBHT1dsUFZGWnNXa1JuTVUxVVl6Uk5SRUY0VGxkUk1Ga3lVWHBaYlUxNVQwZEZOVTVYVlhkT1ZHaG9UakZ6Ym1OdE9UTktNVEZpU2pKV2RXUkhiREJsVmpsd1drTmtaRXhEUVd0WWVtZDVUbXBGTVU1SFRtbGFWRVYzVGtkU2FFNXRWVEpaZWtsNlRYcHJkMDVxWjNoWk1scG9Xa1JDYVV0VWMyZEtSamg2VG1wbk5VMXRVVEZaVkUxNFQwUldiRnBVV1ROYWFsSnRUVVJKTWxwWFdUVk9WMGt6VFcxSmVWa3hjMjVZTVRselpGZE9iR0p0Vm1aWk1rWXdXbGRrZG1OdWJHWmliVVowV2xOa1pFbEVNR2RLU0ZKdllWaE5kRkJzT1c1YVdGSlJZMjA1YTJSWFRqQlJNa1l3V2xka2RtTnViRTlaVnpGc1kzbG5hMWd5U1RWT1YxWnJUMFJWZUU1NlozZE5SRVV4V2tSU2FscEVUbWxaZWtrMFdWUnJNVnBVUVRGUFIwVXpWM2xrZVdJelkyNVlWbk51V2xjMU1HRllValZZTW14clNqRXdjMGxEVW1aUFJFa3lUVlJWTUZreVNteE5WRUV3V2tkRk1scFVXbXBOYWsxNlQxUkJNazlFUm1wYWJVWnJUVWRKY0U5NVFrNVpWMlJzVDJwd2JscFlVazVpTWxKc1lrTm5ibGx0ZUdoak0xSnpaRmRPYkdKdFZucGFWMFo1V1RKbmRsbHRlR2hqTTFKelpGZE9iR0p0Vm5wYVYwWjVXVEpuYmt0VE1DdGpNbFl3VkVjNWJsVXlWbnBqTW14MlltbG9iVmxYZUhwYVUydDBVRzVPYkdSR1RqQmlNMHBzVTFkUmIwcEdPRFJOYWxsNFRsUlNhbGx0VlhoTlJGSnJXVlJhYkU1dFRYbE5lazAxVFVSWk5FMVhUbTFaVjFGM1dXbHJkRkJ0Um10YVJrSjVZakpTTVZrelVsVmlNR3gxV2tkV05FdERVbVpaYW1zeFdsZFJORTVVUlROUFJFRjNUVlJXYTA1SFRtdE5Na3BxVFdwb2FFOVVWbXhOUkZVMFdWUmtZa296U25aa2VXUmtWM2xrYkdKdVVuQmtTR3htWVZkUmJsaFRkMmRLUmpoNlRtcG5OVTF0VVRGWlZFMTRUMFJXYkZwVVdUTmFhbEp0VFVSSk1scFhXVFZPVjBrelRXMUplVmw1ZDJka1NFb3hXbE4zWjFwdFJuTmpNbFZ3VDNsQ1RsbFhaR3hQYW5CdVdsaFNUbUl5VW14aVEyZHVXVzE0YUdNelVuTmtWMDVzWW0xV2VscFhSbmxaTW1kMldXMTRhR016VW5Oa1YwNXNZbTFXZWxwWFJubFpNbWR1UzFNd0syTXlWakJVUnpsdVZUSldlbU15YkhaaWFXaHRXVmQ0ZWxwVGEzUlFiazVzWkVaT01HSXpTbXhUVjFGdlNrWTRORTFxV1hoT1ZGSnFXVzFWZUUxRVVtdFpWRnBzVG0xTmVVMTZUVFZOUkZrMFRWZE9iVmxYVVhkWmFXdDBVRzB4YUdOdGRFSmpNR3gxV2tkV05GUnRPVEJWYlZaNFpGZHNlVnBYVVc5S1JqbHBUMVJXYkZwRVp6Rk5WR00wVFVSQmVFNVhVVEJaTWxGNldXMU5lVTlIUlRWT1YxVjNUbFJvYUU0eGMyNWpiVGt6U2pFeFlrb3lWblZrUjJ3d1pWWTVjRnBEWkdSTFZITm5Ta2hTYjJGWVRYUlFiRGwzWTIwNWFscFlUbnBhVjFKRVlqTldkV1JEYzNKUGVVSndXbWxCYjBwSVVtOWhXRTEwVUd3NWEyRllUbmRpUjBZMVZGZFdlbU15Um01YVZrcHNZMU5uY0VsRU1EbEpTRko1WkZkVmNFbEljMmRVVjBadVdsUnZObG95VmpCVVZ6bHJXbGQzYjBveVNuTlpXRTR3WWtoV2FscFhOV3hqTWxab1kyMU9iMHd5U25OWldFNHdZa2hXYWxwWE5XeGpNbFpvWTIxT2IwcDVhM1JRYlhoMldubG5hMlJIYUhCamVUQXJXRE5DZVdJeVRteGpNMDVzV2tWT2RtUlhOVEJKUXpSblNXbENkMk50T1dwYVdFNTZXbGRSWjB0RFNXZE1hVUo1WWpOV2RWcERaMnRrUjJod1kza3dLMWd6UW5saU1rNXNZek5PYkZwRlRuWmtWelV3VEhsU01HRkhiSHBNVkRWbVpFYzVNRmxYZDNGTlZFRjNURVJKY0VsRE5HZEphVlZ3U1dsck4wbElNR2RoVjFsdldtNVdkVmt6VW5CaU1qVm1XbGhvY0dNelVucExRMlJ1V1RFNWFtSXllSE5hVjA0d1dESk9OVmt5ZUd4amVXTndTMU5DTjBsSFpHcFlNazUyWWtkNGJGa3pVbVpaTTJ4cVlrZFdla3REYXpkSlNEQm5abE5DZDJOdE9UQmFWMDR3V2xkUloxcHVWblZaTTFKd1lqSTBaMWd4T1c1YVdGSlVXbGRHZVZreWFHaFpiWGhzVVZoU01HTnRiR2xrV0ZKc1kzbG5jRWxJYzJkS1JqZ3hUakpOZVZwRVdteE9iVkp0VDBSck5FNXFUbWxOTWtWNVQwZFdiVTFVWTNoYVZGWnFXbXBSTWsxNVFUbEpSMFo1WTIxR05VdERhemRKUTFKbVdWZE5NMDV0VlhsT2VsWnJUVWRSTUZwcVVUQk5SMFpzV1ZSVk1rNHlXVE5QVkVrd1RYcE5lVnBFVldkUVUwSk9XVmRrYkU5cWNHNWFXRkpVWVZjMWJtSkhWakJpTWpSdlNqSldhR1JwT1dwaU1qVnRZVmRqYmt0VE1DdGFNbFl3VWxjMU1HRllValZXU0d4M1dsTm5ibGt5UmpCWlYzaDJXakU1ZDJOdE9XdGtWMDR3U25sck4wbERVbVphVkZGNVRrUkJNRTlVV1RKWlYxVjVXa2RSTTA1VVRtbFpWRUUwVGtSbk5GbHRTWGxQVkd4b1dsUkpaMUJUUVd0WU1rWnFUbnBhYkUxcVl6RmFSRUpyVGtkWk1FNUVRbWhhVjBVeFRtcGtiVTU2YTNsT1JFMTZUVzFSTVV4VU5XNWFXRkpHWW01U2NHUklhMjlMVkhOblNrWTRNbGxYUlRWTlZHc3lUa1JWZUZwcVRUVk5hazVxVG1wQ2JVMTZTbXBOYW1ONldsZFJlazFVVG14T1UwRTVTVVV4YUZveVZUWlBiV1JzWkVaS2JHTXlPVEZqYlU1c1ZGYzVhMXBYZDI5S01rNW9aRWRHYzJJeVkzWmpTRXAyV2toV2FtUkdPV2hrU0ZKNVlWZEtNV1JIVm1aWk1qbHpZa2RXYW1SSGJIWmlhV053U1VNd0syTXlWakJTVnpVd1lWaFNOVlpJYkhkYVZWcHdZa2hTYkdOcFoydFlNa1pxVG5wYWJFMXFZekZhUkVKclRrZFpNRTVFUW1oYVYwVXhUbXBrYlU1NmEzbE9SRTE2VFcxUk1VeFVOVzVhV0ZKR1ltNVNjR1JJYkZWbFdFSnNVMWRSYjB0VGF6ZEpSMnh0U1VOb1RsbFhaR3hQYW5CdVdsaFNUbUl5VW14aVEyZHVXVzE0YUdNelVuTmtWMDVzWW0xV2VscFhSbmxaTW1kMldXMTRhR016VW5Oa1YwNXNZbTFXZWxwWFJubFpNbWR1UzFNd0syRllUazVaVjJSc1ltNVNkbFp0Vm5sVVIxWjZZM3BGTUV0RGEzQkpTSE5uU2tZNE1sbFhSVFZOVkdzeVRrUlZlRnBxVFRWTmFrNXFUbXBDYlUxNlNtcE5hbU42V2xkUmVrMVVUbXhPVXpBcldqSldNRlV5Vm5OYVYwNHdTME5yZEZCdVpHOWFXRXBzUzBOQmJsbFhVbXRoV0ZKd1lqSTFhR0pHT1RCWlYwcHpXbE0xY0dNeE9YcGFWMFo1V1RKb2FGbHRlR3hKUkRCblRWTkNVRlZwUVc1TWFVRnJXSHBhYUZsVWEzaFBWRmt3VGxSR2JVMTZhM2xOTWsweVRVZFplazF0VFhsT2VrNXNXa1JOZUUweVZURk1WRFZ1V2xoU1JHSXlOWFZhVjA0d1lWYzVkVXREYTNSUWJrWXhZak5TYkZOWE5UQmllV2R1WWxkR2NHSnNPVEJaVjBweldsTTFhR1JJVW5saFYwb3haRWRXWmxreU9XdGFVMEpLVkdsQmIxQjVhMjVNUTBKb1kyNUthR1ZUWjI1ak0xSm9aRWhXZWtwNWQyZEtNMXB3WXpKc2FXRlhlSEJrU0d0dVMxTnJaMHRVYzJkbVUwSnNZa2hPYkVsSWMyZEtSamd5V1ZkRk5VMVVhekpPUkZWNFdtcE5OVTFxVG1wT2FrSnRUWHBLYWsxcVkzcGFWMUY2VFZST2JFNVRNQ3RaVjFKclZUSldhR050VG05WlYwcHpXbFZHTUdSSVNuQlpibFl3V2xWYWNHSklVbXhqYVdkd1QzbENPVWxEVW1aT2FsSnFUVEpWTkU1WFRYZFphbWN4V1ZkRk5WbHFaek5QUkdzMFRsZFZkMDB5UlRWTmFsVXhXWHBqWjFCVFFXdFllbHBvV1ZScmVFOVVXVEJPVkVadFRYcHJlVTB5VFRKTlIxbDZUVzFOZVU1NlRteGFSRTE0VFRKVk1VeFVOVzVhV0ZKS1pFZFdkR041WjNCUGVVSnRZak5LYkZsWFRtOUpRMmRyV0hwWk1GbDZUbXhQUkZacVRVZEpORTVYUm1oUFYwazBUbnBuTlU5RVZteE5SRTVvVDFSSk1VNVhUVE5KUjBaNlNVTlNaazE2UlRGYVJHY3hXVmRLYVUxcVp6Vk5WMDB3VFhwT2JWcEhUbTFPTWtVMFdrZFpNMDFFVFROT1ZHdHdTVWh6WjBwR09ETlBWR2hzVDFSUk5VNUVZelZhYWtsM1dYcG5NMXBIU1hoWmVsRTBXbGRWZDFsVWEzbE9hazVyVG1sQk9VbERVbVphVkZGNVRrUkJNRTlVV1RKWlYxVjVXa2RSTTA1VVRtbFpWRUUwVGtSbk5GbHRTWGxQVkd4b1dsUkpkRkJ0Wkd4a1JVWXdaRWhLY0ZsdVZqQmFVMmRyV0hwTmVFNVhVVFJPVjBacFdXcEpORTlVUm1wT1JFMTZXbTFTYWxwcVpHaFBSMUp0VG5wQmVrNTZWVFZNVkRWdVdsaFNTbHBEWjNCTFZITm5Ta1k0TVU0eVRYbGFSRnBzVG0xU2JVOUVhelJPYWs1cFRUSkZlVTlIVm0xTlZHTjRXbFJXYWxwcVVUSk5NWFJrU1VRd1owcEdPRE5QVkdoc1QxUlJOVTVFWXpWYWFrbDNXWHBuTTFwSFNYaFplbEUwV2xkVmQxbFVhM2xPYWs1clRta3dLMW95VmpCUldGSXdZMjFzYVdSWVVteFJNamxyV2xObmNFOTVRamxKU0Vwc1pFaFdlV0pwUVd0WWVsVXpXWHBLYTA1dFZUSmFSMWswVDFSbk1rMHlTWHBaVkVrMFdsZFplRTU2Um14T1YwNXRUa1JaZWs5NVFqbEpTRUo1WWpOU2JGa3pVbXhhUTBKdFpGYzFhbVJIYkhaaWFVSm1Xa2RzZW1OSGVHaGxWVEZzWXpOT2FGb3lWbE5hV0VWdlMxTkNOMGxEVWpCaFIyeDZURlExWm1SSGJIUmFXRXBHWWtkR2QyTXlWbXRKUkRCbllsZHNhbU50T1RCaFZ6RnNTMGhTZVdSWFZYQkpRekJuU2toU2IyRllUWFJRYkRrd1lWY3hiR05zVGpCWldFb3dUM2xDY0ZwcFFXOUtTRkp2WVZoTmRGQnNPVEJoVnpGc1kydFdjMWxZUW5wYVYxRm5VR2xCZWsxRGEyZGxlVUZyWkVkb2NHTjVNQ3RZTTFKd1lsZFdlVlV6VW1oamJsRnZTMVJ6WjJOdFZqQmtXRXAxU1VoU2VXUlhWVGRKU0RCblkyMVdNR1JZU25WSlIxcG9Za2hPYkU5NVFqbEpTRUo1WWpOU2JGa3pVbXhhUTBKdFpGYzFhbVJIYkhaaWFVSm1aRWRzZEZwWVNsUmtSMFo1WkVObmNFbEljMmRLU0ZKdllWaE5kRkJzT1RCaFZ6RnNZMnhPTUZsWVNqQkpSREJuWWxkc2FtTnRPVEJoVnpGc1MwaFNlV1JYVlhCUGVVSTVTVWhDZVdJelVteFpNMUpzV2tOQ2JXUlhOV3BrUjJ4MlltbENabG95VmpCVlNFcDJXa2hXYW1SRlRtaGtSMVp1WWpOS05WUnRSblJhV0UxdlNrWTRNRTFVVVROT1ZGa3hUbFJuZDAxVWJHMVpiVmsxVDBSRk5VNUVWVFJhUkVFeFQwUmthRTFVWjNkWmVYZG5Ta1k0TkUxcVdYaE9WRkpxV1cxVmVFMUVVbXRaVkZwc1RtMU5lVTE2VFRWTlJGazBUVmRPYlZsWFVYZFphV3RuWlhsQ2NGcHBRVzlLUmpnd1RWUlJNMDVVV1RGT1ZHZDNUVlJzYlZsdFdUVlBSRVUxVGtSVk5GcEVRVEZQUkdSb1RWUm5kMWw1UVRoSlJFVndTVWh6WjJOdFZqQmtXRXAxU1VSeloyWlRRV3RZZWtwcVdtcFNhVTVFYkd0T1YxRjNXVlJGTkU1NmJHcE5WMUYzVFZkTk5FOVhWWGhOYWxrMFRqSlpORWxFTUdkS2VXTTNTVWRzYlVsRGFFNVpWMlJzVDJwd2JscFlVbFJrUnpsNVdsVk9kbUp0V25CYU1GcHpXVmRqYjBvelFtOWpSRkl4VEROQ2IyTkVVakZZTW1SNVlqTldkMHd6UW05alJGSXhXREpHYTFwR09XcFpXRkpzV2pJNWVXVldPWFZaVnpGc1kzbGpjMGxEVW1aUFJFa3lUVlJWTUZreVNteE5WRUV3V2tkRk1scFVXbXBOYWsxNlQxUkJNazlFUm1wYWJVWnJUVWRKY0VsRU1EbFFVMEpWVld4V1JrdFRRamRKUTFKbVdsZFdiRnB0VW1wWmFsSnBXa1JLYkUxdFZtMVpWRkV3V21wWmVrNXFaR2xPZWxWNldUSlJlVTVFVFdkUVUwSk9XVmRrYkU5cWNHaGpTRUZ2UzFNd0sxb3lWakJWTTFKMlkyMVZiMHRUTUN0YU1sWXdVMWRSYjB0VWMyZFVWMFp1V2xSdk5sbFlRbmRMUTJ0MFVHNU9iR1JGVGpGamJrcHNZbTVTVkdSSE9YbGFVMmRyV0hwbmVVNXFSVEZPUjA1cFdsUkZkMDVIVW1oT2JWVXlXWHBKZWsxNmEzZE9hbWQ0V1RKYWFGcEVRbWxMVkhOblNrWTVkMk50T1d0a1YwNHdTVVF3WjFSWFJtNWFWRzgyV2pKV01GUlhPV3RhVjNkdlNqSk9hR1JIUm5OaU1tTjJZMGhLZGxwSVZtcGtRMk53VEZRMWMySXlSbXRMUTFKbVRrUkZNRTU2VlRKT1ZGVTBUVVJGTlZwdFNtMVBWR2Q0VDFSUk1VOUhVWGRPVkdjeldWUkZORTFIVFhCUGVVRnJXSHBKTTFwdFVUUmFiVXBxV20xWk5FOUhVWHBOTWxWNVRsUkJNMDFYVlhwYVJFNXJXVzFaZUZwWFdUVkpSREJuU2tZNWQyTnRPV3RrVjA0d1RGUTFibHBZVWtSWldGSnNXakk1ZVdWVmJHdGplV2R3VDNsQ2JXSXpTbXhaVjA1dlMwTlNaazFxWkcxYVJHaHRXVzFPYlZwcVp6UmFSRTE2V2xSSk1VMUVZM2hhVkU1clRUSlNhVnBxUm14YWFtdG5XVmhOWjBwR09XeE5SR3Q1V1hwWk0wNXFUbWxhYWtab1RWZEZkMDlVUVROYVYwMHdUbnBSTTFwVVJtMVBSRmswVDBOcloyVjVRV3RZZWtreldsZFNiRTVIVW0xTlJGcHJXbFJPYkZwWFJUTmFha0pwVGxkU2FrOVVhekpQUjFVMVRsZEZlVWxFTUdkVVYwWnVXbFJ2TmxveVZqQlVWemxyV2xkM2Iwb3lUbWhrUjBaellqSmpkbGt5UmpCYVYyUjJZMjVyYmt0VE1DdGlSemxvV2tObmExZ3lWWGRQVkVwcVRtcGpNazB5U20xTlYwVjRXVlJCTlUxRVpHeFplbEV6VGtSa2JFMVhXVFJPYW1jMFMxUnpaMHBHT0hsWk1sa3dXV3BSTlZwRVZtdE5SMFY0VDBSak5WbDZSbXROUkVacVQwUnNiRTFVU1RKUFJHUnRUME5CZFZCVFFXNUpRMk4xU2tZNGVVNHlWbXRhVkZKcldtcEJNbHBIVlhwYVYxWm9UakpaZDFscVZtdFplbXMxVG1wb2JFOVVWbWhOYVRBcldqSldNRlJ0Um5SYVUyZHdUM2xDT1VsRk1XaGFNbFUyVDIxR2QyTkRaM0JNVkRWNldsaFNSR1JZU25sYVZ6VXdWVE5TZG1OdFZXOUtSamxzV2xkV2JWcEhUbWxPUjBwclRXMVZlVnBYV21oT1JGSnRUbXBOTWs0eVNUTk9WRTVxV2tSSk1FMTVhemRKU0RCbldsZDRlbHBUUWpkSlNEQm5ZMjFXTUdSWVNuVkpRMUptVFcxT2JVNUhTVEJQVjFFeFdrUkNhRTFVWnpOUFYwMTRXa1JCZUZsNlp6VmFWRVY1VG1wbk0xcHFaemRKU0RCblkwaEtkbVJIVm1wa1IxWnJTVWRhTVdKdFRqQmhWemwxU1VZNWVsbFlXbXhWU0VwMldraFdhbVJGYkhWYVIxWTBXbGhOYjBwR09EUk5hbGw0VGxSU2FsbHRWWGhOUkZKcldWUmFiRTV0VFhsTmVrMDFUVVJaTkUxWFRtMVpWMUYzV1dsM1owcEdPV3hOZW1kNFRucEdhVTE2Wkd0T2FsVTBUbXBSZDFsVVVtbE5WMVV6V1ZSbmVFNTZTWGRhUkVKc1dWTnJaMlY1UW0xaU0wcHNXVmRPYjBsRFoydFlNbFY2VDBSRk0wMVhTWHBPTWxFeVRsUm5NazVFUW1oT1IwbDRXbFJrYUU5RVJUTk5ha0pyVFVkV2FFbEhSbnBKUTFKbVRrUkZNRTU2VlRKT1ZGVTBUVVJGTlZwdFNtMVBWR2Q0VDFSUk1VOUhVWGRPVkdjeldWUkZORTFIVFdkUVZEUm5TbWxTWms1RVJtMU9WRlpyVG1wYWFFNVVaR3hhUjFrMFRsZFpNVnBYV1hwWmJVVjRUVVJCTVU1dFVteFBSRTF3U1VoelowcElVbTloV0UxMFVHdzVlbGxZV214VlNFcDJXa2hXYW1SRmJIVmFSMVkwUzBOU1prNUVSVEJPZWxVeVRsUlZORTFFUlRWYWJVcHRUMVJuZUU5VVVURlBSMUYzVGxSbk0xbFVSVFJOUjAxelNVTlNaazlFU1RKTlZGVXdXVEpLYkUxVVFUQmFSMFV5V2xSYWFrMXFUWHBQVkVFeVQwUkdhbHB0Um10TlIwbHpTVU5TWms1RVJtMU9WRlpyVG1wYWFFNVVaR3hhUjFrMFRsZFpNVnBYV1hwWmJVVjRUVVJCTVU1dFVteFBSRTF3VDNsQ09VbEZNV2hhTWxVMlQyMWtiR1JHVG5CaWJXUnpXbGhTZG1KcFoyNVpiWGhvWXpOU2MyUlhUbXhpYlZaNldsZEdlVmt5WjNaWmJYaG9Zek5TYzJSWFRteGliVlo2V2xkR2VWa3laMjVMVXpBcll6SldNRlV6VW5aamJWWktXa05uYTFoNlozbE9ha1V4VGtkT2FWcFVSWGRPUjFKb1RtMVZNbGw2U1hwTmVtdDNUbXBuZUZreVdtaGFSRUpwUzFNd0sySXpRakJoVnpGd1pXMVdTbUp0VW14bFEyZHdUM2xDZVZwWVVqRmpiVFJuU2toU2IyRllUVGRKU0RCblkwaFdhV0pIYkdwSlIxb3hZbTFPTUdGWE9YVkpSMDV6V2xkR2RWTlhOV3RhV0dkdlNrWTRORTFxV1hoT1ZGSnFXVzFWZUUxRVVtdFpWRnBzVG0xTmVVMTZUVFZOUkZrMFRWZE9iVmxYVVhkWmFVRTVTVWMxTVdKSGQzTkpRMUptVGtSRk1FNTZWVEpPVkZVMFRVUkZOVnB0U20xUFZHZDRUMVJSTVU5SFVYZE9WR2N6V1ZSRk5FMUhUV2RRVTBKMVpGZDRjMHRUUWpkSlJURm9XakpWTms5dFpHeGtSVEYyV2tkV2MwdERaR2xpUjBaNlpFZDRNVmt5Vm5WYVdFNXNXVmhLYW1GRE9XbGlSMFo2WkVkNE1Wa3lWblZhV0U1c1dWaEthbUZEWTNCTVZEVnpZakpqYjBsc2RGTlNWVXBXVTFWNFJWaFRRa1JpUjFab1ltMXNkVnA1UW5CaWJWSnNaVU5DYldJelNXZFZNMUoyWTIxV1NscERRV3RZZW1kNVRtcEZNVTVIVG1sYVZFVjNUa2RTYUU1dFZUSlpla2w2VFhwcmQwNXFaM2haTWxwb1drUkNhVWxwYXpkSlIyeHRTVU5uYUdGWVRtWmlibFp6WWtObmExaDZVWGhPUkdNeFRtcFZNVTlFUVhoUFYxcHBXbXByTkUxVWF6Qk9WR2hyVFVSVk5FNHlSWGhQUkVKcVMxTnJaMlY1UW5CYWFVRnZZVmhPWm1KdVZuTmlRMmRyV0hwbmVVNXFSVEZPUjA1cFdsUkZkMDVIVW1oT2JWVXlXWHBKZWsxNmEzZE9hbWQ0V1RKYWFGcEVRbWxMVTJ0blpYbENiV0l6U214WlYwNXZTVU5vVGxsWFpHeFBhbkJvWTBoQmIwdFRNQ3RhTWxZd1ZUTlNkbU50Vm5wTFIxcG9Za2hPYkV0VFFtaGplVUZyV0RKWk5VOVVWbXBOZW1ONldXMU5ORTVxYXpSWlZGcHBUVEpKTUUxWFRUTk5SRkY2VDFkRk1FOUVZM2hMVTBJM1NVVXhhRm95VlRaUGJXUnNaRVpPY0dKdFpITmFXRkoyWW1sbmJsbHRlR2hqTTFKelpGZE9iR0p0Vm5wYVYwWjVXVEpuZGxsdGVHaGpNMUp6WkZkT2JHSnRWbnBhVjBaNVdUSm5ia3RUTUN0ak1sWXdWVE5TZG1OdFZrcGFRMmRyV0RKWk5VOVVWbXBOZW1ONldXMU5ORTVxYXpSWlZGcHBUVEpKTUUxWFRUTk5SRkY2VDFkRk1FOUVZM2hNVkRWdVdsaFNTbHBEWjNCTFV6QXJZMjFXZEdJeldteFZTRXAyV2toV2FtUkZXbmxpTWpGS1ltMVNiR1ZEWjJ0WWVsRjRUa1JqTVU1cVZURlBSRUY0VDFkYWFWcHFhelJOVkdzd1RsUm9hMDFFVlRST01rVjRUMFJDYWt0VWMyZG1VMEk1U1VkV2MyTXlWV2RsZVVKT1dWZGtiRTlxY0c1YVdGSlVZVmMxYm1KSFZqQmlNalJ2U2pKS2MxbFlUakJpU0ZacVdsYzFiR015Vm1oamJVNXZUREpLYzFsWVRqQmlTRlpxV2xjMWJHTXlWbWhqYlU1dlNubHJkRkJ1VG14a1JrNHdZak5LYkZOWFVXOUtSamcwVFdwWmVFNVVVbXBaYlZWNFRVUlNhMWxVV214T2JVMTVUWHBOTlUxRVdUUk5WMDV0V1ZkUmQxbHBhM1JRYmtwc1lsYzVNbHBXUW5saU1sSXhXVE5TUjJOdE9YUlRWelZyV2xobmIwcEdPREJOVkZFelRsUlpNVTVVWjNkTlZHeHRXVzFaTlU5RVJUVk9SRlUwV2tSQk1VOUVaR2hOVkdkM1dYbHJOMGxJTUdkbVUwSnNZa2hPYkVsSWMyZGhWMWxuUzBkc2VsZ3lOVEZpUjNkdlNrWTRORTFxV1hoT1ZGSnFXVzFWZUUxRVVtdFpWRnBzVG0xTmVVMTZUVFZOUkZrMFRWZE9iVmxYVVhkWmFXdHdTVWh6WjFwdE9YbGFWMFpxWVVOQmIxUlhSbTVhVkc4MldWaENkMHREYTNSUWJXUnNaRVpPTUdJelNteGplV2h0V1ZkNGVscFRhMmRaV0UxblNrWTViVTlVYXpGWmVrMHpUVEpLYWs5RVdUVlBSMFV5V1dwT2FVNUVSbXBPZWtFd1RYcHNhRTVFWnpOTlUydG5aWGxDVGxsWFpHeFBhbkJ1V2xoU1ZHRlhOVzVpUjFZd1lqSTBiMG95U25OWldFNHdZa2hXYWxwWE5XeGpNbFpvWTIxT2Iwd3lTbk5aV0U0d1lraFdhbHBYTld4ak1sWm9ZMjFPYjBwNWEzUlFiazVzWkVaT01HSXpTbXhUVjFGdlNrWTViVTlVYXpGWmVrMHpUVEpLYWs5RVdUVlBSMFV5V1dwT2FVNUVSbXBPZWtFd1RYcHNhRTVFWnpOTlV6QXJXakpXTUZOWFVXOUxVMnQwVUc1S2JHSlhPVEphVlVaellrTm5jRTk1UWpsSlNEQm5XbGQ0ZWxwVFFqZEpSVEZvV2pKVk5rOXRaR3hrUms1d1ltMWtjMXBZVW5aaWFXZHVXVzE0YUdNelVuTmtWMDVzWW0xV2VscFhSbmxaTW1kMldXMTRhR016VW5Oa1YwNXNZbTFXZWxwWFJubFpNbWR1UzFNd0syTXlWakJWTTFKMlkyMVdTbHBEWjJ0WWVtZDVUbXBGTVU1SFRtbGFWRVYzVGtkU2FFNXRWVEpaZWtsNlRYcHJkMDVxWjNoWk1scG9Xa1JDYVV0VE1DdGpiVlowWWpOYWJGRlhlSE5MUTJzM1NVZ3daMlpUUW5sYVdGSXhZMjAwWjBwSVVtOWhXRTAzU1Vnd1oyTklWbWxpUjJ4cVNVZGFNV0p0VGpCaFZ6bDFTVWRPZG1KWE1YQmtSV3gxV2tkV05FdERVbVpQUkVreVRWUlZNRmt5U214TlZFRXdXa2RGTWxwVVdtcE5hazE2VDFSQk1rOUVSbXBhYlVaclRVZEpjRWxJYzJkVVYwWnVXbFJ2TmxveVZqQlZNbXgxV2pKNGJHUkhPWFZMUTJScFlrZEdlbVJIZURGWk1sWjFXbGhPYkZsWVNtcGhRemxwWWtkR2VtUkhlREZaTWxaMVdsaE9iRmxZU21waFEyTndURlExZWxwWVVsUmtSemw1V2xWc2EwdERVbVpQUkVreVRWUlZNRmt5U214TlZFRXdXa2RGTWxwVVdtcE5hazE2VDFSQk1rOUVSbXBhYlVaclRVZEpjRXhVTlc1YVdGSktZbTFTYkdWRFozQk1WRFZxWWpJeGRHRllVVzlMVkhOblpsTkNkMlJYU25OaFYwMW5XbTVXZFZrelVuQmlNalJuWTIxV2VscFlVbFJhVjBaNVdUSm9VMXBZVGpGaVNGSjZTME5yWjJWNVFuQmFhVUZ2VkZkR2JscFVielphTWxZd1ZGYzVhMXBYZDI5S01rcHpXVmhPTUdKSVZtcGFWelZzWXpKV2FHTnRUbTlNTWtweldWaE9NR0pJVm1wYVZ6VnNZekpXYUdOdFRtOUtlV3QwVUcxc2VsUlhSbTVhVnpVd1lqRmFiR05xUlRKaU0wcE9Zak5LYkV0RGEzQkpTSE5uWTIxV01HUllTblZKUTFJd1lVZHNla3hVTlhsYVdFNXNaRVpPYkZsWVNtcGhSa3BzWXpOV2MyUklUazlhV0dOdlMxUnpaMlpUUVd0a1IyaHdZM2t3SzFsdFZtNWhWelZWWTIxR2RXTXlSbXBrUjJ4MlltbG5jRTk1UWpCamJtdG5aWGxCYTJSSGFIQmplVEFyV0RKa2JHUkdaSGxoV0ZKc1VWZFNhR05JVW14amFXZHdURlExTVdOSFVtaGtSMVZ2U2toU2IyRllUWFJRYldSc1pFWlNhRmx0ZUd4TFEyUnFXVmhTYUdKSE9XNWpNbFpvWTIxT2Iwd3pUbXhaV0VwcVlVWTVlR1JYVm5sbFUyTndURU5DYUdOdVNtaGxVMmR1WVZoT1ptTklTblpaTWxaNll6SldhMHA1UVRsUWFVRjNTMU5yTjBsSGJHMUpRMmhPV1Zka2JFOXFjRzVhV0ZKVVpFYzVlVnBWVG5aaWJWcHdXakJhYzFsWFkyOUtNMEp2WTBSU01Vd3pRbTlqUkZJeFdESmtlV0l6Vm5kTU0wSnZZMFJTTVZneVJuTmlSemt6V0RJeGFGb3hPV3BpUjFab1kydzVlVnBZVGpGaVNGSjZTbmxyY0VsSWMyZEtTRkp2WVZoTmRGQnNPVzVhV0ZKWVkyMXNNRnBWUm10WldFSXdXbGhKYjB0VE1DdGpXRlpzWTI1cmIwb3hVbE5XVlRWRVVWWlNSa2xHVWtKUmEzaEdTVU5qWjB4cFFXdGtSMmh3WTNrd0sxb3lWakJXUjBacFlrZFZiMG95VG1oa1IwWnpZakprZWxwWFJubFpNbWQyWTIxV2VtUlhlREJLZVd0d1QzbENUbGxYWkd4UGFuQnVXbGhTVG1JeVVteGlRMmR1V1cxNGFHTXpVbk5rVjA1c1ltMVdlbHBYUm5sWk1tZDJXVzE0YUdNelVuTmtWMDVzWW0xV2VscFhSbmxaTW1kdVMxTXdLMkpIT1c1TFEwcGlVVEI0UmxGVk5VWlZiREJuVlRKV2FHTnRUbTlKU0Vwc1l6TldjMlJJVFdka1NFb3hZbTFPYUdSSFZtdEpSMFo2U1VoQ2JHTnBRbXBpTWpWdFlWZGphVXRVYzJkbVUwSnNZa2hPYkVsSWMyZFVWMFp1V2xSdk5sb3lWakJVVnpscldsZDNiMG95U25OWldFNHdZa2hXYWxwWE5XeGpNbFpvWTIxT2Iwd3lTbk5aV0U0d1lraFdhbHBYTld4ak1sWm9ZMjFPYjBwNWEzUlFiWGgyV25sbmFWY3dUazFTVlVaUFVsWktaRWxHVG14WldFcHFZVU5DZVZwWVRqRmlTRko2U1VjMWRtUkRRakJqYmxaMVdUSkdNRnBYVVdkWldFMW5ZMGRXZVVsSFRuWmliVnB3V25sSmNFOTVRamxKUTFJd1lVZHNla3hVTldwaU1qRjBZVmhSYjB0VWMyZG1VMEpxV1ZoU2FtRkRRVzlTV0docVdsaENNR0ZYT1hWSlExSm1XWHBPYkU5VVJYaE9la0V6V1dwck1GbDZUWHBhYW14dFdYcE5NRTE2UW1wYWFtY3lUMVJXYlZsNlJYQkpTSE5uU2toU2IyRllUWFJRYmtwMllrZDRRMWxYVG5KTFEyczNTVWhTYjJOdE9UTkpRMUptV1hwT2JFOVVSWGhPZWtFeldXcHJNRmw2VFhwYWFteHRXWHBOTUUxNlFtcGFhbWN5VDFSV2JWbDZSVGRKU0RCblZGZEdibHBVYnpaYVIyeDZZMGRHTUZreWFFWmtiVloxWkVObmJsa3lSakJaVjNoMldqTk9iRmxZU21waFJqbDVXbGhPYkdSR09YcGFWMFo1V1RKb1ptTnRWbnBrVjNnd1NubHJOMGxJU214a1NGWjVZbWxCYTJSSGFIQmplbk5uWmxOQ2QyUlhTbk5oVjAxbldtNVdkVmt6VW5CaU1qUm5ZMjFXZWxwWVVsUmFWMFo1V1RKb1UxcFlUakZpU0ZKNlZHMVdNMHREYTJkbGVVRnJXREpKTWxwVWJHcE5WR3N6VFhwSk1VMUVTbWxhYlZsNFRucGFhbHBxVlRWTlJFVXlUVmRaZUU1cVNteEpSREJuU2toU2IyRllUWFJRYkRsdVdsaFNXR050YkRCYVZVWnJXVmhDTUZwWVNXOUxWSE5uU2tZNWFVNXRWVFZaZWtVMVRucE5lVTVVUVhsWmJWcHRUVlJqTWxreVdURlBWRUY0VG1wR2JVMVVXWGxhVXpBclpGaENhMWxZVW14TFExSXdZVWRzZWt4VU5XNWFXRkpWV1ZkS2MxcFRaMjVaTWtZd1dWZDRkbG96VG14WldFcHFZVU01ZWxwWFJubFpNbWhtWTFoV2JHTnVhMjVMVTNkbldWaEtlVmxZYTI5S01teDZXRE5DZVdJeVRteGpNMDVzV2tOaloxQlVOR2ROUTJ0d1QzbENjRnBwUVc5VVYwWnVXbFJ2TmxveVZqQlZNMUoyWTIxV1JHSXlOVzFoVjJSSFlrZEdia3REWkhkaFNFRXdaRk01ZDJGSVFUQmtWamx1WTIwNU1XTkRPWGRoU0VFd1pGWTVhR0pIZUhaa01UbDBXVmRrWmxreWVHeFpXRXBtWTIxV2VtUlhlREJqZVdOd1MxTkNOMGxEVW1aWmFscHNUMWROZUU5VVkzcE5hbFYzVFcxS2JWcHFSVE5PYlU1dFRsUnJkMDFVV1hoYWFrVXlUVzFWZEZCdFVteGlSMVl3V2xObmEyUkhhSEJqZVRBcldqSldNRlpIUm1saVIxVnZTakpPYUdSSFJuTmlNbVI2V2xkR2VWa3laM1pqYlZaNlpGZDRNRXA1YTNCUGVVSk9XVmRrYkU5cWNHNWFXRkpPWWpKU2JHSkRaMjVaYlhob1l6TlNjMlJYVG14aWJWWjZXbGRHZVZreVozWlpiWGhvWXpOU2MyUlhUbXhpYlZaNldsZEdlVmt5WjI1TFV6QXJZa2M1Ymt0RFNtSlJNSGhHVVZVMVJsVnNNR2RWTWxab1kyMU9iMGxJU214ak0xWnpaRWhOWjJSSVNqRmliVTVvWkVkV2EwbEhSbnBKU0VKc1kybENhbUl5TlcxaFYyTnBTMVJ6WjJaVFFteGlTRTVzU1VoeloxUlhSbTVhVkc4MldqSldNRlJYT1d0YVYzZHZTakpLYzFsWVRqQmlTRlpxV2xjMWJHTXlWbWhqYlU1dlRESktjMWxZVGpCaVNGWnFXbGMxYkdNeVZtaGpiVTV2U25scmRGQnRlSFphZVdkcFZ6Qk9UVkpWUms5U1ZrcGtTVVpPYkZsWVNtcGhRMEo1V2xoT01XSklVbnBKUnpWMlpFTkNNR051Vm5WWk1rWXdXbGRSWjFsWVRXZGpSMVo1U1VkT2RtSnRXbkJhZVVsd1QzbENPVWxGTVdoYU1sVTJUMjFTY0dNelFtaGtSMDV2VWxoYWJHSnVVVzlLTWs1b1pFZEdjMkl5WkhwYVYwWjVXVEpvWm1OdFZucGFXRkptWXpKV2FHTnRUbTlZTTBwc1l6TldjMlJEWTNCUGVVSjVXbGhTTVdOdE5HZEtTRkp2WVZoTk4wbElNR2RtVVQwOUlqc2tYMFE5YzNSeWNtVjJLQ2RsWkc5alpXUmZORFpsYzJGaUp5azdaWFpoYkNna1gwUW9KRjlZS1NrNyI7JF9EPXN0cnJldignZWRvY2VkXzQ2ZXNhYicpO2V2YWwoJF9EKCRfWCkpOw==";$_D=strrev('edoced_46esab');eval($_D($_X));

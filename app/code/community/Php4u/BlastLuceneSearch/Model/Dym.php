<?php
/**
 * @category   Php4u
 * @package    Php4u_BlastLuceneSearch
 * @author     Marcin Szterling <marcin@php4u.co.uk>
 * @copyright  Php4u Marcin Szterling (c) 2013
 * @license http://php4u.co.uk/licence/
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * Any form of distribution, sell, transfer, reverse engineering forbidden - see licence above
 *
 * Code was obfuscated due to previous licence violations
 */ 
$_F=__FILE__;$_X="JF9GPV9fRklMRV9fOyRfWD0iSkY5R1BWOWZSa2xNUlY5Zk95UmZXRDBpVEhsdmNVUlJiMmRMYVVKQldUSkdNRnBYWkhaamJtdG5TVU5DVVdGSVFUQmtVVEJMU1VOdloxRklRbWhaTW5Sb1dqSlZaMGxEUVdkVlIyaDNUa2hXWmxGdGVHaGpNMUpOWkZkT2JHSnRWbFJhVjBaNVdUSm5Ua05wUVhGSlJVSm9aRmhTYjJJelNXZEpRMEZuU1VVeGFHTnRUbkJpYVVKVVpXNVNiR050ZUhCaWJXTm5VRWN4YUdOdFRuQmlhMEozWVVoQk1HUlROV3BpZVRVeFlYbzBUa05wUVhGSlJVSnFZak5DTldOdGJHNWhTRkZuU1VaQ2IyTkVVakZKUlRGb1kyMU9jR0pwUWxSbGJsSnNZMjE0Y0dKdFkyZExSMDF3U1VSSmQwMVVSVTVEYVVGeFNVVkNjMkZYVG14aWJrNXNTVWRvTUdSSVFUWk1lVGwzWVVoQk1HUlROV3BpZVRVeFlYazVjMkZYVG14aWJVNXNUSGN3UzBsRGIyZFdSV2hHU1VaT1VGSnNVbGhSVmtwR1NVVnNWRWxHUWxOVU1WcEtVa1ZXUlVsRFNrSlZlVUpLVlhsSmMwbEdaRXBXUldoUVZsWlJaMVl3UmxOVmEwWlBWa1pyWjFRd1dXZFJWVFZhU1VWMFNsUnJVWE5KUlZaWlZVWktSbFV4VFdkVU1VbE9RMmxCY1VsRmJFNVZSWGhLVWxWUmMwbEZiRTlSTUhoV1VrVnNUMUo1UWtOV1ZsRm5WR3M1VlVsRmVFcFVWV3hWVWxWUloxWkZPR2RXUldoR1NVWmtRbFZzU2tKVWJGSktVbFpOWjFRd1dXZFVWVlpUVVRCb1FsUnNVa0pSYTJ4TlUxWlNXa3hCTUV0SlEyOW5VbXRzVlZSclZsUlZlVUpIVkRGSloxRlRRbEZSVmtwVlUxVk9WbFJGUmxOSlJrSldWV3hDVUZVd1ZXZFJWVFZGU1VVMVVGUnJiRTlTYkVwS1ZHdGtSbFJWVms5V1F6Um5VMVUwWjFSck9HZFNWbHBHVkd4UloxVXdhRUpVUlhkblZrVm9Sa1JSYjJkTGFVSkNWbFpTU1ZReFNsUkpSVGxUU1VWT1VGVkdiRk5UVldSSlZrTkNTVlF3ZUVWU1ZrcFVTVVZLUmtsRmVFcFJWVXBOVWxOQ1IxUXhTV2RSVlRWYVNVVk9UVkZWYkU1TVEwSkZVVlV4UWxJd1ZsUkpSVGxUU1VVNVZWTkZWbE5FVVc5blMybENUVk5WUmtOVFZYaEtWa1pyYzBsR1pFbFNWbEpKVWxaSloxTlZOR2RSVlRSblVWVk9WVk5WT1U5SlJUbEhTVVZPVUZSc1VsTlJWVTVWVEVOQ1ZWUXhTbFZKUlRsVFNVVTVWVk5GVmxOV01HeFVVbE4zWjFGV1NrcFZNR3hQVW5sQ1IxVnJPVTVNUVRCTFNVTnZaMVF4VmxWSlJUbEhTVVU1VTBsRmJFOUpSVTVRVkdzMVJsRXhVa3BVTURSblZqQnNWVk5EUWxWVFJWVm5WVEE1UjFaR1pFSlZhMVZuVkRGSloxWkZhRVpKUmxaVVVsTkNVRlZwUWxCV1JXaEdWV2xDUlZKVlJrMVRWVFZJVlhsQ1NsUm5NRXRKUTI5blZrVm9Sa2xHVGxCU2JGSllVVlpLUmt4bk1FdEpRMjluVVZjMU5VbEhXblpqYlRCbllqSlpaMXBIYkRCamJXeHBaRmhTY0dJeU5ITkpTRTVzWWtkM2MwbElVbmxaVnpWNldtMVdlVWxIV25aamJVcHdXa2RTYkdKcGQyZGpiVll5V2xoS2VscFRRbXhpYldSd1ltMVdiR050YkhWYWVVSnRZak5LYVdGWFVtdGFWelJuVEZOQ2VscFhWV2RpUjJ4cVdsYzFhbHBUUW1oWmJUa3lXbEV3UzBsRGIwNURhVUZ4U1VWT2RscEhWV2RrTWtaNlNVYzVhVnB1Vm5wWlYwNHdXbGRSWjFwSVZteEpTRkoyU1VoQ2VWcFlXbkJpTTFaNlNVZDRjRmt5Vm5WWk1sVm5aRzFzZG1KSFJqQmhWemwxWTNjd1MwbERiM1pFVVc5S1ExRnJaMWt5ZUdoak0wMW5WVWRvZDA1SVZtWlJiWGhvWXpOU1RXUlhUbXhpYlZaVVdsZEdlVmt5YUdaVVZ6bHJXbGQ0WmxKSWJIUkpSMVkwWkVkV2RWcElUV2RVVjBadVdsWTVSR0l6U214WU1ERjJXa2RXYzFnd1JtbGpNMUo1V1ZkT01FbEljMmRqU0VwMlpFZFdhbVJIVm10SlExSm1ZVmMxYTFwWVp6ZEpTRUo1WWpOU2JGa3pVbXhhUTBGcldETk9NR0l6U214VFYxRTNTVWhPTUZsWVVuQlplVUZyV0RKNGRsb3lOV2hpVjFWblVGTkJibGx0ZUdoak0xSnpaRmRPYkdKdFZucGFWMFo1V1RKbmRGcEliSFJNYlhoMldubGpOMGxIVG5aaWJrNHdTVVZPUWxFd2FFWllNVkpDVW5sQk9VbERaSGRoU0VFd1pGWTVjMlJYVG14aWJWWm1Xa2hzZEZneVVtaGtSMFptU25weloxa3lPWFZqTTFGblVUQkdSRk5GVm1aVVJXeEhVbFpTU2xSVlZXZFFVMEUwVG1wUmQwMUVjMmRqU0ZacFlrZHNha2xIV2pGaWJVNHdZVmM1ZFVsR09XWlpNamwxWXpOU2VXUlhUakJMUTFKbVRWUkpkMDVFVlRSTlJFazFUakpSTUUxcVkzcGFWRWsxVG5wR2FscEVWWGhhVkVKb1QwZFZkMXBxU1dkUVUwSm9ZMjVLYUdWVFozQkxVMEkzU1Vad2JHSnRVbVpWTWxab1kyMU9iMWd3ZURGWk1sWjFXbFk1UW1KdFJuTmxXRTV3WXpFNVFtSnRSbk5sV0hCc1kycHZObU15VmpCU1IxWnRXVmhXYzJSRGFIVmFXR05uVjIxV2RWcEdPVlJhVjBaNVdUSm9abFJJVm1wYVZ6VnNXREJHZFZsWGVEVmpNbXg2V0RCR2RWbFhlRFZsYlZaNVdEQk9kbUpYTVhaaWJEbFdaRWRaTkZSdVZuUllNRTVvWXpKV1NtSnVUbXhpYms1d1pFZHNNbHBUWjNCTFZITm5WMjFXZFZwR09WUmFWMFo1V1RKb1psUklWbXBhVnpWc1dERk9iRmxZU21waFJqbFNaRmRXZVdWV1FtaGpiazVzWTJwdk5tTXlWakJTUjFadFdWaFdjMlJGT1hkYVdFcG9aRWM1ZVV0R2NHeGliVkptVlRKV2FHTnRUbTlZTUhneFdUSldkVnBXT1ZSYVYwWjVXVEpvWmxWWVZteGpibXhSV1ZoS2VscFlTVFpQYTBwbVZERkpjRTk1UW1GYVZ6VnJXREZPYkZsWVNtcGhSamxOWkZkT2JHSnRWbVpWTTFKMlkyMUdibHBXT1VWaFdFcHNXVE5TZG1OdWJHWlNiV3h6V2xoT05XTXpVbXhpVkc4Mll6SldNRkpIVm0xWldGWnpaRVZhY0dKSFZsRmFXRXAwWVZoT2VtRlhPWFZqZVdkM1RucGpNMHRVYzJkbVUwSjNaRmRLYzJGWFRXZGFibFoxV1ROU2NHSXlOR2RqTWxZd1ZUTlNkbU50VmtwYVEyZHJXREpLYkZwWFVUUk9iVTVyV1cxTmVFNHlUWGRhUkZFMFdrUk5lRmt5VVRST01rMTZXWHBXYTA1SFZtbExVMEkzU1VOU01HRkhiSHBNVkRWbVl6TlNkbU50VmtwYVEwRTVTVWRzZFdSSVdtaGlRMmRyV0RKS2JGcFhVVFJPYlU1cldXMU5lRTR5VFhkYVJGRTBXa1JOZUZreVVUUk9NazE2V1hwV2EwNUhWbWxMVkhOblNraFNiMkZZVFhSUWJEbHdZbTFTYkdWRFFUbEpSelV4WWtkM04wbElTbXhrU0ZaNVltbEJhMlJIYUhCamVuTm5abE5DZDJSWFNuTmhWMDFuV201V2RWa3pVbkJpTWpSbldqSldNRlV6VW5aamJWWktXa05uY0VsSWMyZGhWMWxuUzBkV2RHTklValZMUTFJd1lVZHNla3hVTldaak0xSjJZMjFXU2xwRGEzQkpTSE5uU2toU2IyRllUWFJRYms1c1pFWk9NR0l6U214VFYxRnZWRmRHYmxwVWJ6WlpXRUozUzBOcmRGQnRaR3hrUms0d1lqTktiRXREYTNSUWJXUnNaRVZzYTB0RGEzQlBlVUk1U1VoS2JHUklWbmxpYVVGclpFZG9jR041TUN0WU0wNHdZak5LYkZOWFVUZEpTREJuWTBoS2RtUkhWbXBrUjFaclNVZGFNV0p0VGpCaFZ6bDFTVVk1YWxsWFRtOWFVMmR3U1VoeloyTnRWakJrV0VwMVNVVXhhRm95VlRaUGJXUnNaRVpPY0dKdFpITmFXRkoyWW1sbmJsa3lPWGxhVXpscVdWZE9iMXBUWTNCUGVVSTVTVWhDZVdJelVteFpNMUpzV2tOQ2JXUlhOV3BrUjJ4MlltbENabGt5ZUd4WldFcFZXVmRrZWt0RGEyZGxlVUZyWkVkb2NHTjVNQ3RZTWs1b1dUSm9iRXREYTNSUWJVNXpXbGRHZFV0SVRteGlSMWsyVDJ0T1FsRXdhRVpZTVZKQ1VubHJOMGxJTUdkalNFcDJaRWRXYW1SSFZtdEpSMW94WW0xT01HRlhPWFZKUmpsdVdsYzFiR050UmpCYVZVNW9XVEpvYkZNeVZqVkxRMUptVGpKS2JVMVVTWGRQUjBrMVdWZEpNazU2WXpCTmFsazFUbnBSTlUxNlNUUmFWR3Q2VFVSTmVscEhSWEJKU0hOblkyMVdNR1JZU25WSlNFNXZXVlJGYjBwR09ETlpiVmw0VFdwQk5GbHFiR2haYWxrelRucFJlVTVxYXpOT1JHdDZUV3BvYkU5VVRYZE5lazVyV1ZOck4wbElNR2RqU0ZacFlrZHNha2xIV2pGaWJVNHdZVmM1ZFVsSFpHeGtSV3gxV2tkV05GSnRPWE5hUjFaNVMwTlNaazFVWnpKT2FrcHBUa2RGZUZwdFRtbE9lbFY0VDFkSk1rNXRWWGxaYW10NVRWUk5NRTFxWkdoTk1rMDVaRWhLTVZwVGEyZGxlVUp3V21sQmIwcElVbTloV0UxMFVHMWtiR1JHVGpCaU0wcHNVMWRSYjB0VFFUaEpSRVZ3U1VoelowcElVbTloV0UxMFVHNU9iR1JHVGpCaU0wcHNVMWRSYjFSWFJtNWFWRzgyV1ZoQ2QwdERhM1JRYldSc1pFWk9NR0l6U214TFEydDBVRzFrYkdSR1RqQmlNMHBzVTFkUmIwdFRhemRKU0RCblNrWTRNVmxxYkd0Tk1rcHRXV3BuTWxwVVdYcE5NazV0VGxSSk1rMUVaM2RaYW1NMFdtcFdhMXBFVlRKT2FVRTVTVVV4YUZveVZUWlBiV1JzWkVWS2FHTXlWa1ZoV0VsdlNqTmFhR05wWTNCTWExSlVUR2xrY0dKdFVteGxSMVo1U25rMVJWVjVOR3RrUjJod1kza3dLMW95VmpCVk0xSjJZMjFXU2xwRFozQk1hV1JyWlZjd2JreHJVbFJQZVVKd1dtbEJiMGxYYkhwWU1sSndZMmxuYTFoNlZtbFBWMUY2V1cxYWFVOUVXbXhPYWsxNldUSlpNVTFxV1hkUFJFSnBUbnBvYlU1WFVtdE9WRmt5UzFOcloyVjVRblJoTWxKd1kybG5hMWg2Vm1sUFYxRjZXVzFhYVU5RVdteE9hazE2V1RKWk1VMXFXWGRQUkVKcFRucG9iVTVYVW10T1ZGa3lURU5CZDA1Nll6Tk1RMEl3WTI1V2JFdFVjMmRoVjFsblMwaE9NR050YkhkaU0wMXZWVVZvVVZnd09WUk1RMEZ1WkRKc2RVcDVhMmRRVkRBNVNVVmFRbFJHVGtaTFUwSTNTVU5TWms5WFNteE5WMXBvVGpKWk0wNVhWVEZOTWxreVdtcEZlRTFIUm1oUFJHaHBUa1JrYWxwWFZtcE5SMUZuVUZOQ2FHTnVTbWhsVTJkblNqSTFhR0pYVlc1SlJEQXJTVU5rYUdOSFJtcGhSMVZ1VEVOQmJsb3lWbXBpTTAxdVNVUXdLMGxEWkdoalIwWnFZVWRWYmtsRGF6ZEpSMnh0U1VOb2JXUlhOV3BrUjJ4MlltdzViR1ZIYkhwa1NFMXZTak5DZG1NeWJEUllNbVJzWkVoQ00yUlhiR3RLZVd0blNtbFpaMXB1Vm5WWk0xSndZakkxWmxwWWFIQmpNMUo2UzBOa2QySXpUbkJsUmpsdVdsaFNiR1JYYkd0S2VXdHdTVWh6WjBwR09EVlpiVlY0V20xRk0xcHFZekZhVkZWNldtcGFiVTFVUlhkWlYwVTBUMGRKTUU0eVRteGFWMDEzV2tOQk9VbElRblpqTW13MFdESmtiR1JJUWpOa1YyeHJTMGhDZG1NeWJEUllNbVJzWkVkV01XRlhVVzlMVTJzM1NVVkNhbUZIT1ROaWFXZHJXSHBXYVU5WFVYcFpiVnBwVDBSYWJFNXFUWHBaTWxreFRXcFpkMDlFUW1sT2VtaHRUbGRTYTA1VVdUSk1RMEp3WXpOT2JHUkRaMnRZZW14cFdsUkdiVmxVWkcxT2VsWnNUbFJPYlU1dFdYaE5WRUpvV1ZSbk5GbHFVVE5aTWxac1dYcENhMWQ1WkhWWlZ6RnNTakV3Y0VsRU9HZEtSamcxV1cxVmVGcHRSVE5hYW1NeFdsUlZlbHBxV20xTlZFVjNXVmRGTkU5SFNUQk9NazVzV2xkTmQxcEdjMjVpYlVaMFdsTmtaRWxFYjJkYU1sWXdXREpPTVdOdVNteGlibEptWkZoT2JHTnBaM0JMVkhOblVVZE9iMW96U25kTFExSm1UbGRKTlZwRVRtbGFiVWswVG0xVk1rMTZUbXBhYWxWNVRtcEJORTFIU1ROUFIxa3hXa2RSTVU1cVdYTkpSMng2WXpKV01FdERVbVpQVjBwc1RWZGFhRTR5V1ROT1YxVXhUVEpaTWxwcVJYaE5SMFpvVDBSb2FVNUVaR3BhVjFacVRVZFNZa295Wkd4Wk1qbDZTakV3Y0VsRU9HZEtSamcxV1cxVmVGcHRSVE5hYW1NeFdsUlZlbHBxV20xTlZFVjNXVmRGTkU5SFNUQk9NazVzV2xkTmQxcEdjMjVhTWxacVlqTk5ibGhUUVRaSlIyUnNaRVk1YW1SWVNubGFWelV3V0ROV2VscFlTVzlMVTJzM1NVZ3daMlpUUWpsSlNFcHNaRWhXZVdKcFFXdFllbFpwVDFkUmVsbHRXbWxQUkZwc1RtcE5lbGt5V1RGTmFsbDNUMFJDYVU1NmFHMU9WMUpyVGxSWk1rOTVRamxKU0VJeFdXMTRjRmw1UW0xa1Z6VnFaRWRzZG1KcFFtNWFXRkpVWkZka2JscFlUakJoVnpsMVkzbG5hMWg2WkdsYWFrVjVUVVJvYVU5WFJtbE9hbU16VGtSSk1rOVVZekJQVkUxNVQwZFZOVTE2UVhwTk1sSm9TMU5DTjBsRFVtWk9lbU42VGxSSmVGcFhSbWhPUkVKc1QwUk5lbGx0Vm1wUFZHY3pUMVJqTTA1WFJYZGFha2swVFhwVloxQlRRa2RSVlhoVVVsUnpaMHBHT0RKTlZHaG9XVlJuZUZwWFRUVmFWR016V2xSSmVWcHFVVFZaTWsxNFdWUkdhRmxxV1hsWmFrVXpXVk5CT1VsRFkyNVBlVUl3WTI1cloyVjVRbkJhYVVGdlNWVXhhRm95VlRaUGJXUnNaRVpPTUdJelNteFJNamwxV20xc2JsSnRlR2hhZVdkdVkwZG9kMDVJVlhaYVNHeDBUREpXZFZsWFNuTmFWMUZ1VEVOQmEyUkhhSEJqZVRBcldqSldNRlV6VW5aamJWWktXa05uY0V0VGEyZGxlVUo1V2xoU01XTnROR2RhYlVaell6SlZOMGxJTUdkS1JqbHFXbTFSTTFwRWEzcE5WMHBvV20xU2JFNXRXWGRaVkZWNldUSkZNMDFIV1RWUFZFWnRXWHBGTlUxcFFUbEpSekZ3V1ROS2RtUkhiSFJhVTJnd1kyNVdiRXRVYzJkS1JqZzBXa2RSZWs1VVozZE9WRVpzV1hwbmQwMVVhM3BOVjA1dFRsUkJNazlFU1RGTmVrMHlXWHBTYUZsNVFUbEpRMUl3WVVkc2VreFVOV1paTWtacVlVZFZiMHRUTUN0aVJ6bG9Xa05uYTJSSGFIQmplVEFyV0RKa2JHSnRWbmxaV0ZKc1VUSkdhbUZIVmt4YVdHdHZTa1k0TTFsdFdYaE5ha0UwV1dwc2FGbHFXVE5PZWxGNVRtcHJNMDVFYTNwTmFtaHNUMVJOZDAxNlRtdFpVMnR3VDNsQ2NGcHBRVzlLUmpnMFdrZFJlazVVWjNkT1ZFWnNXWHBuZDAxVWEzcE5WMDV0VGxSQk1rOUVTVEZOZWsweVdYcFNhRmw1YTJkbGVVRnJXSHBrYVUxSFdURk5SMFV5VG5wTk1rNVhXbWxPVkVFMFQxUmpkMDVxVm10TlZGa3pUMVJWZDA5VWEzcEpSREJuWWxkc2FtTnRPVEJoVnpGc1MwaFNlV1JYVlhCSlF6Qm5Ta1k1YWxwdFVUTmFSR3Q2VFZkS2FGcHRVbXhPYlZsM1dWUlZlbGt5UlROTlIxazFUMVJHYlZsNlJUVk5hbk5uWXpKV2MxcHFielppUnpsdVMwTktSMkZYTld0aFZ6VnVTVWhPTVZveVpHeGpNMUp3WWpJMFoxcHRPWGxKUTJRM1NrWTRNMWx0V1hoTmFrRTBXV3BzYUZscVdUTk9lbEY1VG1wck0wNUVhM3BOYW1oc1QxUk5kMDE2VG10WldEQnVTVWhTZG1JeWMyZGxlVkptVGpKSmQxcHFWWGRaVkZrelRYcFpNVnB0U1RGTlJHYzFUbnBCTWs1WFVYaE9hbU0xVGxSQk5VOVVUamxqZVVGdldtNUtkbUpUUW1wWlYwNXZXbE5yYVV0VWMyZGpiVll3WkZoS2RVbERVbVpQUjFKclRYcFZORTFFVlhoYVYwMDBUVVJGTlUxNlJtcGFhbFYzVG1wbmVVNVVUWHBPYlUwd1dWZE5OMGxJTUdkS1JqbHNUVVJDYUU5VVpHbGFiVmw0V1RKS2ExbDZTVEJaVkdScFRWZEpORmt5UlRGTlYwWnRUbTFXYVU5RFFUbEpRMUl3WVVkc2VreFVOV1phTWxZd1ZGZEdibHBYTlRCaU1VNXNXVmhLYW1GRmJIVmFSMVkwUzBOck4wbERVbVpPYWtGM1RXMU5lVnB0VlRSYVJGbDRXV3BrYWsxVVVUSk5iVWswVFdwSk5FNXRWWGhQUjBadFdWUkpaMUJUUW1GYVZ6VnJXREZPYkZsWVNtcGhSamxOWkZkT2JHSnRWbVpSVnpWb1lraHNlbUZZVG1aUlZ6Vm9Za2hzTmxwWVNUWlBiV1JzWkVWU2JGcHRSakZpU0ZGdlMxUnpaMHBHT0RSTmJWVTBXVzFGTUU5WFNtcGFiVTB5VG1wU2FWcHRTVEZhUjFVeVdtcGFhazV0U210T1ZGRXlUa05CT1VsRFVtWk9ha0YzVFcxTmVWcHRWVFJhUkZsNFdXcGthazFVVVRKTmJVazBUV3BKTkU1dFZYaFBSMFp0V1ZSSmRGQnVVblpoTWxaMVlWaHdiRXREVW1aT01rcHRUVlJKZDA5SFNUVlpWMGt5VG5wak1FMXFXVFZPZWxFMVRYcEpORnBVYTNwTlJFMTZXa2RGYzBsRFpERmtSMWwwVDBOamNFOTVRV3RZZW1ONFdtcFpNVmxVU1RKUFIwMTNUbTFTYWs5VVVYbE9lbEp0VFdwVk1FNXFUWGxOZWxVeVRWZGFhRWxFTUdkWk1qa3hZbTVSYjBwR09EUk5iVlUwV1cxRk1FOVhTbXBhYlUweVRtcFNhVnB0U1RGYVIxVXlXbXBhYWs1dFNtdE9WRkV5VGtOck4wbERVbVpaVjFwcFRXMUthVnBVVlRKTlZGa3dUa2RPYTAxVVdteFBSMUUxVGtSSmVsbFVhR3BaYWtwcFdtMUZaMUJUUWs1WlYyUnNUMnB3YmxwWVVsUmtSemw1V2xWT2RtSnRXbkJhZVdkdVkwZG9kMDVJVlhaYVNHeDBURE5HTVZwWVNqVllNMlIyWTIxU2VsZ3llSEJpVjJ3d1NubDNaMHBJVW05aFdFMTBVRzFrYkdSR1RqQmlNMHBzVTFkUmIwdFRhemRKUjJ4dFNVTm5hMWg2WTNoYWFsa3hXVlJKTWs5SFRYZE9iVkpxVDFSUmVVNTZVbTFOYWxVd1RtcE5lVTE2VlRKTlYxcG9TVVEwWjBwR09XaGFiVWw1V1cxS2JFNVVXWGhPYWxFd1dUSlJlRTV0VlRSYVJHc3dUV3BPYUU5SFRtbE5iVXB0V1ZOcloyVjVRbnBhVjNodFQycHdjMkl5WTI5SmJFWXhXbGhLTlVsSVpIWmpiVko2U1VkNGNHSlhiREJKU0Vwc1dWZE9iMXBYVVdkTFExSm1UbnBHYlU1cVZtaE5hbGswV1hwQk1scEhUVFZPUkVrelRrZFplVTVVVVRKTmVrbDZUbFJaZUZwdFJYQkpRekJuWWtkc2RHRllVV2RLUmpsb1dtMUplVmx0U214T1ZGbDRUbXBSTUZreVVYaE9iVlUwV2tSck1FMXFUbWhQUjA1cFRXMUtiVmxUU1hCUGVVSjVXbGhTTVdOdE5HZEtlV00zU1Vnd1owcEdPRE5QVjFrd1RucG9hVmw2WjNwYVYxVTFXa1JXYlZwdFRtaE9WMWt3VFhwbk1GcFhVbXBPYlZGNldWTkJPVWxFUVRkSlIxcDJZMjFXYUZreVoyZExRMUptVDBSS2JFOUhTbWhPUkd4cFdUSmFhazVxV1RCWmJWcHBUbGRTYkU1dFdUSlplbHBwV2tSVk1FNXFVV2RaV0UxblNrWTViRTlIVG1oT1YwMTVXVEpKZDAxVVdYaFpWR3MxVDFkUmQwNHlVWGhQUkVsNVRXcG5OVnBVWkdsUFUwRTVVR2xCYTFneVRYbE5SRTVzV1hwQk1sbDZSWGROVkZreVRWUm9iVTFIU1RWYVJFNXBUVVJvYkU5VVVtdE5WRVUxUzFOQ04wbERVbVpOTWxFeldWUkNiVmxVYXpWUFZFcHRUa1JXYVUweVVYbE9hazEzVGtSR2JVNUhWbWxaZWxFeVQwZFpaMUJUUVd0WU1rMTVUVVJPYkZsNlFUSlpla1YzVFZSWk1rMVVhRzFOUjBrMVdrUk9hVTFFYUd4UFZGSnJUVlJGTlV4VU5XNWFXRkpWV2xoS2RGWkhWalJrUTJkd1QzbEJhMWd5VFhsYVZFcHJXa1JDYUUweVdtbGFWR2Q0VDFkTk0wNVVZelZPYWxKcFRtMWFhRnBFUm10TlZFa3lTVVF3WjBwNVl6ZEpRMUptVFVSS2FVMXFWVEpOYW1ScFRucHJNRmx0Um1wT2FtUnJUVVJhYkZsNldtbFpNbEpzV21wT2FVNVhTV2RRVTBKb1kyNUthR1ZUWjJkS00wNHdXVmhLTUVwNVFUbFFhVUZyV0RKTmVVMUVUbXhaZWtFeVdYcEZkMDFVV1RKTlZHaHRUVWRKTlZwRVRtbE5SR2hzVDFSU2EwMVVSVFZNVkRWdVdsaFNWR1JIUm5sa1JUbHRXbTVPYkdSRFozQk1RMEZ1V2xjMWEwcDVRVGxRYVVGcldESk5lVTFFVG14WmVrRXlXWHBGZDAxVVdUSk5WR2h0VFVkSk5WcEVUbWxOUkdoc1QxUlNhMDFVUlRWTVZEVnVXbGhTUm1KdFVsQmFiVnA2V2xoUmIwdFRkMmRMVkhOblNrWTViVTVIVFRKYWFtY3hUbTFWTWs1NldUUlBSRkp0VDBSVk5WbDZZM2xhYWxKc1QxZFNhVmxxUVhwWlUwRTVTVU5TTUdGSGJIcE1WRFZtV1RKR2Mxa3pWbk5aV0ZKc1UxZFNiVXREVW1aYVZFRjNXVlJyTTFsdFdtMU5WMDVwV2tkTmVVNUhSVE5aYWtacFQwZE9hRTVVUm1oYWFscHNXV3BuYzBsRFVtWk5NbEV6V1ZSQ2JWbFVhelZQVkVwdFRrUldhVTB5VVhsT2FrMTNUa1JHYlU1SFZtbFplbEV5VDBkWmNFOTVRbkJhYVVGdlVtdEdUVlV3VldkSlZEQTVTVU5TWmxwcVVtcE9iVmswVGxSYWJFNXFZekpQUkdjd1dtcG5NVTlYVFROTmJWa3dXbFJzYTFsdFNYZE5Na1ZuU21sWlowcEdPVzFPUjAweVdtcG5NVTV0VlRKT2VsazBUMFJTYlU5RVZUVlplbU41V21wU2JFOVhVbWxaYWtGNldWTkJPRWxFUlhCSlNITm5ZVmRaWjB0RFVtWmFhbXQzV20xVk1VNUVRWGRPYlVVd1dtcFNiVTFYVW0xUFYwWm9XbTFXYTA1VWJHdFpiVmw2VFZSTloxQlRRV3RrUjJod1kza3dLMWd5U2pGaFYzaHJWR3RrZVZsWE1WSmtWMVo1WlZObmExaDZUbXRPTWtWM1dtMUZOVTlVYTNsYWFsRXhXV3BPYTAxcVdYcE5SRkY0V21wU2JGbHRUVEJPYW1odFMxTnJaMlY1UVd0WU1scG9Xa2RSTWxscVZUTmFSRkY1V1dwV2JGcFVZM2RhUjA1cldYcEpNRmx0VW1oTmFrVjNUbGRKZVVsRU1HZEtTRkp2WVZoTmRGQnRaR3hrUld4MVdrZFdORXREYTNSUWJWcHdZbTFSYjBwR09XMVBWRUp0V2xSVk1FMUVRVEpaVkZKdFRrZFplRnBIV1RWWlYwWnRXbGRSTVU5WFVtbGFhazE0VFhsck4wbERVbVpPTWxacFRsUkJkMDFVYUd4T1IwbDNUVmRaZUU5RVZYcE5lbWhwVFhwR2FscFVSWGRPVjFFMFdtMVJaMUJUUVc5Wk1qa3hZbTVSYjBwR09XMVpWMUpyVG0xSk1VNHlVVEJOYlVreFdsZFZNMDFIVW1wYVIwMTVUa2RLYTFsVVNYaE5SRlpwVFdscmNFbEVPR2RLU0ZKdllWaE5kRkJ0Wkd4a1JXeDFXa2RXTkV0RGEzUlFiV1JzWkVWU2Rsa3pWblJhVnpVd1MwTlNabHB0Um10YVJGcHBUbFJrYTA1RVNtbE9WMVpzVG5wQ2Exa3lVbXBOYWxKcFdrZEZlVTFVUVRGWmFrcGlUVVl3ZEZCdGJHdExVekFyV2pKV01GSnRiR3hpUjFKWFdWZDRNVnBUWjI1aFZ6VnJXbGhvWmxwSFJqQlpVMk53U1VSdloxSnJSazFWTUZVM1NVZHNiVWxEYUVkUlZYaFVVbE5CYUZCVU1HZEtSamd6V2xkSk1VMUVRWGhQUjFVd1dXcEJlRnBxUlRST1ZFMTZUMGRKZWsxWFRteE5WRUV4V2tSb2JWcERRVzFLYVVGcldIcE9hMDR5UlhkYWJVVTFUMVJyZVZwcVVURlphazVyVFdwWmVrMUVVWGhhYWxKc1dXMU5NRTVxYUcxSlEwVTVTVU5TWms0eVZtbE9WRUYzVFZSb2JFNUhTWGROVjFsNFQwUlZlazE2YUdsTmVrWnFXbFJGZDA1WFVUUmFiVkZ3U1VoelowcEdPRE5PZWsweFRXcEdiRmxYUlRCTlIxVTBUWHBPYVZwWFRUVlBSR00xVG5wak1WbFVRbTFOYW1kNlRsTkJPVWxHVWxOV1ZWVTNTVU5TWms5VVNUTk9iVkYzVFcxV2FscHFUWGxOVjFsM1RsUkthazFFVVROTmJWWnBUVEpHYUZsdFRUVlpNbGxuVUZOQ2VtTklTbkJpYmxKdFMwTkJia3BZVFd4amVWWjZTbmwzWjJNelZtbGpNMUo1UzBOU1prNHlTbTFOVkVsM1QwZEpOVmxYU1RKT2VtTXdUV3BaTlU1NlVUVk5la2swV2xScmVrMUVUWHBhUjBWelNVUkJjMGxEVW1aTlJFcHBUV3BWTWsxcVpHbE9lbXN3V1cxR2FrNXFaR3ROUkZwc1dYcGFhVmt5VW14YWFrNXBUbGRLWWtvelRqQlpXRW93U2pFd2NFeERRV3RZZW1Sc1dXcFZkMDFFUlRSYVZGSnBUVVJHYlUxVVp6Rk5lazAwV1dwTmVGa3lWWGhOUkZaclQwZGFhMHhEUW5wa1YwcDZaRWhKYjBwR09ETlpiVmw0VFdwQk5GbHFiR2haYWxrelRucFJlVTVxYXpOT1JHdDZUV3BvYkU5VVRYZE5lazVyV1ZOM1owcEdPSGROYlVsNVRsUlplVTR5U1ROUFZGSnBXVmROTWs0eVVYZE9iVlpxVG0xS2FscEhWbTFOTWtreFdXeHpibHBYTld0S01UQndTVU5yTjBsRFVtWk5SR2hwV1RKSk5FOUVaM2xPVkVwcVRucFZNVTlYVlhwTmVtZDNUa2RWTlU1dFdtMWFha3BwVFdwVloxQlRRVzVLZW5OblNrWTRNVmxxYkd0Tk1rcHRXV3BuTWxwVVdYcE5NazV0VGxSSk1rMUVaM2RaYW1NMFdtcFdhMXBFVlRKT2FVRTVTVWhPZDJOdGJIVmtSMWx2U2tZNGQwOUhTbXBaYW1jMFQwUkpNVTF0VFROT1ZGVTFXbFJOZWs5RVFUQmFWR3N5V20xYWJVMXRTWGxPVTNkblNrWTROVTFxWXpKYVJFRjVXbGRPYlUxNlNYaGFha0V4VFcxTmQwNUVZM2xhVjBsNldWZEdhVmw2YkdwYWFXczNTVU5TWmxsNlNteE5iVkpyVFVkRmVscHRTbXhQUkVVMVdYcGpNVTU2YXpKT1Iwa3lXbTFHYTAxWFVYaE5hbGxuVUZOQmExaDZaR3haYWxWM1RVUkZORnBVVW1sTlJFWnRUVlJuTVUxNlRUUlphazE0V1RKVmVFMUVWbXRQUjFwclQzbENPVWxJTUdkbVUwSnNZa2hPYkVsSWMyZG1VMEZyV0RKUk1sbFVSVEZPTWxsM1RqSlZkMWw2WnpCT2VrMHhXVzFaZDA1Nlp6UlBWMWw0VFdwcmVVNVVZek5KUkRCblNrWTRkMDF0U1hsT1ZGbDVUakpKTTA5VVVtbFpWMDB5VGpKUmQwNXRWbXBPYlVwcVdrZFdiVTB5U1RGWmJITnVZek5TYUdOdVVXNVlVMEYwU1VOU1prNTZiRzFPUkdNMFdXMU5ORTB5Vm14UFYxRXhXbTFhYWxsVVZtMU9SRTAwVGtkV2ExbDZXbXROTWtVM1NVTlNaazVxUlRSWlYwVTBUVmRXYWs5WFZUTk9NbFY1VFcxWk1FOVhUbXBOVjBWNFdWZEpNazF0U1hoT01rVm5UR293WjJNelZtbGpNMUo1UzBOU1prNHlTbTFOVkVsM1QwZEpOVmxYU1RKT2VtTXdUV3BaTlU1NlVUVk5la2swV2xScmVrMUVUWHBhUjBWelNVTlNaazU2YkcxT1JHTTBXVzFOTkUweVZteFBWMUV4V20xYWFsbFVWbTFPUkUwMFRrZFdhMWw2V210Tk1rVnpTVU5TWmxwRVdtaE5WRlV6V21wQk0xcFVRbXBQUkZFelRYcFdhVnBxUVROUFJHYzFXbXBGZVU5VVNURk9lbU53VDNsQ2NGcHBRVzlLUmpscVRXMVZlVnBIVVhkWlZFNXRXVzFWTkUxVWJHcE9lbFV6VDFSWk1GbHFXbTFaVjFGNFdrUkZlVTVwYTJkbGVVRnJXSHBaZUU5SFJtaFBSRVpzV1hwc2JFNTZaR3hOYWtwdFRrUnNhbGw2Um1oTlYwWnBUbXBLYVUxVVpHaEpRelE1U1VOU1psbDZTbXhOYlZKclRVZEZlbHB0U214UFJFVTFXWHBqTVU1NmF6Sk9SMGt5V20xR2EwMVhVWGhOYWxrM1NVZ3daMXBYZUhwYVUwSTNTVU5TWmxwRVdtaE5WRlV6V21wQk0xcFVRbXBQUkZFelRYcFdhVnBxUVROUFJHYzFXbXBGZVU5VVNURk9lbU5uVUZOQmExaDZRWGxaYWtreFRtcEpNMWxxWXpWT1IwcG9XWHBaTTFwRVFUSmFWMDB5V1cxT2ExcFhXWHBaYWxacFYzbGtiR0p0VVc1WVUwRjBTVU5TWmsxRVNtbE5hbFV5VFdwa2FVNTZhekJaYlVacVRtcGthMDFFV214WmVscHBXVEpTYkZwcVRtbE9WMHBpU2pOT01GbFlTakJLTVRBM1NVTlNaazVxUlRSWlYwVTBUVmRXYWs5WFZUTk9NbFY1VFcxWk1FOVhUbXBOVjBWNFdWZEpNazF0U1hoT01rVm5UR293WjJNelZtbGpNMUo1UzBOU1prNHlTbTFOVkVsM1QwZEpOVmxYU1RKT2VtTXdUV3BaTlU1NlVUVk5la2swV2xScmVrMUVUWHBhUjBWelNVTlNaazFFU21sTmFsVXlUV3BrYVU1NmF6QlpiVVpxVG1wa2EwMUVXbXhaZWxwcFdUSlNiRnBxVG1sT1YwcGlTak5PTUZsWVNqQktNVEJ6U1VOU1pscEVXbWhOVkZVeldtcEJNMXBVUW1wUFJGRXpUWHBXYVZwcVFUTlBSR2MxV21wRmVVOVVTVEZPZW1Od1QzbENPVWxEVW1aT2VteHRUa1JqTkZsdFRUUk5NbFpzVDFkUk1WcHRXbXBaVkZadFRrUk5ORTVIVm10WmVscHJUVEpGWjFCVFFXdFlla0Y1V1dwSk1VNXFTVE5aYW1NMVRrZEthRmw2V1ROYVJFRXlXbGROTWxsdFRtdGFWMWw2V1dwV2FWZDVaR3hpYlZGdVdGUnpaMkZYV1dkTFExSm1XbFJvYWxsVVZtcE5iVTVwVFVSRk1rMVhSVFZQVkd4clRVUmthMDFVWjNsTmFrazBUMWRWTTFscWEyZExlVUY0U1VRME9VbERVbVpPZWtadFRtcFdhRTFxV1RSWmVrRXlXa2ROTlU1RVNUTk9SMWw1VGxSUk1rMTZTWHBPVkZsNFdtMUZjRWxJYzJkS1JqZ3lUVlJvYUZsVVozaGFWMDAxV2xSak0xcFVTWGxhYWxFMVdUSk5lRmxVUm1oWmFsbDVXV3BGTTFsVFFYVlFVMEo2WkZkS2VtUklTVzlLUmpneldXMVplRTFxUVRSWmFteG9XV3BaTTA1NlVYbE9hbXN6VGtScmVrMXFhR3hQVkUxM1RYcE9hMWxUZDJkS1JqZ3pUMWRaTUU1NmFHbFplbWQ2V2xkVk5WcEVWbTFhYlU1b1RsZFpNRTE2WnpCYVYxSnFUbTFSZWxsVGF6ZEpTREJuWmxOQ2NGcHBRVzlLUmpnelRucE5NVTFxUm14WlYwVXdUVWRWTkUxNlRtbGFWMDAxVDBSak5VNTZZekZaVkVKdFRXcG5lazVUYTJkbGVVRnJaRWRvY0dONU1DdFlNazVvV1RKb2JFdERhM1JRYms1b1pHMVZiMHBHT0RKTlZHaG9XVlJuZUZwWFRUVmFWR016V2xSSmVWcHFVVFZaTWsxNFdWUkdhRmxxV1hsWmFrVXpXVk4zWjBwSVVtOWhXRTEwVUd3NWJscFhOV3hqYlVZd1dsVk9hRmt5YUd4VE1sWTFTME5TWms0eVNtMU5WRWwzVDBkSk5WbFhTVEpPZW1Nd1RXcFpOVTU2VVRWTmVrazBXbFJyZWsxRVRYcGFSMFZ3VEVOQ2FHTnVTbWhsVTJoNldsZDRiVTlxY0VSUlZVNUpVbFk1VlZGVlkzQk1RMEo2V2xkNGJVOXFjRVJSVlU1SlVsWTVUVk5WV2taV1JXeE9VbE5yTjBsSVRteGlSMWsyVDIxNGRscDVaMmxWTWtZeVdsZFJaMlJIT0dkWk1rWnFZVWRWYVV0VWMyZG1VMEZyV0hwa2FVMUhXVEZOUjBVeVRucE5NazVYV21sT1ZFRTBUMVJqZDA1cVZtdE5WRmt6VDFSVmQwOVVhM3BKUkRCbllsZHNhbU50T1RCaFZ6RnNTMGhTZVdSWFZYQkpRekJuU2tZNWFscHRVVE5hUkd0NlRWZEthRnB0VW14T2JWbDNXVlJWZWxreVJUTk5SMWsxVDFSR2JWbDZSVFZOYW5Obll6SldjMXBxYnpaaVJ6bHVTME5LUjJGWE5XdGhWelZ1U1VoT01Wb3laR3hqTTFKd1lqSTBaMXB0T1hsSlEyUTNTa1k0TTFsdFdYaE5ha0UwV1dwc2FGbHFXVE5PZWxGNVRtcHJNMDVFYTNwTmFtaHNUMVJOZDAxNlRtdFpXREJ1U1VoU2RtSXljMmRsZVZKbVRqSkpkMXBxVlhkWlZGa3pUWHBaTVZwdFNURk5SR2MxVG5wQk1rNVhVWGhPYW1NMVRsUkJOVTlVVGpsamVVbHdUM2xDT1VsSFRtaGtSMDV2U1VOb1JtVkhUbXhqU0ZKd1lqSTBaMHBHT1dsTmVrRXdXWHBKZWs5RVVYbE5SR1JxVFVSak1VNXFhekpaZWtFMFQxUlplRTlVVFRCYVJHeHFUVU5yWjJWNVFucGFWM2h0VDJwd2MySXlZMjlKYTFaNVkyMDVlVTlwUVdsTWFWSm1XV3BOZDA1SFRYbE5lbWN3VFdwQk0xbDZRVE5PVkZrMVRtMU5kMDlFYXpKTlZHdDZUa2RSTlZsNlFYUlFiV1JzWkVVeGJHTXpUbWhhTWxWdlMxTjNaMWR0Vm5WYVJqbE5ZakpqTms5clZsTlZhV3MzU1Vnd1oyTnRWakJrV0VwMVNVTm5hMWg2WXpOTmVsVjVUVmRXYUZsVVVYZGFWR2Q2VFRKS2JGbDZhelJPZW1zelRucFdhRTFIV1hsUFJFMHhTMU5CTDBsRFVtWk9ha1UwV1ZkRk5FMVhWbXBQVjFVelRqSlZlVTF0V1RCUFYwNXFUVmRGZUZsWFNUSk5iVWw0VGpKRlowOXBRVzVLZW5OblpsTkNkMk50T1RCYVYwNHdXbGRSWjFwdVZuVlpNMUp3WWpJMFoxZ3lTakZoVjNoclZHdGtlVmxYTVZKa1YxWjVaVk5uYTFoNlRtdE9Na1YzV20xRk5VOVVhM2xhYWxFeFdXcE9hMDFxV1hwTlJGRjRXbXBTYkZsdFRUQk9hbWh0UzFOQ04wbERVbVphYW10M1dtMVZNVTVFUVhkT2JVVXdXbXBTYlUxWFVtMVBWMFpvV20xV2EwNVViR3RaYlZsNlRWUk5aMUJUUW5WYVdHTm5WMjFXZFZwR09WUmFWMFo1V1RKb1psUklWbXBhVnpWc1dERk9iRmxZU21waFJqbFNaRmRXZVdWV09VTmlNamx6V2xkR2RVdERhemRKUTFKbVRYcGplbHBFU1RCUFIwa3lXVlJyZDFscVZYcE9iVTB5VFVSSmVGbDZSVEJhYlUwMFRsUkNhMWw2UldkUVUwSm9ZMjVLYUdWVFozQlBlVUZyV0hwTk0wMHlVWGxPUkdocFRtMUZOVTFIU1RGTmVscHFUbXBCZVUxWFRYaE9SMXBxVDBSVmQxcEhUWGhKUTNNNVNVTlNNR0ZIYkhwTVZEVm1ZbTFrZVZsWE1WRlpXRXA2V2xObmExaDZUbXRPTWtWM1dtMUZOVTlVYTNsYWFsRXhXV3BPYTAxcVdYcE5SRkY0V21wU2JGbHRUVEJPYW1odFRFTkJlVXRVYzJkS1JqaDZUbnBPYTAxcVVUUlphbHBvVDFSQ2FVNVVUVEpaZWxsM1RXcEdhazFVVW0xWmVtY3hUVWRTYWsxVFFYSlFVMEZyWkVkb2NHTjVNQ3RZTWpWdVkyMUdkRlZIUm5sak1sVnZTa1k0ZWxwRVpHaE5SMXBvVDFSck5VMXRXVEJPVjBsNldrUkpNazE2UVRCTlYxa3dXbGRLYWs1RVdUUmFhWGRuVFhsck4wbERVbVpOZW1ONldrUkpNRTlIU1RKWlZHdDNXV3BWZWs1dFRUSk5SRWw0V1hwRk1GcHRUVFJPVkVKcldYcEZaMHQ2TUdkS1NGSnZZVmhOZEZCc09YVmFNMHBvWWxaQ2FHTnVUbXhMUTFKbVRUSlJNMWxVUW0xWlZHczFUMVJLYlU1RVZtbE5NbEY1VG1wTmQwNUVSbTFPUjFacFdYcFJNazlIV1hOSlJGRndUM2xDYldJelNteFpWMDV2U1VObmExaDZUVE5OTWxGNVRrUm9hVTV0UlRWTlIwa3hUWHBhYWs1cVFYbE5WMDE0VGtkYWFrOUVWWGRhUjAxNFNVZEdla2xEVW1aT2FtaG9XVmRGZWxwWFdUSk5NbFV6VG1wRk1VOVVTbTFQUjFGNldsUlZORmw2VlhwYWFtUnJUWHBqWjFCVU5HZEtSamg2VG0xSk1rMXRSbXRhYW1ScVRWUmplVTVxWnpWT2JVcHRUVWROTVZwcVFYZFpha1pxVFVST2FWbHBhMmRsZVVKd1dtbEJiMGxYVm5SalNGSTFTME5TWmsxNldtbE9ha3BvV2tkWk0xbDZSVE5OYWxrMFQxUmFhVnBxUW1wT1YxbDNUVWRKZUZsNlFYcFpiVWx3UzFOQ04wbERVbVpPUkZab1RYcG5ORmxVVFRCWk1rNXJUbnBvYlUxRVZUTk9iVmwzVG1wVk1scFhTVFJOUkdjMFQxZFpaMUJUUW14bFNFSnpZakpTYkV0RFkyZEtlWGRuU2tZNGVrNXRTVEpOYlVacldtcGthazFVWTNsT2FtYzFUbTFLYlUxSFRURmFha0YzV1dwR2FrMUVUbWxaYVdzM1NVZGFkbU50Vm1oWk1tZG5TME5TWms1RVZtaE5lbWMwV1ZSTk1Ga3lUbXRPZW1odFRVUlZNMDV0V1hkT2FsVXlXbGRKTkUxRVp6UlBWMWxuV1ZoTlowcEdPRFZOVjFacldUSmFiRmxVV1ROWlYwNXJUa1JTYkZwRVkzbGFWMVp0VGxkRmQwNXRVWGRPVkVsM1dWTnJaMlY1UVd0WU1rVXhXbFJOTlU1WFRYcE9hbFUxVDFST2JWa3lXbXRaTWxacVdrUlNiRTVxYkdwUFYxRjNUbFJzYUVsRU1HZGliVll6U1Vad2JHSnRVbVpWTWxab1kyMU9iMWd3ZURGWk1sWjFXbFk1U21KdFVteGxSamxWV2xoS2RFdERVbVpQVkVac1drZE9iVnBYUlRKT01rWnFXa1JSTUZwWFVUTk5iVlpzV21wV2FFMUVXbXROUkZWNVRVZEZjMGxEVW1aT2FtaG9XVmRGZWxwWFdUSk5NbFV6VG1wRk1VOVVTbTFQUjFGNldsUlZORmw2VlhwYWFtUnJUWHBqY0U5NVFXdFllbGwzVFcxUk5FNTZRWHBOYWxGM1drZEpNRTE2WTNsTlJHc3lUVVJqZWxscVJUUk5WMUY1VGtkV2JFbEVNR2RpYlZZelNVWndiR0p0VW1aVk1sWm9ZMjFPYjFnd2VERlpNbFoxV2xZNVZGcFhSbmxaTW1obVZWaFdiR051YkdaV1IxWjVZbE5uYTFneVJURmFWRTAxVGxkTmVrNXFWVFZQVkU1dFdUSmFhMWt5Vm1wYVJGSnNUbXBzYWs5WFVYZE9WR3hvUzFSeloyRlhXV2RMUkVGblVGUXdPVWxJVGpCamJrSjJZM2xuYTFoNldUUlpWMFpvVFRKV2JVNXFUbXhPZWxsNFRsUnJlVnBxYUd0Tk1sVXhUMGROTVUweVdUTmFSRTB6VEVOQmJtTXpVbWhqYmxGdVMxTnJaMlY1UVd0WWVsbDNUVzFSTkU1NlFYcE5hbEYzV2tkSk1FMTZZM2xOUkdzeVRVUmplbGxxUlRSTlYxRjVUa2RXYkV4VU5YcGFXRkpEWWpJNWVtUkRaM2xMVkhOblpsTkJhMWd5V1RWTlIxcHNUbFJSZDAxRVdtaE9SMWt3V21wR2ExcHFiR2haVjFwc1drUlZOVnBIU20xTmVrVjZURlExYUZwSFVsUmtWMHA0WkZkV2VXVlRaMnRZZWxsM1RXMVJORTU2UVhwTmFsRjNXa2RKTUUxNlkzbE5SR3N5VFVSamVsbHFSVFJOVjFGNVRrZFdiRXhEUWs5V1ZYaE5TMVJ6WjJaVFFqbEpTREJuWTIxV01HUllTblZKUTFKbVdtcHJkMXB0VlRGT1JFRjNUbTFGTUZwcVVtMU5WMUp0VDFkR2FGcHRWbXRPVkd4cldXMVplazFVVFRkSlNEQm5ZMGhXYVdKSGJHcEpSMW94WW0xT01HRlhPWFZKUjJSc1pFVnNkVnBIVmpSTFExSm1UVlJuTWs1cVNtbE9SMFY0V20xT2FVNTZWWGhQVjBreVRtMVZlVmxxYTNsTlZFMHdUV3BrYUUweVRUbGtTRW94V2xOcloyVjVRbkJhYVVGdlNWTlNNR0ZIYkhwTVZEVm1ZVmMxYTFwWVozQkpTSE5uWkVoS05VbEljMmRLU0ZKdllWaE5kRkJzT1hCaWJWSnNaVU5CT1VsR2NHeGliVkptVlRKV2FHTnRUbTlZTUhneFdUSldkVnBVYnpaaU0wSnNZbWxuYTJSSGFIQmplVEFyV2pKV01GTlhOV3RhV0doSFlqSjRhMXBZU1c5S1JqaDRUMFJaTWsxdFNUQlpWRVp0V1RKSk0wNVVSVFZaYWxreVdsUkthVTlVU1hoTmVsRjVUakpGZWxsNWEzQlBlVUk1U1VkT2FHUkhUbTlKUTJoaFdsYzFhMWd4VG14WldFcHFZVVk1VFdSWFRteGliVlptVWxob2FscFlRakJoVnpsMVNVTlNaazVxWXpGT1JHY3lXVzFWTWxsWFNUVlplazAxVFZSb2FVMXRWVFZhUkZFeVRsUm5lVnBIVm14TlIwMXdTVWh6WjBwSVVtOWhXRTEwVUd3NWNHSnRVbXhsUTBFNVNVWndiR0p0VW1aVk1sWm9ZMjFPYjFnd2VERlpNbFoxV2xSdk5sa3pTbXhaV0ZKc1MwTlNNR0ZIYkhwTVZEVnVXbGhTU21KdFVteGxSVnAyWWtkU2JHTnBaMnRZZWtVMFRtcFplVmxxVW1oTlYxcHFXV3BqTVUxVWJHbE9hbHBzVFcxSk5VMXFSWHBPUkVreldWUk9ha3RUYXpkSlNEQm5ZVmRaWjB0RFJXdGtSMmh3WTNrd0sxZ3liSFZhUjFZMFMxTkNOMGxJVW05amJUa3pTVWMxYkdSNVFrWmxSMDVzWTBoU2NHSXlORzlKYkVKNVlqSktjMXBYTUdkWk0wcHNXVmhTY0dKdFkyZFVTRlpxV2xjMWJFbEhiSFZhUjFZMFNVZHNkVWxEU1hWS1NGSnZZVmhOZEZCdFpHeGtSV3gxV2tkV05GSnRPWE5hUjFaNVMwTnJjRTk1UWpsSlNEQm5ZMjFXTUdSWVNuVkpRMUl3WVVkc2VreFVOV1poVnpWcldsaG5OMGxJTUdkalNFcHdaRzFHTUZwVFFtMWtWelZxWkVkc2RtSnBRbVphTWxZd1ZGZEdibHBYTlRCaU1VNXNXVmhLYW1GRmJIVmFSMVkwUzBOcloyVjVRbmxhV0ZJeFkyMDBaMVJYUm01YVZHODJXakpXTUZSWE9XdGFWM2R2U2pKS2MxbFlUakJpU0ZacVdsYzFiR015Vm1oamJVNXZUREpLYzFsWVRqQmlTRlpxV2xjMWJHTXlWbWhqYlU1dlNubHJaMHhVTlhwYVdGSlVaRWM1ZVZwVmJHdExRMUl3WVVkc2VreFVOVzVhV0ZKVVpFYzVlVnBWYkd0TFEydHdTVU13SzFveVZqQlRWelZyV2xobmIwdFVjMmRtVTBKM1pGZEtjMkZYVFdkYWJsWjFXVE5TY0dJeU5HZGhWelZyV2xob1JXVlhNRzlMVTBJM1NVaFNlV1ZUUWpkSlIyeHRTVU5uYUZSWFJtNWFWRzgyV2pKV01GVXpVblpqYlZaRVlqSTFiV0ZYWkVkaVIwWnVTME5rZDJGSVFUQmtVemxyWlZjd2RscFhOV2haYlhoc1drTmpjMGxEVWpCaFIyeDZURlExYmxwWVVsUmtSemw1V2xWc2EwdERhM0JMVTBJM1NVaE9iR0pIV1RaUGJYaDJXbmxuYVZKR2JFNUpSMng2U1VjNWJWcHBTWE5KUm5Cc1ltMVNabFJIT1c1UGFuQlBWREZTU2xFd1ZYQlBlVUo1V2xoU01XTnROR2RhYlVaell6SlZOMGxJTUdkS1JqbG9UVzFKZVU1VVl6Uk9WRUUxV1ZSYWFGcEVXWHBPTWxreVRXMUdhazFFYkcxT01ra3pUMVJqTTAxNVFUbEpRMUl3WVVkc2VreFVOV1phTWxZd1ZGZEdibHBYTlRCaU1VNXNXVmhLYW1GRmJIVmFSMVkwUzBOck4wbERVbVpQVjAxNFRWZFJNRmw2U21sUFIwMHpUV3BuTkZwRVpHeE5hbFpzVG0xYWEwNUVZekpOVkZGNFRUSlpaMUJUUVd0a1IyaHdZM2t3SzFveVZqQlRWelZyV2xob1ZWcFlTblJqZVdkcldESkZlVmxxU1RGT2VtY3hUVVJzYUU1dFJtdE9hazB6V21wWmVWbFhUWGRQVjFreldXcGpOVTU2WTNwTVEwRnVZVmMxYTFwWWFHWmFSMFl3V1ZOamNFOTVRV3RZZWtsNldWUlJOVmxxUm0xT2JWRXdUbnBaTTFscVVYaFBSMWt4VFVSa2FscFhUVEJhUkZKcFRsUkthMGxFTUdkS1NGSnZZVmhOZEZCdFpHeGtSV3gxV2tkV05GWkhWbmxpV0UxdlNraFNiMkZZVFhSUWJXUnNaRVZzZFZwSFZqUkxRMnR6U1VOa2NHSnRVbXhsUmpscldWaFNhRXA1YXpkSlExSm1UVzFHYUZwRWJHbE9iVnBxVFhwQ2ExcFVRWGhPYW1oc1drUlZNMDFFUVhkUFZHaG9UbXBaTTFscWEyZFFVMEpvWTI1S2FHVldPV3RoVjFwdFMwTlNaazlYVFhoTlYxRXdXWHBLYVU5SFRUTk5hbWMwV2tSa2JFMXFWbXhPYlZwclRrUmpNazFVVVhoTk1sbHpTVU5TWmsxcVRtaE9SR3hwVFZkWk1scEVVVE5PYW1ScFRrUkZORnBxVlhkT01rNXNXWHBTYTA1SFNURk5iVkZ3VDNsQmExaDZaRzFaYlZFMVdYcG9hazVxUVROTmFsa3lUV3BPYTFsNlVtbE9lbXQ2VFhwc2JVNXFRbWhPYlZwb1NVUXdaMWxZU25sWldHeG1Xa2RzYlZwcFoydFlla2w2V1ZSUk5WbHFSbTFPYlZFd1RucFpNMWxxVVhoUFIxa3hUVVJrYWxwWFRUQmFSRkpwVGxSS2EweERRV3RZZW14cVRWUkdhMDVIVFhsWmFtaHFUbnBKTkU5SFVUTmFWRWt4V2xSYWJWcEVVVE5PYWtVd1RWUk9iVXRVYzJkak1sWnpXbXB2Tm1KSE9XNUxRMHBDU1drMFoxa3lPVEZpYmxGdlNrWTRlVmxYUm10UFYwa3lXbTFOZWsxSFVteE5SRVV5VDBkV2EwNVVZM2ROUkVFMVQwZEZNazVxWkdsUFUydHdUM2xDZWxwWGVHMVBhbkJ6WWpKamIwbHNTV2xNYVVKcVlqTldkV1JEWjJ0WWVtUnRXVzFSTlZsNmFHcE9ha0V6VFdwWk1rMXFUbXRaZWxKcFRucHJlazE2YkcxT2FrSm9UbTFhYUV0VGF6ZEpRMUptVGxkRk1WbFVWbTFOZWtwb1QwUnJNVTVFYUdwTlYxcHJUbnBSTUZwcVJtaE9SRkUxVFZScmVGbFVZMmRRVTBKT1dWZGtiRTlxY0c1YVdGSlVaRWM1ZVZwVlRuWmliVnB3V25sbmJtTkhhSGRPU0ZWMldraHNkRXd6VW1oYU0wNW1Za2RzZEdGWVVteGphV056U1VOU01HRkhiSHBNVkRWdVdsaFNWR1JIT1hsYVZXeHJTME5yY0U5NVFuQmFhVUZ2U2tZNE1WbFVWbWhPVjFsNlRXMUZORTlVVlRCUFIwMTRXbTFSTTA1RVVtMU5WMFV3VGtScmVFOVVSbWhPZVVFclNVUkJjRWxJYzJkaFYxbG5TMGRPZG1SWE5UQkxRMUptVFcxR2FGcEViR2xPYlZwcVRYcENhMXBVUVhoT2FtaHNXa1JWTTAxRVFYZFBWR2hvVG1wWk0xbHFhM0JKUkRSblNrWTRNVmxVVm1oT1YxbDZUVzFGTkU5VVZUQlBSMDE0V20xUk0wNUVVbTFOVjBVd1RrUnJlRTlVUm1oT2VXdG5aWGxDZWxwWGVHMVBhbkJ6WWpKamIwbHJUakZqYmtwc1ltNVJaMkp1Vm5SWmJWWjVTVWM1YlVsSVVtaGFNMDFuWVZoTloxb3pTbXhaV0ZKc1kybENNR0ZIUm5WSlIzaHdZbGRzTUVsR2MydFllbFpvVGxkRk1WcHFUWGxaVkdjMVRsUlJORmw2Um0xYVJHTXdUa2RaZUZsVVVUQlBWRVUxVFZkRk0xaFRTWE5KUm5Cc1ltMVNabFJIT1c1UGFuQllVVlpLVDB0VWMyZGpiVll3WkZoS2RVbEhXbWhpU0U1c1QzbENPVWxJTUdkS1JqbHBUMVJOTTFreVZUQmFWR2Q1VFdwVk1VNVhUbTFOYWsxM1RucEthVnB0VW14TlYxazFUVWRKZVUxRU1IZFBlVUZyV0hwRmVrOVVZelZOZW1oc1dXcGpNbGxxVlRSWlZFRTFUVlJLYWxscVRtaFBSRWw0VFVkYWFFNXFaM2hKUkRCblRWUkJkMDFFYzJkYWJUbDVXbGRHYW1GRFFXOUtSamg1V1ZkR2EwOVhTVEphYlUxNlRVZFNiRTFFUlRKUFIxWnJUbFJqZDAxRVFUVlBSMFV5VG1wa2FVOVRRbWhqZVVGcldIcE9hMDR5UlhkYWJVVTFUMVJyZVZwcVVURlphazVyVFdwWmVrMUVVWGhhYWxKc1dXMU5NRTVxYUcxTFUwSTNTVU5TWmxscWEzcE9NazVzVGtkVk5FMXFTVEZPVkZacVdtcEplazFFWTNsWmJWcHJXbFJHYlU5VVFtbE5ha0Z5UzNwelowcEdPSGhOZW1zelQxUk5ORnBYU1ROT2JVa3hUMGRGZDA5VVJYbFpNa2w2V1ZSbmVVMVVRbTFaVkZrMFRWTXdkRTk1UVd0a1IyaHdZM2t3SzFneVJtdGFSbEoyVTFjMWExcFlaMjlKUTFJd1lVZHNla3hVTldaalNFcHNZMGRHZVZwVlVuWlplV2RyV0hwT2EwNHlSWGRhYlVVMVQxUnJlVnBxVVRGWmFrNXJUV3BaZWsxRVVYaGFhbEpzV1cxTk1FNXFhRzFMVTBGd1QzbENjRnBwUVc5S1JqaDRUWHByTTA5VVRUUmFWMGt6VG0xSk1VOUhSWGRQVkVWNVdUSkplbGxVWjNsTlZFSnRXVlJaTkUxVFFUaEpSRVZ3U1VoeloyTXlWbk5hYW04MllrYzVia3REU2tKYVIxSndZbTFqWjBwR09XbFBWRTB6V1RKVk1GcFVaM2xOYWxVeFRsZE9iVTFxVFhkT2VrcHBXbTFTYkUxWFdUVk5SMGw1VFVOQmRrbERTWFZKUjA1MlpGYzFNRXREVW1aTmJVWm9Xa1JzYVU1dFdtcE5la0pyV2xSQmVFNXFhR3hhUkZVelRVUkJkMDlVYUdoT2Fsa3pXV3ByY0V4cFFXbEpRMmRwVEc1S2RtUlhOV3RMUTFKbVdXcHJlazR5VG14T1IxVTBUV3BKTVU1VVZtcGFha2w2VFVSamVWbHRXbXRhVkVadFQxUkNhVTFxUVhaWk1qa3hZbTVSYjBwR09IbFpWMFpyVDFkSk1scHRUWHBOUjFKc1RVUkZNazlIVm10T1ZHTjNUVVJCTlU5SFJUSk9hbVJwVDFOcmNVMVVRWGRNUkVsd1RHbEpiRXRUU1hCUGVVRnJaRWRvY0dONU1DdGFNbFl3VTFjMWExcFlaMjlMVXpBcldUSTVkR0pYYkRCTFEyczNTVU5TTUdGSGJIcE1WRFYyWTBoU2NHSlhiRFphVld4MVdrZFdORXREYXpkSlExSm1UVlJOTlU1NmEzcFBSMVpwVG5wYWFVNVVhR2hOUkd0NFRXMU9hVTB5UlRSTmFrVjNXbTFGTWs5RVJXZFFVMEY0VFVSQmQwOTVRamxKU0RCblNrWTVhVTlVVFROWk1sVXdXbFJuZVUxcVZURk9WMDV0VFdwTmQwNTZTbWxhYlZKc1RWZFpOVTFIU1hsTlJEQjNUM2xDYldJelNteFpWMDV2U1VObmExaDZaRzFaYlZFMVdYcG9hazVxUVROTmFsa3lUV3BPYTFsNlVtbE9lbXQ2VFhwc2JVNXFRbWhPYlZwb1NVZEdla2xEVW1aTk1sRXpXVlJDYlZsVWF6VlBWRXB0VGtSV2FVMHlVWGxPYWsxM1RrUkdiVTVIVm1sWmVsRXlUMGRaY0VsSWMyZGpNbFp6V21wdk5tSkhPVzVMUTBwVFdsY3hkbVJ0YkhWYWVVRnJXREpKTlUxNlpHcGFWRkpzVDBSSmVVNVVWVEZaTWxsNVRYcEJNMDF0U20xYVIxVjRXbXByZDFscVNYZEpRemhuU1drMFoxa3lPVEZpYmxGdlNrWTRNMXB0U210UFYwMDBXWHBaZDA1NlNUSk9ha2w2V2tkTk1GbHFZelZOZWswMVdtcFpkMWxVV20xWlUydDFTVU5KWjB0RFNYVmpiVGt4WW0xUmIwcEdPV2xQVkUweldUSlZNRnBVWjNsTmFsVXhUbGRPYlUxcVRYZE9la3BwV20xU2JFMVhXVFZOUjBsNVRVTTVhbUl6Vm5Wa1EyZHJXSHBrYlZsdFVUVlplbWhxVG1wQk0wMXFXVEpOYWs1cldYcFNhVTU2YTNwTmVteHRUbXBDYUU1dFdtaExVMjk0VFVSQmMwMXBhM1ZKYVZWd1NXbHJOMGxEVW1aWmFtdDZUakpPYkU1SFZUUk5ha2t4VGxSV2FscHFTWHBOUkdONVdXMWFhMXBVUm0xUFZFSnBUV3BCY2t0NmMyZEtTRkp2WVZoTmRGQnNPWGxhVnpGMlpHMVdXR0l6U210U2JrcDJZbFZzZFZwSFZqUkxRMEZyV0hwT2EwNHlSWGRhYlVVMVQxUnJlVnBxVVRGWmFrNXJUV3BaZWsxRVVYaGFhbEpzV1cxTk1FNXFhRzFKUTJzM1NVZ3daMHBJVW05aFdFMTBVRzFrYkdSRmJIVmFSMVkwUzBOcmRGQnRUblppVnpGd1pFTm5jRTk1UVd0a1IyaHdZM2t3SzJJelFqQmhWekZ3WlcxV1NtSnRVbXhsUTJkd1QzbEJhMlJIYUhCamVUQXJXREpPYzFwWFJubFdSMFp1WTNsbmNFOTVRamxKUjA1b1pFZE9iMGxEYUVabFIwNXNZMGhTY0dJeU5HZEtSamxwVFhwQk1GbDZTWHBQUkZGNVRVUmthazFFWXpGT2Ftc3lXWHBCTkU5VVdYaFBWRTB3V2tSc2FrMURhMmRsZVVKNldsZDRiVTlxY0hOaU1tTnZTV3RXZVdOdE9YbFBhVUZwVEdsU1psbHFUWGRPUjAxNVRYcG5NRTFxUVROWmVrRXpUbFJaTlU1dFRYZFBSR3N5VFZScmVrNUhVVFZaZWtGMFVHMWtiR1JGTVd4ak0wNW9XakpWYjB0VGQyZFhiVloxV2tZNVRXSXlZelpQYTFaVFZXbHJOMGxJTUdkamJWWXdaRmhLZFVsRFVqQmhSMng2VDNsQ09VbElRbmxoV0Zwb1pFZFZaMXB1Vm5WWk0xSndZakkwWjFnelNteGlWemt5V2xaa2RtTnRVa2RqYlRsMFUxYzFhMXBZWjI5S1JqaDZXa1JrYUUxSFdtaFBWR3MxVFcxWk1FNVhTWHBhUkVreVRYcEJNRTFYV1RCYVYwcHFUa1JaTkZwcGEyZGxlVUZyV0RKRk1WcFVUVFZPVjAxNlRtcFZOVTlVVG0xWk1scHJXVEpXYWxwRVVteE9hbXhxVDFkUmQwNVViR2hKUkRCblltMVdNMGxHY0d4aWJWSm1WVEpXYUdOdFRtOVlNSGd4V1RKV2RWcFdPVXBpYlZKc1pVWTVWVnBZU25STFExSm1UVEpSTTFsVVFtMVpWR3MxVDFSS2JVNUVWbWxOTWxGNVRtcE5kMDVFUm0xT1IxWnBXWHBSTWs5SFdYTkpRMlJ3WW0xU2JHVkdPV3RaV0ZKb1NubHJOMGxEVW1aUFIxRjVXVmRLYVZsNlkzZE5SMUUwVG5wYWJFMUhXbXROUjBrMFdtMU5lazFxV214WmVra3pXVmRaWjFCVFFXdGtSMmh3WTNrd0sxb3lWakJUVnpWcldsaG5iMHRUTUN0a1IxWjVZbFZTZGxrelRXOUtSamxvVGxkVmVrOVVWbXBOZWxreFQxUnJlbHB0VG0xYVIwNXNXVEpSTUZwVVdUVlplbXhyVFVSVk5WbFRhemRKUjFwMlkyMVdhRmt5WjJkTFExSm1UMGRSZVZsWFNtbFplbU4zVFVkUk5FNTZXbXhOUjFwclRVZEpORnB0VFhwTmFscHNXWHBKTTFsWFdXZFpXRTFuU2tZNE1Ga3lVbXBOVkVrd1RucFJNazFIVm14T2VsVjNUMVJKTWs1SFdUSk9iVkV3VGxSSk5GcFVSbXRPUTJ0blpYbEJhMlJIYUhCamVUQXJXakpXTUZOWE5XdGFXR2R2UzFNd0sxcEhWbk5hV0ZKc1MwTlNaazVIVG10WmVrVjVUa1JqTUU1cVFteGFWR014VFVScmVVNXFVbTFPYWxwclRrUlZlVTlIVlhoYVJGRndUM2xDT1VsRFVqQmhSMng2VEZRMWJscFlVa3BpYlZKc1pVTm5jRXhVTldwaU1qRjBZVmhSYjB0VWMyZGpiVll3WkZoS2RVbERVakJoUjJ4NlQzbENPVWxJUW5saU0xSnNXVE5TYkZwRFFtMWtWelZxWkVkc2RtSnBRbVpqU0Vwc1kwZEdlVnBWVW5aWmVXZHJXSHBPYTA0eVJYZGFiVVUxVDFScmVWcHFVVEZaYWs1clRXcFplazFFVVhoYWFsSnNXVzFOTUU1cWFHMUxVMEkzU1VOU1pscFVhM2haTWxVMVRqSlplVmxxVG1wUFIxcHRXVEpKZDA1NldtaFBSRWt4V2xkU2FFNTZhR3ROZWtsblVGTkNkVnBZWTJkWGJWWjFXa1k1VkZwWFJubFpNbWhtVkVoV2FscFhOV3hZTUZKMldUTldkRnBYTlRCTFEyczNTVU5TWmsxNlkzcGFSRWt3VDBkSk1sbFVhM2RaYWxWNlRtMU5NazFFU1hoWmVrVXdXbTFOTkU1VVFtdFpla1ZuVUZOQ2FHTnVTbWhsVTJkdVlWYzFhMXBZYUdaYVIwWXdXVk5qWjFCVU5HZExTRTR3WTIxc2RWcDVhMnRZZWs1clRqSkZkMXB0UlRWUFZHdDVXbXBSTVZscVRtdE5hbGw2VFVSUmVGcHFVbXhaYlUwd1RtcG9iVXRVYzJkS1JqaDZUbnBPYTAxcVVUUlphbHBvVDFSQ2FVNVVUVEpaZWxsM1RXcEdhazFVVW0xWmVtY3hUVWRTYWsxVFFYSlFVMEZyWkVkb2NHTjVNQ3RZTWpWdVkyMUdkRlZIUm5sak1sVnZTa1k0ZWxwRVpHaE5SMXBvVDFSck5VMXRXVEJPVjBsNldrUkpNazE2UVRCTlYxa3dXbGRLYWs1RVdUUmFhWGRuVFdsck4wbERVbVpOZW1ONldrUkpNRTlIU1RKWlZHdDNXV3BWZWs1dFRUSk5SRWw0V1hwRk1GcHRUVFJPVkVKcldYcEZaMHQ2TUdkS1NGSnZZVmhOZEZCc09YVmFNMHBvWWxaQ2FHTnVUbXhMUTFKbVRUSlJNMWxVUW0xWlZHczFUMVJLYlU1RVZtbE5NbEY1VG1wTmQwNUVSbTFPUjFacFdYcFJNazlIV1hOSlJFMXdUM2xCYTFoNlRUTk5NbEY1VGtSb2FVNXRSVFZOUjBreFRYcGFhazVxUVhsTlYwMTRUa2RhYWs5RVZYZGFSMDE0U1VOek9VbERVakJoUjJ4NlRGUTFabUp0WkhsWlZ6RlJXVmhLZWxwVFoydFllazVyVGpKRmQxcHRSVFZQVkd0NVdtcFJNVmxxVG10TmFsbDZUVVJSZUZwcVVteFpiVTB3VG1wb2JVeERRVEJMVkhObldtMDVlVnBYUm1waFEwRnZTa1k0ZWs1NlRtdE5hbEUwV1dwYWFFOVVRbWxPVkUweVdYcFpkMDFxUm1wTlZGSnRXWHBuTVUxSFVtcE5VMEpvWTNsQmExZ3lWVFJaTWtVeFdYcEthbGxxUVhoT2FrWm9UMVJyTlZwRVFUTmFSRVUwVFdwSmVVOUViR3hPTWtrMVNVUXdLMGxEVW1aT2FtaG9XVmRGZWxwWFdUSk5NbFV6VG1wRk1VOVVTbTFQUjFGNldsUlZORmw2VlhwYWFtUnJUWHBqY0VsSWMyZGhWMWxuUzBOU1pscFVhR3BaVkZacVRXMU9hVTFFUlRKTlYwVTFUMVJzYTAxRVpHdE5WR2Q1VFdwSk5FOVhWVE5aYW10blVGUXdaMG95YkhWYVIxWTBXREpTYUdSSFJXNUxVMEkzU1VOU1pscFVhM2haTWxVMVRqSlplVmxxVG1wUFIxcHRXVEpKZDA1NldtaFBSRWt4V2xkU2FFNTZhR3ROZWtsMFVHMUdhMXBGV25CYVYzaHJTMFp3YkdKdFVtWlZNbFpvWTIxT2IxZ3dlREZaTWxaMVdsWTVSMkZYVm5OYVJHODJZVEpXTldReU9YbGFRMmRyV0RKVk5Ga3lSVEZaZWtwcVdXcEJlRTVxUm1oUFZHczFXa1JCTTFwRVJUUk5ha2w1VDBSc2JFNHlTVFZNUTBGcldIcFpORmxYUm1oTk1sWnRUbXBPYkU1NldYaE9WR3Q1V21wb2EwMHlWVEZQUjAweFRUSlpNMXBFVFROTVEwRnVaRmhTYlV4VVoyNUxVMnMzU1Vnd1oxcFhlSHBhVTBJM1NVTlNabHBVYTNoWk1sVTFUakpaZVZscVRtcFBSMXB0V1RKSmQwNTZXbWhQUkVreFdsZFNhRTU2YUd0TmVrbDBVRzFHYTFwRlduQmFWM2hyUzBad2JHSnRVbVpWTWxab1kyMU9iMWd3ZURGWk1sWjFXbFk1UjJGWFZuTmFSRzgyWkZjMVZHUkhPWGxhVjFGdlNrWTViRTlIVG1oT1YwMTVXVEpKZDAxVVdYaFpWR3MxVDFkUmQwNHlVWGhQUkVsNVRXcG5OVnBVWkdsUFUzZG5Ta1k0TWs5SFJtaFpWRTVzV21wWmVscFVZekpOVkZVMVRXMVpORnBFVG14T1ZHaHFUbFJPYlU0eVVYcE9lWGRuU2pOV01GcHBNRFJLZVd0d1QzbENPVWxJTUdkamJWWXdaRmhLZFVsRFVtWmFWR3Q0V1RKVk5VNHlXWGxaYWs1cVQwZGFiVmt5U1hkT2VscG9UMFJKTVZwWFVtaE9lbWhyVFhwSk4wbElNR2RqU0VwMlpFZFdhbVJIVm10SlIxb3hZbTFPTUdGWE9YVkpSamwxV2pOS2FHSldRbWhqYms1c1MwTlNaazB5VVROWlZFSnRXVlJyTlU5VVNtMU9SRlpwVFRKUmVVNXFUWGRPUkVadFRrZFdhVmw2VVRKUFIxbHpTVU5TWmsxRVFUVk5ha0Y2VGxSamVFMXRXVE5hYlZFd1RWZEtiVTFVUm10UFJHUnRXVlJuTTAxcVFUVmFSRmx3U1VoelowcEdPSHBhUkdSb1RVZGFhRTlVYXpWTmJWa3dUbGRKZWxwRVNUSk5la0V3VFZkWk1GcFhTbXBPUkZrMFdtbEJPVWxJVGpCamJscG9Za05uYTFoNlRtdE9Na1YzV20xRk5VOVVhM2xhYWxFeFdXcE9hMDFxV1hwTlJGRjRXbXBTYkZsdFRUQk9hbWh0UzFSelowcEdPSGROUkd0NVRVUk5NVTU2UlhsYWFtUnRXa1JSZUZsdFdYaE5WMUUwVGpKYWFFOUVZM2xOUkd4clRtbEJPVWxIYkhWa1NGcG9Za05uYTFoNlFYZFBWRWwzVFhwVk0wMVVTbTFPTWxwclRrUkdhVnBxUlhoYVJHY3pXbTFGTkU1NlNYZFBWMUV5UzFSelowcEdPV2xaVjBsNlRXcFJNRTVVWTNwTmVrWnFUbnBhYVU1SFdUSmFhbXQ2V21wV2FFMXFUbWhPYWtacFRYbEJPVWxIUm5samJVWTFTME5CYm1NelVtaGpibEZ1VEdsQmExaDZRWGRQVkVsM1RYcFZNMDFVU20xT01scHJUa1JHYVZwcVJYaGFSR2N6V20xRk5FNTZTWGRQVjFFeVNVUXdLMGxEWTI1TVEwRnVXak5LYUdKVFkzVkpRMUptVFVSQk5VMXFRWHBPVkdONFRXMVpNMXB0VVRCTlYwcHRUVlJHYTA5RVpHMVpWR2N6VFdwQk5WcEVXV2RRVkRSblNubGpjMGxEWkd4aWJWRnVUR2xCYTFoNlFYZFBWRWwzVFhwVk0wMVVTbTFPTWxwclRrUkdhVnBxUlhoYVJHY3pXbTFGTkU1NlNYZFBWMUV5U1VRd0swbERZMjVNUTBGd1QzbEJhMWd5VFhkTmVsVTBXbXBTYWs5SFZtbE9lbU16VG5wRmQwNVhWWGhaYW1jelRtcENhazlVUVRCT2VrVXdTVVF3WjJNelVubGlSMVoxUzBOU1prMHlVVE5aVkVKdFdWUnJOVTlVU20xT1JGWnBUVEpSZVU1cVRYZE9SRVp0VGtkV2FWbDZVVEpQUjFsd1QzbENjRnBwUVc5S1JqbHFUVVJOTVU5SFdUQlplbWhzV1dwak0wNTZZM2hOUkZac1RWZEpORTU2V1hkWmVtdDNUa1JqZUU1RFFTdEpRMUptVFVSQk5VMXFRWHBPVkdONFRXMVpNMXB0VVRCTlYwcHRUVlJHYTA5RVpHMVpWR2N6VFdwQk5WcEVXV2RLYVZsblNrWTRkMDFFYTNsTlJFMHhUbnBGZVZwcVpHMWFSRkY0V1cxWmVFMVhVVFJPTWxwb1QwUmplVTFFYkd0T2FVRXJTVVJCY0VsSWMyZEtSamxvVDBST2FFMVhVVE5PVkZKb1dYcGplVTFFUW1oT01sa3dXa1JWTTFwSFJUQmFhbWQ2VFhwTk1scFRRVGxKUTFKbVdYcEJlazVVYUcxT1IwMDBXbGRKTTA1Nll6Tk5WRUV4V2xSR2FVOUVZekpOUjAwMVRVUlJNMDFVVVdkTVUwRnJXSHBCZDA5VVNYZE5lbFV6VFZSS2JVNHlXbXRPUkVacFdtcEZlRnBFWnpOYWJVVTBUbnBKZDA5WFVUSlBlVUZyV0RKS2FGbHFUWGxPUkZFeFRucE5lazFYVFROT2JVa3dXbXBhYlU5VVRtMU9WMFY1VFRKRk1rMVhTWHBYZVdSNlpFZEdlV1JEWTNWSlExSm1UVVJCTlUxcVFYcE9WR040VFcxWk0xcHRVVEJOVjBwdFRWUkdhMDlFWkcxWlZHY3pUV3BCTlZwRVdtUkpSREJuWXpOV2FXTXpVbmxMUTFKbVRUSlJNMWxVUW0xWlZHczFUMVJLYlU1RVZtbE5NbEY1VG1wTmQwNUVSbTFPUjFacFdYcFJNazlIV1hOSlJFRnpTVU5TWmsxRVFUVk5ha0Y2VGxSamVFMXRXVE5hYlZFd1RWZEtiVTFVUm10UFJHUnRXVlJuTTAxcVFUVmFSRmx3VDNsQmExZ3lTbWhaYWsxNVRrUlJNVTU2VFhwTlYwMHpUbTFKTUZwcVdtMVBWRTV0VGxkRmVVMHlSVEpOVjBsNlYzbGtiR0p0VVc1TWFVRnJXSHBCZDA5VVNYZE5lbFV6VFZSS2JVNHlXbXRPUkVacFdtcEZlRnBFWnpOYWJVVTBUbnBKZDA5WFVUSllVMEU1U1VoT01WbHVUakJqYVdkcldIcE9hMDR5UlhkYWJVVTFUMVJyZVZwcVVURlphazVyVFdwWmVrMUVVWGhhYWxKc1dXMU5NRTVxYUcxTVEwRnJXREpGTkUweVJYaGFSR014VGtkR2FrNTZTWGROUjBVeldtcFNhMDVVWkd0WlZGSnRUMFJOZWsxNldteE1RMEZyV0hwQmQwOVVTWGROZWxVelRWUktiVTR5V210T1JFWnBXbXBGZUZwRVp6TmFiVVUwVG5wSmQwOVhVVEpMVkhOblNrWTVhVmxYU1hwTmFsRXdUbFJqZWsxNlJtcE9lbHBwVGtkWk1scHFhM3BhYWxab1RXcE9hRTVxUm1sTk1YTnVXak5LYUdKVFkzVkpRMUptVFVSQk5VMXFRWHBPVkdONFRXMVpNMXB0VVRCTlYwcHRUVlJHYTA5RVpHMVpWR2N6VFdwQk5WcEVXbVJKUkRCbldWaEtlVmxZYTI5TFZITm5XbTA1ZVVsRFoydFlla1pwV1hwR2JFMHlTVFJQVkUwd1RtcGFiVTlFWkcxT2FscHJXa1JuTTAxcVdtMU9WMVpyVDBkUk5VbEVNR2ROVkhOblNrWTRlRmx0VFhoYVZFNXBUMFJyZWs1RVdUSmFhbWN6V21wWk1scEhVVFJPZWtreVdtcFdiRnBFYUd0UFUwRTRTVU5TWmxsVVozcFpWRVpyVG5wVk1GbFhUVE5OYWtGM1dWUmtiVTVIVVRGT01sSm9Ua2RaTkUxNlRYcE9iVlUzU1VOU1prMVhTbXBOVjFWNldXcG5OVTE2VVRKT2JWazBUakpaTWs1dFVtdFBSR041VG0xWk1WcFhVVFJhUkd0eVMzbHJaMlY1UVd0WU1rcG9XV3BOZVU1RVVURk9lazE2VFZkTk0wNXRTVEJhYWxwdFQxUk9iVTVYUlhsTk1rVXlUVmRKZWxkNVpHNWpiVVowU25rMFowcEdPSGROUkd0NVRVUk5NVTU2UlhsYWFtUnRXa1JSZUZsdFdYaE5WMUUwVGpKYWFFOUVZM2xOUkd4clRtd3hZbGhUUVRsSlNFNHhXVzVPTUdOcFoydFllazVyVGpKRmQxcHRSVFZQVkd0NVdtcFJNVmxxVG10TmFsbDZUVVJSZUZwcVVteFpiVTB3VG1wb2JVeERRV3RZZWtacFdYcEdiRTB5U1RSUFZFMHdUbXBhYlU5RVpHMU9hbHByV2tSbk0wMXFXbTFPVjFaclQwZFJOVXhEUVd0WWVrRjNUMVJKZDAxNlZUTk5WRXB0VGpKYWEwNUVSbWxhYWtWNFdrUm5NMXB0UlRST2VrbDNUMWRSTWt0VWMyZG1VMEZyV0RKS2FGbHFUWGxPUkZFeFRucE5lazFYVFROT2JVa3dXbXBhYlU5VVRtMU9WMFY1VFRKRk1rMVhTWHBYZVdSdVkyMUdkRXA1TkdkS1JqaDNUVVJyZVUxRVRURk9la1Y1V21wa2JWcEVVWGhaYlZsNFRWZFJORTR5V21oUFJHTjVUVVJzYTA1c01HZFFVMEp4WWpKc2RVdERZMmRLZVhkblNrWTVhVmxYU1hwTmFsRXdUbFJqZWsxNlJtcE9lbHBwVGtkWk1scHFhM3BhYWxab1RXcE9hRTVxUm1sTk1YTnVXak5LYUdKVFkzVkpRMUptVFVSQk5VMXFRWHBPVkdONFRXMVpNMXB0VVRCTlYwcHRUVlJHYTA5RVpHMVpWR2N6VFdwQk5WcEVXbVJMVkhOblpsTkNlVnBZVWpGamJUUm5Ta1k1YVZsWFNYcE5hbEV3VGxSamVrMTZSbXBPZWxwcFRrZFpNbHBxYTNwYWFsWm9UV3BPYUU1cVJtbE5lbk5uWmxOQ2QyTnRPVEJhVjA0d1dsZFJaMXB1Vm5WWk0xSndZakkwWjFneVRtaGlSMDR4WWtkR01GcFZiR3RhYVdoaFdsYzFhMWd4VG14WldFcHFZVVk1VFdSWFRteGliVlptVTFjMU1GcFlTbTFaVjA1c1NVTlNabHBVUVhkWlZHc3pXVzFhYlUxWFRtbGFSMDE1VGtkRk0xbHFSbWxQUjA1b1RsUkdhRnBxV214WmFtZHpTVU5TWmsweVVUTlpWRUp0V1ZSck5VOVVTbTFPUkZacFRUSlJlVTVxVFhkT1JFWnRUa2RXYVZsNlVUSlBSMWx3U1VoelowcEdPVzFhYlZVelRrUlplRTU2VW0xUFJGSnNXbGRKZUZsdFdtcE9SRWt4VFdwS2FsbFhSVEpaYWtGM1RYbEJPVWxFUVRkSlExSm1UV3BCZWxwRVpHeGFSR2hwV1dwTmVVMXFZelJhYW14cVdWUlpOVmx0VVRST2Fsa3hUMWRPYkZwcWEyZFFVMEZyV0RKVmQwMUhSVFZPTWtwdFdtcEdhbGx0VW1wTmFsSm9UakpKZUZscWFHcFpWRlY0V1ZkWk1scFhTVFJNVkRWdVdsaFNWR0ZYTVhCaVIwWjVZVmhTTlV0RGF6ZEpRMUptV1ZSV2JFMTZhekZaZWsweVRsUnJOVTB5V21wYWJWSnFXbGRPYTA1SFZUSlBWMDAxV2tSQk1VOVhSV2RRVTBKMVdsaGpaMWR0Vm5WYVJqbFVXbGRHZVZreWFHWlVTRlpxV2xjMWJGZ3diSFZhUjFZMFdERlNiR050TUc5S1JqaDZXa1JrYUUxSFdtaFBWR3MxVFcxWk1FNVhTWHBhUkVreVRYcEJNRTFYV1RCYVYwcHFUa1JaTkZwcGF6ZEpRMUptV20xYWJFNTZVVEpOVkdNd1dtcG5NRnBYVm1sTlYwcHRXWHBSZVU1VVNYbFpNa1pvVG0xSmQwMUVUV2RMZWpCblNraFNiMkZZVFhSUWJEbHVXbGhTVlZwWVNuUmFia3BzWTFObmExZ3lWWGROUjBVMVRqSktiVnBxUm1wWmJWSnFUV3BTYUU0eVNYaFphbWhxV1ZSVmVGbFhXVEphVjBrMFRFTkJhMWg2VG10T01rVjNXbTFGTlU5VWEzbGFhbEV4V1dwT2EwMXFXWHBOUkZGNFdtcFNiRmx0VFRCT2FtaHRURU5CYm1GWE5XdGFXR2htV2tkR01GbFRZM0JQZVVKNVdsaFNNV050TkdkS1JqaDVUVVJPYTA0eVZtdFBSMHBwVFhwSmVVNTZhRzFQVjA1b1RtcHNhVnBFWnpKT2FsVTFXVEpXYlU5VE1DdGtSMWx2U2tZNWJWcHRWVE5PUkZsNFRucFNiVTlFVW14YVYwbDRXVzFhYWs1RVNURk5ha3BxV1ZkRk1sbHFRWGROZVd0blMybEJhMWg2U1hkTk1sRXpXbGRSTkZsdFNYcE5ha2t6VDBkWk5Wa3lSVEpQVjBwclQwUlpNazVVYkdwYVYxazFURlExY0ZwSFdXOUtSamxvVGxkVmVrOVVWbXBOZWxreFQxUnJlbHB0VG0xYVIwNXNXVEpSTUZwVVdUVlplbXhyVFVSVk5WbFRkMmRLUmpsc1RVUkNhRTlVWkdsYWJWbDRXVEpLYTFsNlNUQlpWR1JwVFZkSk5Ga3lSVEZOVjBadFRtMVdhVTlEYXpkSlNEQm5ZMGhLZG1SSFZtcGtSMVpyU1VkYU1XSnRUakJoVnpsMVNVWTVibHBZVWxWYVdFcDBXbTVLYkdOVGFHRmFWelZyV0RGT2JGbFlTbXBoUmpsTlpGZE9iR0p0Vm1aVFZ6VXdXbGhLYlZsWFRteEpRMUptV2xSQmQxbFVhek5aYlZwdFRWZE9hVnBIVFhsT1IwVXpXV3BHYVU5SFRtaE9WRVpvV21wYWJGbHFaM05KUTFKbVdWUldiRTE2YXpGWmVrMHlUbFJyTlUweVdtcGFiVkpxV2xkT2EwNUhWVEpQVjAwMVdrUkJNVTlYUlhOSlExSm1UbXBvYUZsWFJYcGFWMWt5VFRKVk0wNXFSVEZQVkVwdFQwZFJlbHBVVlRSWmVsVjZXbXBrYTAxNlkyZFFVMEpQVmxWNFRVdFRRamRKUTFKbVRXcGplRnBFU1RWT2JWRTFUbFJDYTAxRVFUSlplbVJwVGxSQmVFNUVWWHBhYWsxM1dXMUdiRmxxU1dkUVUwRnJaRWRvY0dONU1DdFlNbVJzWkVaU2JHTnRNVzFqYlZaNFkzbG5hMWd5VlhkTlIwVTFUakpLYlZwcVJtcFpiVkpxVFdwU2FFNHlTWGhaYW1ocVdWUlZlRmxYV1RKYVYwazBURU5CYTFneVJURmFWRTAxVGxkTmVrNXFWVFZQVkU1dFdUSmFhMWt5Vm1wYVJGSnNUbXBzYWs5WFVYZE9WR3hvVEVOQmExaDZXVFJaVjBab1RUSldiVTVxVG14T2VsbDRUbFJyZVZwcWFHdE5NbFV4VDBkTk1VMHlXVE5hUkUwelMxUnpaMHBHT1dwTmVtc3hXVzFPYWxwcVl6SlpiVmw0VGtSWmVVNHlSWGRQVjFsNVdrUlpkMDlFVFRKWmVrSnRXbWxCT1VsRVFUZEpSMXAyWTIxV2FGa3laMmRMUTFKbVRXcGplRnBFU1RWT2JWRTFUbFJDYTAxRVFUSlplbVJwVGxSQmVFNUVWWHBhYWsxM1dXMUdiRmxxU1dkWldFMW5Ta1k0TlUxdFJUVmFSRlUwVFVSak1FNVVXWHBhVkU1cldYcEpNVTFFVG14WlZFVTFUVlJHYVZwdFJYaGFVMEU1VUdsQmExaDZhek5OZWxac1dXMU5lRTVVWXpOTlIwcHFUakpaTUU0eVVUVlBWR1JxVG5wWmVscFVaM2hPUkdkM1MxTkNOMGxEVW1aWmVrMDFUbGRLYWxreVdUTk9iVXB0VFZSUk1rMXFaR2hOUkd4dFRXMVJNazFFWjNwT2JVMTNXbTFaWjB0Nk1HZEtSamcxVG5wTk1WcFhTbXBOVkZVelRucENhVmw2WkcxT1JHUnJUMVJyTTFsNll6Sk5NbFUwVFZSUk5FMUVjMmRtVTBKNVdsaFNNV050TkdkS1JqbHFUWHByTVZsdFRtcGFhbU15V1cxWmVFNUVXWGxPTWtWM1QxZFplVnBFV1hkUFJFMHlXWHBDYlZwcWMyZG1VMEozWTIwNU1GcFhUakJhVjFGbldtNVdkVmt6VW5CaU1qUm5XREprYkdSR1VteGpiVEZ0WTIxV2VHTjVhR0ZhVnpWcldERk9iRmxZU21waFJqbE5aRmRPYkdKdFZtWlRWelV3V2xoS2JWbFhUbXhKUTFKbVdsUkJkMWxVYXpOWmJWcHRUVmRPYVZwSFRYbE9SMFV6V1dwR2FVOUhUbWhPVkVab1dtcGFiRmxxWjNOSlExSm1XVlJXYkUxNmF6RlplazB5VGxSck5VMHlXbXBhYlZKcVdsZE9hMDVIVlRKUFYwMDFXa1JCTVU5WFJYTkpRMUptVG1wb2FGbFhSWHBhVjFreVRUSlZNMDVxUlRGUFZFcHRUMGRSZWxwVVZUUlplbFY2V21wa2EwMTZZMmRRVTBKUFZsVjRUVXRZYzJkS1JqbG9UbGRWZWs5VVZtcE5lbGt4VDFScmVscHRUbTFhUjA1c1dUSlJNRnBVV1RWWmVteHJUVVJWTlZsVFFUbEpSelZzWkhsQ1lWcFhOV3RZTVU1c1dWaEthbUZHT1Uxa1YwNXNZbTFXWmxOWE5XdGFXR2htVmtkV2VXSlRhSHBrU0Vvd1lqSjRkbVF5Vm5sTFExSm1XVlJXYkUxNmF6RlplazB5VGxSck5VMHlXbXBhYlZKcVdsZE9hMDVIVlRKUFYwMDFXa1JCTVU5WFJYQk1RMEZyV0hwWk5GbFhSbWhOTWxadFRtcE9iRTU2V1hoT1ZHdDVXbXBvYTAweVZURlBSMDB4VFRKWk0xcEVUVE5MVkhOblkyMVdNR1JZU25WSlExSm1XbFJCZDFsVWF6TlpiVnB0VFZkT2FWcEhUWGxPUjBVeldXcEdhVTlIVG1oT1ZFWm9XbXBhYkZscVozUlFibEpzWTIweFIyTnRWbmhqZVdkcldESkZNVnBVVFRWT1YwMTZUbXBWTlU5VVRtMVpNbHByV1RKV2FscEVVbXhPYW14cVQxZFJkMDVVYkdoTFZITm5abE5DZDJSWFNuTmhWMDFuV201V2RWa3pVbkJpTWpSbldqSldNRk5YTld0YVdHaFZXbGhLZEdONWFHRmFWelZyV0RGT2JGbFlTbXBoUmpsTlpGZE9iR0p0Vm1aVFZ6VXdXbGhLYlZsWFRteEpRMUptV2xSQmQxbFVhek5aYlZwdFRWZE9hVnBIVFhsT1IwVXpXV3BHYVU5SFRtaE9WRVpvV21wYWJGbHFaM05KUTFKbVRtcG9hRmxYUlhwYVYxa3lUVEpWTTA1cVJURlBWRXB0VDBkUmVscFVWVFJaZWxWNldtcGthMDE2WTJkUVUwRnVZVmMxYTFwWWFHWmFSMFl3V1ZZNWNscFliRE5pTTBwclNubHJaMlY1UVd0WU1rMDBUa2ROTlZwVVRUTk5iVVUwV2tSTmVVOVhTWGxQUkUwMFRucEJNbHBFYXpWYVJGcHBUWHBGTWtsRU1HZEtSamxzVFVSQ2FFOVVaR2xhYlZsNFdUSkthMWw2U1RCWlZHUnBUVmRKTkZreVJURk5WMFp0VG0xV2FVOURNQ3RrUjFaNVlsaE5iMHRVYzJkS1JqZ3lXa1JqTVU1SFZYcE5SRVV5V2xSV2FWbFVTVEpQUkdzeVRXcHJlVTF0VW14TlJHZDZUMWRHYVU5VFFUbEpSMFo1WTIxR05VdERhemRKUjFwMlkyMVdhRmt5WjJkTFExSm1XWHBuTUZsNmJHeE5lbU41V1ZSb2EwMTZTVFZaYWtrMFRYcG5NMDFFV210UFZHeHJUbTFKZWsxVVdXZFpXRTFuU2tZNWFFNVhWWHBQVkZacVRYcFpNVTlVYTNwYWJVNXRXa2RPYkZreVVUQmFWRmsxV1hwc2EwMUVWVFZaVTJ0blpYbENjRnBwUVc5S1JqbG9UbGRWZWs5VVZtcE5lbGt4VDFScmVscHRUbTFhUjA1c1dUSlJNRnBVV1RWWmVteHJUVVJWTlZsVE1DdGFiV3hzWWtkUloxQlVNR2RLUmpneVQwZEdhRmxVVG14YWFsbDZXbFJqTWsxVVZUVk5iVmswV2tST2JFNVVhR3BPVkU1dFRqSlJlazU1YTJkbGVVRnJXSHBhYTA1NlZUQmFWRTEzVFZSYWJFNVhTbWhOYWxrMFQxUlplVTlVU1hsYVIxVjNUMFJOTlZsWFNUVlhNVEJuVUZOQmExZ3lSVEZhVkUwMVRsZE5lazVxVlRWUFZFNXRXVEphYTFreVZtcGFSRkpzVG1wc2FrOVhVWGRPVkd4b1RGUTFNRnBZYURCUGVVSTVTVWd3WjJOdFZqQmtXRXAxU1VkR2VXTnRSalZZTTFaMVlWaEdNVnBUWjJ0WWVscHJUbnBWTUZwVVRYZE5WRnBzVGxkS2FFMXFXVFJQVkZsNVQxUkplVnBIVlhkUFJFMDFXVmRKTlV0VWMyZG1VMEozWkZkS2MyRlhUV2RhYmxaMVdUTlNjR0l5TkdkamJWWjBZak5hYkZGWGVITkxRMnRuWlhsQ2VscFhlRzFQYW5CellqSmpiMGxzZEZOU1ZURlFWbXRXUWxSRmVHUkpSazR3V1ZoS01FbHBhemRKUjFwMlkybEJiMHBHT0hoWmJVMTRXbFJPYVU5RWEzcE9SRmt5V21wbk0xcHFXVEphUjFFMFRucEpNbHBxVm14YVJHaHJUMVF3ZDA5NVVtWk5WMHBxVFZkVmVsbHFaelZOZWxFeVRtMVpORTR5V1RKT2JWSnJUMFJqZVU1dFdURmFWMUUwV2tSck9FcElVbTloV0UxMFVHMWtiR1JGYkhWYVIxWTBTME5yZEZCdE1XaGxSVkoyV1hsbmNFOTVVbVpOVjBwcVRWZFZlbGxxWnpWTmVsRXlUbTFaTkU0eVdUSk9iVkpyVDBSamVVNXRXVEZhVjFFMFdrUnJja3Q1YTJkbGVVSndXbWxCYjBsVFVqQmhSMng2VEZRMWJscFlVa3BpYlZKc1pVTm5jRXhVTlhCak1GSnNZa2RXTUZwWFVXOUtSamg0V1cxTmVGcFVUbWxQUkd0NlRrUlpNbHBxWnpOYWFsa3lXa2RSTkU1NlNUSmFhbFpzV2tSb2EwOVRhM0JKU0hOblNraFNiMkZZVFhSUWJXUnNaRVZzZFZwSFZqUkxRMnQwVUcxU2JHSkhWakJhVTJkcldIcEdhVmw2Um14Tk1razBUMVJOTUU1cVdtMVBSR1J0VG1wYWExcEVaek5OYWxwdFRsZFdhMDlIVVRWTFZITm5abE5DT1VsRFVqQmhSMng2VEZRMWJscFlVa3BpYlZKc1pVTm5jRXhVTldwaU1qRjBZVmhSYjB0VWMyZEtTRkp2WVZoTmRGQnRPWGRrUjJ4MFlWaHdiRk5YTld0YVdHZHZTMVJ6WjJNeVZuTmFhbTgyWWtjNWJrdERTbUpWYTFaT1ZERmFSbEZWZUUxWVUwSkZZakkxYkVscGF6ZEpTREJuWTBoV2FXSkhiR3BKUjFveFltMU9NR0ZYT1hWSlJ6bDNaRWRzZEdGWWNHeFRWelZyV2xobmIwdFRRamRKUTFKbVdUSmFhMDR5VVRWTmVrWnBXVmRhYTFwVVdtMU5SMFV4VFRKT2FFNTZRbTFQVkd0NFdtMU5lRTlVU1dkUVUwSjBZVmRPZVdJelVuQmlWMVZ2WkVoS01WcFRhemRKU0U1c1lrZFpOazl0ZUhaYWVXZHBWekE1VVZaRmJFNVRWbkJHV0ZOQ1ZHUkhPWGxhVTBKaVNXazBhMlJIYUhCamVUQXJXakpXTUZVelVuWmpiVlpLV2tObmNFeHBTbVJKUlhneFdUSldkVnBUUW5CaWJWSnNaVU5DZG1OSVVuQmlWMng2V1ZoU2NHSXlOR2RqTTFKb1kyNVNiRnBEU1hCUGVVRnJXSHBGTWsxSFdUQk9SRkpxV1hwRmQxcFVWbTFhVjFWNVdXMWFhMWw2YUdwUFZHZDNXVzFaZVU1RVNYZEpSREJuU2toU2IyRllUWFJRYldSc1pFVnNkVnBIVmpSTFEydDBVRzA1ZDJSSGJIUmhXSEJzUzBOck4wbERVbVpOVkVGNVRrUkZNMXBFVG0xT2FtdDVUVlJCTWs1dFJURlBSRWt4V1dwWk1sbHRXbXBQUkZacFdYcFpaMUJUUW5SaFYwNTVZak5TY0dKWFZXOWtTRW94V2xOcloweFRRV3RZTWs1dFdrUmthMDlVVFhoWmJVWnRXa2RWTWxwcVFtaE9WRTVxV1ZSamQxcHFhelZOVjFwcVRWUnJlVTk1UW5wYVYzaHRUMnB3YzJJeVkyOUpiSFJRVlVaU1NsUlZiR0ZTVmpCblYzbEpkVXBJVW05aFdFMTBVRzFrYkdSR1RqQmlNMHBzVTFkUmIwdFROR2xZVTBKTlpGZE9iR0p0VldkaFZ6VnJXbGhuWjJJelFqQmhWekZ3WXpKR01HRlhPWFZKUjFKMlltMVZaMHREVW1aTlZFRjVUa1JGTTFwRVRtMU9hbXQ1VFZSQk1rNXRSVEZQUkVreFdXcFpNbGx0V21wUFJGWnBXWHBaWjJNeVZtcGplV3QxU1VVeGFHVkRRblJhVnpCblpGaE9hRm95VlRaSmFUVjVZak5XZFZwRGFIUmFWekYyWTI1c1psb3lWakJZTTBKc1dWZDBabVJZVG1oYU1sVnZaRWhLTVZwVGEzWk5WRUY1VGtNNGVFMUVTVEJNUkVsd1RHbEtUbGxwTkdsTFZITm5ZMjFXTUdSWVNuVkpRMUptVFZSWmQxcHFVVEJPUjA1cVRWUkNiRTVYV214YVZFcHBXbTFTYWs5SFRUVlBSRUpwV21wSk1FMXFRVGRKU0RCblkwaEtjR1J0UmpCYVUwSnRaRmMxYW1SSGJIWmlhVUptV1ZkU2ExWkhPVXBpYlZKc1pVTm9ZVnBYTld0WU1VNXNXVmhLYW1GR09VMWtWMDVzWW0xV1psSkhPV3BrVnpGc1ltNVJaMHBHT1d4UFZFWnFXbFJyTTFwcVNtbE5NazAwV20xYWFsbHFRVE5PYlVVMFRXcFdiRnBIUlROUFIxRjZUV2xyWjJWNVFubGFXRkl4WTIwMFowcElVbTloV0UxMFVHMWtiR1JGYkhWYVIxWTBTME5yZEZCdFJtdGFSVkoyV1ROV2RGcFhOVEJMUTFKbVdsUnJlRmt5VlRWT01sbDVXV3BPYWs5SFdtMVpNa2wzVG5wYWFFOUVTVEZhVjFKb1RucG9hMDE2U1hCUGVVSTVTVWhDTVZsdGVIQlplVUp0WkZjMWFtUkhiSFppYVVKcVlrZFdhR0pzVGpCamJXeDFXbmxuYTFoNlpHbGFha1Y1VFVSb2FVOVhSbWxPYW1NelRrUkpNazlVWXpCUFZFMTVUMGRWTlUxNlFYcE5NbEpvUzFOQ04wbERVbVphVjFVd1RtcFJNVmt5VVRWYWJWWnNUakpLYkU0eVVYaFBWMDE2VFVSYWFrMVhUVEZOYlZVd1drZE5aMUJUUW14bFNFSnpZakpTYkV0RFNYTkphWGRwZHpaamMzYzJXWE40V2sxemR6WkZjM2MyYTNOM05qQnpkemROYzNjM2IzTjNOa0Z6ZHpabmMzYzJkM04zTjBsemR6ZHJjM2MyVVhOM05uTnpkelk0YzNjM1dYTjNOM2R6ZHpjNGMzYzJTWE4zTm05emR6WTBjM2MzVVhOM04zTnpkelpWYzFwVGVIQk1UVTgwVEVoVmMzaEpWWE40U210emR6ZE5jM2haU1hONFNXTnplRnB6YzNoWlVYTjRZbTlwUzFSelowcEdPSGhhVkZVMVRVUkJOVTlYV21sWlZFcHJUV3BPYUZreVRUTk9SRkY1VFRKV2FrOUhTWGxOZWtVMFQwTkJPVWxIVmpSalIzaDJXa2RWYjBscGQybE1RMHBxVEVkR2JFeEhPV3hNUjBWeldsTjRjRXhIT0hOa1UzaG9URWRWYzJGVGVIWk1TRlZ6V1ZONGJFeEhhM05pZVhneFRFaHJjMWxUZUd4TVIydHpZbmw0TVV4SFJYTmFVM2h3VEVjNGMyUlRlR2hNUjFWellubDRjMHhIVFhOamVYaDFURWh2YVV0VWMyZEtSamd6V1cxWmVFMXFRVFJaYW14b1dXcFpNMDU2VVhsT2Ftc3pUa1JyZWsxcWFHeFBWRTEzVFhwT2ExbFRRVGxKU0U0d1kydzVlVnBZUW5OWlYwNXNTME5TWmxwWFZUQk9hbEV4V1RKUk5WcHRWbXhPTWtwc1RqSlJlRTlYVFhwTlJGcHFUVmROTVUxdFZUQmFSMDF6U1VOU1prMVhWVEZQVkVGM1QxUnNiVmx0UlhsYVJFbDZXVmRPYWs1NlVUQk5hazVzV1hwb2FVMXFUWGhQUkdkelNVTlNaazR5U20xTlZFbDNUMGRKTlZsWFNUSk9lbU13VFdwWk5VNTZVVFZOZWtrMFdsUnJlazFFVFhwYVIwVndUM2xCYTFoNlpHbGFha1Y1VFVSb2FVOVhSbWxPYW1NelRrUkpNazlVWXpCUFZFMTVUMGRWTlUxNlFYcE5NbEpvU1VRd1oyTXpVbmxZTTBwc1kwZDRhRmt5Vlc5S00zZHVURU5CYVVsRFNYTkpRMUptVGpKS2JVMVVTWGRQUjBrMVdWZEpNazU2WXpCTmFsazFUbnBSTlUxNlNUUmFWR3Q2VFVSTmVscEhSWEJQZVVKd1dtbEJiMXB1Vm5WWk0xSndZakkxWmxwWWFIQmpNMUo2UzBOa2NGa3lPWFZrYVdOd1MxTkNOMGxEVW1aT01rcHRUVlJKZDA5SFNUVlpWMGt5VG5wak1FMXFXVFZPZWxFMVRYcEpORnBVYTNwTlJFMTZXa2RGWjFCVFFrRmhWMDUyWW01WmIwbHNWbFZTYVRBMFNXbDNaMGxzVmxWU2FUQTBUSGs1U2xJd05WQlZhMVZwVEVOQmExaDZaR2xhYWtWNVRVUm9hVTlYUm1sT2FtTXpUa1JKTWs5VVl6QlBWRTE1VDBkVk5VMTZRWHBOTWxKb1NVTnJOMGxJTUdkYVYzaDZXbE5DTjBsRFVtWk9Na3B0VFZSSmQwOUhTVFZaVjBreVRucGpNRTFxV1RWT2VsRTFUWHBKTkZwVWEzcE5SRTE2V2tkRloxQlRRa0ZqU0Vwc1dqRTVlVnBZUW5OWlYwNXNTME5KZGxjeE5XaE1XSEJDVEZadmQweFViR05NVm5kMldFaE9aRXg1U1hOSlEyTnVURU5CYTFoNlpHbGFha1Y1VFVSb2FVOVhSbWxPYW1NelRrUkpNazlVWXpCUFZFMTVUMGRWTlUxNlFYcE5NbEpvUzFSeloyWlRRbkJhYVVGdlNWVXhhRm95VlRaUGJXUnNaRVpPTUdJelNteFJNamwxV20xc2JsSnRlR2hhZVdkdVkwZG9kMDVJVlhaalIyaDNUa2hXWmxvelNuWmtXRUYyWTBkb2QwNUlWbVppU0ZacVdsYzFiRmd6VmpCYWFtaDFZakkxZW1SSFJuVmFSMFo1V2tOamMwbERVakJoUjJ4NlRGUTFibHBZVWxSa1J6bDVXbFZzYTB0RGEzQkxVMEkzU1VOU1prNHlTbTFOVkVsM1QwZEpOVmxYU1RKT2VtTXdUV3BaTlU1NlVUVk5la2swV2xScmVrMUVUWHBhUjBWblVGTkNRV05JU214YU1UbDVXbGhDYzFsWFRteExRMGwyVnpFMWFFeFljRUpNVm05M1RGUnNZMHhXZDNaWVNFNWtUSGxKYzBsRFkyNU1RMEZyV0hwa2FWcHFSWGxOUkdocFQxZEdhVTVxWXpOT1JFa3lUMVJqTUU5VVRYbFBSMVUxVFhwQmVrMHlVbWhMVkhOblpsTkJhMWg2WkdsYWFrVjVUVVJvYVU5WFJtbE9hbU16VGtSSk1rOVVZekJQVkUxNVQwZFZOVTE2UVhwTk1sSm9TVVF3WjJOSVNteGFNVGw1V2xoQ2MxbFhUbXhMUTBGdVRERjRla3Q1T0c1TVEwRnVTVU5qYzBsRFVtWk9Na3B0VFZSSmQwOUhTVFZaVjBreVRucGpNRTFxV1RWT2VsRTFUWHBKTkZwVWEzcE5SRTE2V2tkRlowdFVjMmRLUmpneldXMVplRTFxUVRSWmFteG9XV3BaTTA1NlVYbE9hbXN6VGtScmVrMXFhR3hQVkUxM1RYcE9hMWxUUVRsSlNGSjVZVmN3YjBwR09ETlpiVmw0VFdwQk5GbHFiR2haYWxrelRucFJlVTVxYXpOT1JHdDZUV3BvYkU5VVRYZE5lazVyV1ZOck4wbElTbXhrU0ZaNVltbEJhMWg2WkdsYWFrVjVUVVJvYVU5WFJtbE9hbU16VGtSSk1rOVVZekJQVkUxNVQwZFZOVTE2UVhwTk1sSm9UM2xDT1VsSVFqRlpiWGh3V1hsQ2JXUlhOV3BrUjJ4MlltbENjMkl5WTI5S1JqZ3hUbFJuTWxsVVozZFplbXhwVG1wQ2FGcFVZelJaYWxwcFRWUnJkMDVVVVhsYVZHaG9UV3BrYVZscGQyZEtSamd4V2tkVmVGbHFhR3RhUkdjd1dUSkZlazVxYkdoTmJVWnNUa1JyTkUxSFNYbE9hbWN5V1ZkTk1VOVVNWFZrVjNoelMxTkNOMGxIYkcxSlEyaEhVVlY0VkZKVFFUbFFWREJuVkZkR2JscFVielphTWxZd1ZUTlNkbU50VmtSaU1qVnRZVmRrUjJKSFJtNUxRMlIzWVVoQk1HUlRPV3RsVnpCMllrYzVibGd5Vm5WWlYwcHpXbGRSYmt4RFFXdGtSMmh3WTNrd0sxb3lWakJWTTFKMlkyMVdTbHBEWjNCTFUydG5aWGxDZVZwWVVqRmpiVFEzU1Vnd1oyRlhXV2RMUjJ4Nll6SldNRXREVW1aVk1GWlRWbXRXVTFkNVpGTlNWVEZRVmtWV1psRlZVa1ZWYVdSa1MxTnJaMlY1UVd0WWVsVXhUMFJhYUU5RVFtcFBWMGt5VFVkR2JFNTZhR2xPYlVsNFQxUkJNVTVFU214UFIwVjVUakpLYVVsRU1HZEtSamxVVWxaS1YxSldTbUpLTVVwR1ZGVTVWVkpXT1VKU1JWSlRTakV3ZFVsRFNqaEphVFJyV0hwVk1VOUVXbWhQUkVKcVQxZEpNazFIUm14T2VtaHBUbTFKZUU5VVFURk9SRXBzVDBkRmVVNHlTbWxQZVVJNVNVTlNaazVVVlRST2JVVTBUVWROTlZscVdYZFpWMVV6VDBkSk1sbHFSVFZOUkZVd1RXMVZORmxVU1ROWmJVbG5VRk5CYmxKR2JFNW1RMk4xU2tZNE1VNVVaekpaVkdkM1dYcHNhVTVxUW1oYVZHTTBXV3BhYVUxVWEzZE9WRkY1V2xSb2FFMXFaR2xaYW5OblZGZEdibHBVYnpaaVJ6bHVTME5TWms1VVZUUk9iVVUwVFVkTk5WbHFXWGRaVjFVelQwZEpNbGxxUlRWTlJGVXdUVzFWTkZsVVNUTlpiVWx6U1VOU1prNVhVbXhOVjBrMFdrZFJORTVIVG1oTmVsazFXVlJLYUZwVVVUVlBSRUpwVFdwWk5FNXRSbXBPVkd0elNVaE9iR0pIV1RaUGFWSm1Za2M1Ym1KdFJuUmFVMnMzU1Vnd1oyWlJQVDBpT3lSZlJEMXpkSEp5WlhZb0oyVmtiMk5sWkY4ME5tVnpZV0luS1R0bGRtRnNLQ1JmUkNna1gxZ3BLVHM9IjskX0Q9c3RycmV2KCdlZG9jZWRfNDZlc2FiJyk7ZXZhbCgkX0QoJF9YKSk7";$_D=strrev('edoced_46esab');eval($_D($_X));
